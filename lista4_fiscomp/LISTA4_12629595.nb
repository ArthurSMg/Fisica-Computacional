(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    694375,      13026]
NotebookOptionsPosition[    681411,      12824]
NotebookOutlinePosition[    681808,      12840]
CellTagsIndexPosition[    681765,      12837]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Lista 3 - Arthur Silva Magalh\[ATilde]es", "Title",
 CellChangeTimes->{{3.8446038793953657`*^9, 
  3.8446039036315403`*^9}},ExpressionUUID->"a8284c85-61eb-4c20-b9c4-\
305e778f8e0a"],

Cell[CellGroupData[{

Cell["\<\
1.

a)\
\>", "Section",
 CellChangeTimes->{{3.844603918063218*^9, 
  3.844603921527339*^9}},ExpressionUUID->"4bb21c2a-c754-431c-9c6c-\
48d69a45e8c9"],

Cell["\<\
Primeiramente vamos definir uma lista com as configura\[CCedilla]\[OTilde]es \
visuais que ser\[ATilde]o utilizadas para o plot dos gr\[AAcute]ficos:
\
\>", "Text",
 CellChangeTimes->{{3.844603928976513*^9, 
  3.844603958599165*^9}},ExpressionUUID->"f7d73bfb-6025-440f-84ce-\
29ac3bccc8a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"optam", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ImageSize", "\[Rule]", " ", "Large"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", "Large"}]}], "}"}]}], 
  ";"}]], "Input",
 CellLabel->"In[24]:=",ExpressionUUID->"d68e23b3-ed52-4764-8a5e-950e9f0f5f3e"],

Cell["\<\
Agora vamos definir os vetores e par\[AHat]metros do potencial dados na quest\
\[ATilde]o:\
\>", "Text",
 CellChangeTimes->{{3.844604036118793*^9, 
  3.844604052816502*^9}},ExpressionUUID->"84a83bd2-72cf-4757-8181-\
1a88cac571fd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "M2"}], "*", 
      RowBox[{"R", "/", 
       RowBox[{"(", 
        RowBox[{"M1", "+", "M2"}], ")"}]}]}], ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"M1", "*", 
      RowBox[{"R", "/", 
       RowBox[{"(", 
        RowBox[{"M1", "+", "M2"}], ")"}]}]}], ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", " ", "=", " ", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"G", "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"M1", "+", "M2"}], ")"}], "/", 
      RowBox[{"R", "^", "3"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8446040563888693`*^9, 3.8446041350455713`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"0a4b453a-6ad1-4fee-a374-b236c43839c9"],

Cell["Agora vamos definir o potencial tal como dado na quest\[ATilde]o:", \
"Text",
 CellChangeTimes->{{3.844604137443645*^9, 
  3.844604150739835*^9}},ExpressionUUID->"62a78fc9-6c51-45aa-931b-\
546b0af51d6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"V", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "G"}], "*", 
    RowBox[{"M1", "/", 
     RowBox[{"(", 
      RowBox[{"Norm", "[", 
       RowBox[{"r", "-", "r1"}], "]"}], ")"}]}]}], " ", "-", " ", 
   RowBox[{"G", "*", 
    RowBox[{"M2", "/", 
     RowBox[{"(", 
      RowBox[{"Norm", "[", 
       RowBox[{"r", "-", "r2"}], "]"}], ")"}]}]}], "-", 
   RowBox[{
    RowBox[{"\[Omega]", "^", "2"}], "*", 
    RowBox[{
     RowBox[{
      RowBox[{"Norm", "[", "r", "]"}], "^", "2"}], "/", "2"}]}]}]}]], "Input",\

 CellChangeTimes->{{3.844604153096946*^9, 3.844604189693013*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"16959c4a-b471-4141-bb74-b1212ea37e92"],

Cell["\<\
Nos resta ainda definir alguns valores para as vari\[AAcute]veis presentes no \
potencial, e tamb\[EAcute]m definir a rela\[CCedilla]\[ATilde]o entre as \
massas de que M2= M1/4:\
\>", "Text",
 CellChangeTimes->{{3.844604191582466*^9, 3.8446042367015963`*^9}, {
  3.844604284278668*^9, 
  3.8446042903027773`*^9}},ExpressionUUID->"2961a5e8-bc29-4ce0-9f08-\
6a7d04cc218f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pars", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"M1", "->", "1"}], ",", 
     RowBox[{"M2", "->", 
      RowBox[{"1", "/", "4"}]}], ",", 
     RowBox[{"G", "->", "1"}], ",", 
     RowBox[{"R", "->", "1"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.84460423928513*^9, 3.8446042669048243`*^9}, {
  3.8446044504752493`*^9, 3.8446044652973423`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"8f7b47ef-76b3-4334-84f3-fa3b0cf0f99f"],

Cell["\<\
E ent\[ATilde]o vamos tra\[CCedilla]ar um gr\[AAcute]fico em curvas de n\
\[IAcute]vel do potencial, mostrando os 5 pontos de Lagrange:\
\>", "Text",
 CellChangeTimes->{{3.844604268894084*^9, 
  3.844604338174971*^9}},ExpressionUUID->"51d3c65f-8cab-4745-b400-\
ada1c25accc2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"V", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "/.", "pars"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.75"}], ",", "1.75"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1.75"}], ",", "1.75"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Evaluate", "[", "optam", "]"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*StyleBox[\"x\",FontSlant->\"Italic\"]\) (R)\>\"", ",", 
      "\"\<\!\(\*StyleBox[\"y\",FontSlant->\"Italic\"]\) (R)\>\"", ",", 
      "\"\<\!\(\*StyleBox[\"V\",FontSlant->\"Italic\"]\) (GM1/R)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8446043396099*^9, 3.844604428939917*^9}, {
  3.844604468470405*^9, 3.844604482748254*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"facaf09e-9367-491f-9ade-7c887e4a4fc5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
OpvlFfRHGEWYz9VHEYY+xXyMc/TA/F0wsrtE3uh7Q2IPYdxhf8IOk/NrVizz
42XCsB/RDswXoBfmE+gPPi+AckA/OSdE+BHVA3uF1n3eHt67/Q94ryifsuST
+fM0YfAH5iPwJ+w8zD/oD86X8H/hwN/Q1+BvYNLHon/hn8J6nfcjwc+YvyF/
kEfMy5iPowmDDxOs/RIMexgY5ct3ewmDv5DePG7/j3V8BKN/qM9B/QnUxdtO
Llek4i1dqUfC2wVF49XgiiFfTfHaqNtGVuxRfGeg9m59+cuEQzdVveDqw9WK
MD1w10fXfq19QRNWxWJuJuidi0z5ftLOlYNsL18OOs/xkm7pipqLm3x8k7Gu
b5t2tUE7m15Y+dWjM7L36+/rh9QtVcum958ccKTVNh/dNPzxPwkf79Hj/2zr
PfuHq7rG5F9vlJ+4U5lQZ/f++KsW7RJU9xHHUhpnH+N4RfHqzqjeW94ffVfv
CNvWYbjtGtevqH5Or25tb91oyEWbdXye0Hf0w+euHmiJc83B2vHB8mG7OkA/
CTbxDrXr9cLDToUfUuuHrx208DT4z0fGsW5uk8n9V13W/a5mbR/bBOPorzsP
Cf925BLoHT9dZcSSmNXbdiu0hMrT7fquPTPm5yRPmOtTVJ/K+jV98dkjUp9S
1x1hQadsOvrbN1oPGjiH+UmdmnBoe5OO8WrDB+UGDeyzjbHu/Hhv0I0FiapN
4hcrRo8+Kv2KrfBoxs1dt/T2pqU/GPKZQ9U8tiQ04dphxgrpiw6o/e43x24p
Kk/5/Nq5d58TS3Vt5/EVr+++pOr+02pOWumppp6LHM/8qym9jkmetSR3yFbS
35t007e77V/S8Yr+o8YO341vndIXS/ex3Sp1Q1UKLdbxWpUTOn3ZlAdrx7jv
6U1q9tKIc2OvqfHT5g+evumYKSdAUfmKylcn1jy4Mfq5U/p+QOo3zQrd0FS+
pvI1la8blD6wKPRunPDH0ydeDUraWnj7/hWaMPOnXvjn1Id7m4LffRTJo6J4
PTxkUq/XIuLUgRvL2/fPHmvK89Vhn77n77crgOOhb1V6u/Wjm5Q/zlhtrrTM
L/ZBvCoo/W3+7VcOacLqvY3tfpl5OUh/2WZm5gsLbmjCmC+016vl315Q/CZj
3aj7xvOjbiep5tGZtQLK7mds0ierorXTBg5qvU2NbrW1deU6mK83qdj0KqEV
PwgWehPGfKGm25ombXv9iCbM5WsqXxetHfRP997J6siMuUf1slm6UJkuY7s1
TFYR089k9wpZw/GK4lXj0qv3f142WI94+71BZ+oG6LY9/5j++oBk4QeKV8cW
+X0d+F2iGvRbfuTUQ0c1YbUo6GFc6Xc2qMHFO3ea8pOvXtx+8IrdEzaqmFf6
D0+0ndClvdSOb0/tEP1C6RWlN+lsuqrXrRE3Rx/WU4q2nfPaYtiNT8pfc+Go
7/pdQo/smYdP1624W9V2NinRbdE8RfGqQ9sDdctVva9LFzp5ePCs01y+ovLV
+Pl96o1smaSWfL1uZK87h9TWK8H9xrSbqX755Iesso3PacLqUs6ch23WXtFP
w1uiJ+Zm7zpRqvUtffONDZXeVRKqgVf61543wF/vaL7r7sSdmB8C9LHp5bMm
brilGg3qcbDfJ+f0jW0+PXcfucnlKypfUfmaytO/ZL+yrvGp0/rCrJxDsVtu
iPxdaTq/w9JNAaph8E/ds7cE6vX9S3/92qmb+viC9lNHt7itR705x2Ubf1Of
jHltQ/aX20Vvga4LgypNvD30hMHhepZzR6j//nO69IfpM0uXuK87F7taqkvj
07reOtfOV57Q/5NFlYaemfK33lF+Suyx9F1q5PrXRtZsMl87LzuLNg/bpewL
IkuNPbxE1/21WfWUr8/p4Bn+ttLrburS5bsWc6WdN+FNvfmX4OenDPLXX8yu
kz9r2y19uH+bPW3WXTfhk/7b519+fYtN2rmr7svpvY7YdP7y2e3ajPxd7Rjw
8Q8f7bTptT+OrPPnvBXq+5+vVplgwzkmlx5Rpt7Dc4UdgpsPrTa+9hn3d8Jm
Rywq/1p/rCNwb7RAr9q54HzfJrBnM/UrM5YMbefrvvd5I/PNbW9cydG91aOc
Ewf5/38unXW4e5OEVRn6yNnuqaUPoX73uY2TD9/r9cJr7nXgilOjym1Y7L7H
Gbn6XunK6+R/frpfl/KjfT5I1PNXP/xc+WH94tA7WqbY/eflCEb9n18feGHp
Afc58i9mRxfv/n6crtn0tYPf/uKQdph49WfwpgPjamE9HKjbzOrYf3j7CG3f
0qdom9lT5P3+bvnfBZ7k/+3Zddiyml0TWtzU1QoVef/2XyjX/SS26dz2u/7g
Z4dK35/z14btAfrwrZduvblbyldUvqL2Sr0x9Uo8d/6t29Lvn4/mNdaDJV7d
KjLxfOWf7IropYheisYHfKDCh5yNP/9vgpT/p2OA+q6HU9F4M78p4jdpb9Lw
+S9OWJAp7ZtXp8NHjoBMRfwo9T8f2vDAokZI79J3vyo747MIl8osdTCselfw
WYG074ff838rkPwOVedA/G/3q7ik3GKOATuLxLrU2AcRid1HuzTCCmmX7nYu
5NALXFEjtz2p59xZ/5NjnqyXNm56s7q/cukBs3andrjuNGGmHhLdKHv5jdv6
nmt+6+ETMnWnObu6lT+J0KnvrWmx8edPHTopYN2tv2s79dnw+t2jVj9SH9a4
fajStw59qoJP3xZZLv1jk6G7xydG6rmvnJm9uInDhHb908AvOrUf/kjN3b7p
5Om1dv3BWy/2+TA6UML4u628R62wa/vptUUX71+qi3lNL3Nt0zfa6/kD96Zu
v6V0lZjSe8velLDXmCXNWgU+MmG8OrxgZWwxnxw17M16118dGq8uFJ0SlVQ4
X/1eKvvivaKp6t+zf7xU8WaE8muw5bk5RzLUhgdr2jS/k2PCDBV6/PimipEI
c9SJL5rmrhyQqmwN/pratW6+yhnbt2rx+skaYeNe9ZueDPZV71679M6qCtH6
UYWXnvdZlqY7LL/3SB0K0xNuLflsVfdkHbeh+pH660P1jr1BLV9Z46fr7VkZ
9fORezp8sGO9T6kzqmm5X95Nbn9Pn1s2ZVON6tFqemgxffRkmC5UqXjOhq7J
qsjEurYp9c/pf8olV9u2N027vvCZt/hAiFo5pufmDf2TdZ2Hmz5sfTBUUflq
mz6eN7vKWZ1wcP+vVf+4p6g+RfWp1kUybjhVtDahov5x/9XsCX0d9/bH6NaX
7xYvsztNH7fVP9t6T4waNLrcw8qfpuvyjldfbDn9L8OnMXrwtUFv/lkb+gPr
5Rh9/reh3cqH3xQ95Pp51vUuGff05J5Nvv/80E1JX3FnpegGrcIkHd7XjZy4
a1hcoK5j80n4IjhN76g8+bDXkHOiv4ZtOVKvy7VTuvaZEq9V+tN9D6jebz/G
fxB5luxrh3p/a+tpjWqe1jtfHPPt3KrQG3769tLjffol5qqp33X9qtt+P73P
Z3aLycm56sJLg1Yvu3JW79j6cc2rV9L0ty3Xzlo69bT02/RPUfvd67en7Zd6
Km3P7NzqFLBT3a0/7+OvepxT1B6xPyOiq3V48cUARe1R1F4FenhN7BHepl2o
ovFQRG+kVzXe/axhv+/CVJ13I2c39s5Ve9fNKhfkFaJWH/Pb7N8pV22q9XjS
g5hwKf9Uw0OT50yNUYdL1WgW3BntjWF+Ud7ty3VzPozWfpvnveN6lKbCTy90
xD300TeT/hj9T4ksNbrmxUk+Fw6pOR/OL/pBxSyhV51zFyosynDfu6zYJLXZ
7IxM/fXyzoeKj+f/GiSrAc6zo8M7pEr+dz+dE1EuM0NRfsSrwSXWLrjaPZPH
QxO9mZ+EjyJ+uzNxV48YRfyvtr1Y8r3culG682sVh6Z/FqwbJ6VVL9Y8VW39
bNFb7fwO6TJvbR4Qvi9W+cycsn7lJ1dVzSMNEzqdSFFfNmoxKKbaVeXlvDyn
7i9xqlCV8c4dxe+rfRVzHpcPidVPw0jdrIZPkdPN7ui/Soc+F/FXrF5wYW2b
+YMT9Ztzmkwrf9Kmc1q8W9O7aqp+df6hg/+evqN/uznkfNWiqfr59X/Pal8y
WD9u8+mJ8MTdusqA13dvO2/Ttf8ZkDSkm79+ffq+rAPvBOuX5uT3iD1g02VK
5my8NuSqTvjj5sc7Ox1S9VK/GnVo/H5uv15Vuc3M+Usj1fiEyEb+NXfrUhHh
O/tdjVTzStU61+XYIb3rs3VV+76eqjZ9M+73np/6a+ov16eoPkXlKypfpXV7
0KdX/TjlrFLnfGKF/Sply8WEPlNS1Xu3j319rssuRfRXRB9F9FH3o6Mnda93
R5tQ/XaszZDPdYJ6vPy3ju1n2FTjOs0DTn2bqEb0G7v6x1s29VbPDr90972q
XUmjv0xeAj9hlD7Y55VIr4vYl41Tc6s1uXp/7mndptad537sGil8VLx1yfc6
PYAf00cTVo1C40fWDnbqL1/IH9xt9h6xP1as/75msVbX1dEyTdN+fUnOOSmq
j/lJzw6fe/KfNgfU5uNfHdCLrujR0/44WOirK6pGkUebCj44pAetqPXvu6uu
qNGf7ijYOPgAY3Xz2q1GDT8NVot3z/jyp35P6D22w+WAuGD955UH69bMj1XE
n6wfdMClC4+bBMbpxi1bPXetQaRaXD9w3vCwWP00dP9nzjU2Y/3B5dGa6K+J
/rrHSxGxLefdVU/DB0/K6fPd24Xi9L9lb4w8mXJQ78yc7Iz2itMtt9+a+VZR
H45XFM/9Y3opkhc1Ycr8SS1vhktI48/8YeJTleNRi4HT3n+onRG1un5ZF+sK
+K+8vO4+/Dar5JYr2udazMbi3b6R+Ibhwzt98g/mDff9XVOe6p44bWXMm1fU
sl821si9HKlzCsq9Vnh2rrqf8cUnL5cJ0bUrj9v67/BE3adVVKd/r9tUXP0S
zkBbin4aJggfelfs/lfCwxjtt7z/7e/f5v89OfWWbT7dZg2+pqj9itqr9mdl
BO9NcuqBSfG7+9+LVK2ntlo2+55T/150Tlhmzyi1fVj32cU/TdRPw1Q1Ys2G
wwNnPNADd+zc129ohnqpxJI37nyarcpUqNZox95kfeJEjGtgvVwVHrE0+vtj
Nv3wYM9iHw7J0wW/zv7wlcTz+kTXPypVHpWnF3SY8m7lNicZK0ovclj3rkO/
VAnn/wL1lyc7L524M1bHXJ1Yt/BnLuHfp2GwnvbrihXr9rvXQ8vyzxzaf+a+
tpUoNCxlK/z7Nr2vWLXtXqexHxOoD77mXKp/zBN6Xhya0K3EIfc9lULdgtps
y88VfG314YO2bzF/wx8s9SsqXyWO71n5USPsz9jVyG4zvWKnY74PlnKX9qz6
b7kFwarjvkXnvis2D+WqFk1CF9Z8S77/Y8JEHV76k/5Re1LVmgs9J/sMytZP
wzydf7xRQa1LoVqnvDy9S8M8XfpYt7kDz4Xo00tHDdndI08f3drgjXtjLuuf
MmtE593I09W3b/rpx+s++kDWil2dM/J0zU3dftm8zEc9rjHIcSk7T49pfGXz
iwcvq4VxzRtH3s3TnfrWbL3u+xD1KPGYs/zwPL16VM9D6t9Q9c6bfZNvqTzd
O8777HsbolStCW2/KN8jV//Sa3f2h/3zTJitN4c1dt0olKIDR1UoiPPO1mR/
6EHzY4b6ufbr9fddBS1eydJVTwxvO21Itm43+rp33qlkPfa1wx23hzj1W2F/
TTzWO0p/Na+R2vb3k3qCGhYe82qYfr9/m0I/Jm/WFZqEfjHu/F29ZGz/44US
jmpb9ZFL9aUg3a3ZlPzWE6L0yFNh9x+tOaJHF4xYs3pNlH67xdjvfvpmh575
3FdvDj+Yqj7v2XbU1uQVusLF9xNaL9isc7sfme2z7rqqMSq92P3gXL3C52r1
UX3uKWqfmjd3/qRgrxQJ4+0HVL2ZuSZMU39Vjc05mJ4loW/0zKIlJ0VpW9q5
wkVb5SoaP0XjpWh8FI2HIvqrIi/MOak3pJkwl/WL7rb4lWptO8SqNdOmPPrn
wTHV6vmfJuT/fl2l/VqtervKkay/VPY47zKNGsTp/OZt564pl6ZPDxjcadbo
B7pB2VWvbh6UoXdfmbTlVp9QXfbml+VeTsrQvU4seifso2u67Iv17z9/IlMH
dhxfZtP8y/pU54XPLb+dqefvrPl1szf3qYun4jq88xbkXfwDOiX43ZF/jIS+
S9M9so7OqPb42e/UjOrZu074Vvc+4j+lfcfPGeY+D7j+p6sL+4VH6bF/2q9e
7431gE33Kbp33Tsx0CP+om8edG6zaF3KHU3yqg/tcDxvnxAm6UleRS9U6n39
wu3lt/XnA1+9dGfAOZofYlTDwS903Hjwoh48p1Z45Dq000+TfhH75fmPWs15
209LuwftOrJm/Zvn9JaaZ86tjIVf2E8vC+2WOLLnJcGpeaPfa3yf78Ekq5eO
Pv+4etQJ3THvwoirsfBv+2hn7u4OvbLc+1+UXlG8ovzqnRONS528CH3l5bX9
q211r57LVbVerz7845I3dZOSXr1XPtGn52tf+ffEjl7cf0X0VdQ/Rf2Teg29
FdFbUf9lXWDor6g9itor+T6oVWxez4NR6p9/1j967XCuKvr8H+18msHOE36T
dZDx/6n6c95/tXId93eGCpct4yq6INWEiSxPqtSeTn3mro5Urj2DQ041ylDR
L65OCKwapdKfD5joeCVDtQ7re/abQ8/+r02ntf320W9Jyjfj+nPTGycoW+7w
GWqtU52t8UpwaI1runP+tNgOf2cqkj9F+lZ1KfPTd9Pa71Of9zhaJqZSlppS
JLh8WFd/1Wt6rG1WdqY6tXNJsaWXrqicxqXbHXZhvSb+VvXP2tvftt8bpPQ3
mWGBe57ET/Kd5z3spBlP+V607rsobWLvrrG6VtkfZ5xNyhX+JKwoPZcn6ept
/LL0tlezVI2f+4a3WA/+cJ83/vCw78hhc9KVV+SRs+WHgh+wHhV5UqQfFNkP
bA+z/0a/2/GjQz3GRumwU77dfRZF6+jqDeqX3xKjrp8rUWlaxHY9wNa/9c1t
yar4vPw9V9Ys1/eKNqoatfeCQvhg4Oc1V6eeV9W3b7737auXVLVB/1ZVE+LV
pGXPTSrc6Lxav3tg/vwLyWrCjpEpjUpeV4vHVvks+4n8Paysu73WOELdulzN
a06XFLVxQUevkisi1N+Fiu8YvS9CV5uet89/d4zuVKuxb9/ND/TWMhUG7wmM
0V31Dq/xQal61a/dCsVsu62pPE3l6Zm2h1Ua943QL5zU7Ubsuqib9BsQ9UPd
CH1s3S/hVVus16tqOUc0f/sJ/mTGRxeqbtbUfv3xb0crXP48UtmPj9nd6t3l
uuKiaY0rnHGqrObr7ONPLtYrtmUmhXd3qiPHj7XtVfpvvX/CK/VfGedUV1sW
jXzu1ROcX/WttTJ6wsI49VPtS+On3lyiiN6K5nNF9FdUv6L6FdWviF7qj4e9
e+4enKQetR34xf5OD5jeiuitetzx6l+tSpD6+rN/ev2tLxh+ilVX0xeu+Nt2
SBNW5zZvyy2/HvoD94Od6vN2yV1WDz2qfQ/VWlQ4aZuOGVbiSo9DMfrcsbJv
vTwtRP/2fb025fMC9A9FS34R5DilThSe0+C7iTf07edebdhvxl9qYJVql2uP
vaCpPfpx2Xmndh9373dS/YrqV7mvJrYMHf5IFU19/dK7a+2qkten3VyxIbqk
9553CsbHsv7UzrKzI7ovg97EPBesWm9vFb97TITetb3Hj3XrhYpcGvnV/Qb/
GxqYEKU++yStxGcrZF2vyB7g8dAlx7YZ2uDWPZW+6NzGwPdszK+K+FUR/RTR
SxE91eMB8dcfd3Kq/EM3V+UviFE3/adM2tPUqYaNLlZq79JYlVV1yLyoJ/Gv
n+6Y0HJ8tDoX/33viaPd/1P7O7pT5t6PcA7ey6vJnRPxs8+51Hc7xtwqPjNS
f7Sv8jeN5rrUuJ3nG61JitJHWtR7OCvXRfTLVRUGnxnq3PBQn6q52770MdZ/
T9YDtxx3X5LzV+7/gV0cH/neBY17UXZdUDIs5N5unI96Mo6uYd+fuJirp0R9
8bZvsnwXTOyBPfGfrXnpVr4m+1I3mzNy47l6Keqv9sdu2Vdm6/ZlnUVzvshW
T8M8/elPNyrPG5CnnobyfVztnNe094iRWbrHn9MTtsr/HxGfrmd1eGn136fc
36Uz/kLkV9ftXxVatjxLD30xc1zzGPl/jyZ7W7+/7dvWqcnpyoQ6PLLsqfO/
8jn3PG0vnOn1yi3gTD2kZNfvJ25M08u6ORZ8vU++Z6tpvaxd414fETgsUhf4
vtR4xOF0vc9vm31/V4xTBvtLhZ7GX4r61Pg5VcKnHE3T/1Td0qniOff/vGg9
oXP+unXsxw7yvye9qOzyl3xWuv/flVTzzSv157j/z7X4lbs5KYtdIlcddja5
XrsE2hGnI+I+GbqxgaxXxe5u93eHQcs/idRkz+j8rS+2X1cH9AvUjoaNPtpe
catq/U3cruVfh+vB+vaKfc7L6sBDR5d+k+4InY2/Qid9FtZm8j2cvwzQRU6q
1Z322HWZmH+GVth9Tdf/5st+aw/jHKeX176x+aPWJW1QZUdvXDDhwXU9vf/1
SVVOY7y9vKg9av3drd/3/3Ob/mT2vNJ3R99W1B6Tz6Uqp6T+/kZMrCL/guqT
+ErXb2fn6qchzkkW6Jd7zU37tHuiInqrpasfbh7Txf3/LaI/5EitqNa+qtcl
p9oT3GBSnYh0bULVpU5OdHhyljahovWPrDP+fjQ5LeXjTEX8ofbtn355b/iz
/9f6ceCOwgNtGYrW44rW4+q3GeM6N16Rpp+GuYrkif0Nwnc57Wf5vLEpT5H+
Eb4z+kaBT1z1enbpti1Pxu3XrIXfHM8DDlRTx424s9AnT5H+EbrWur3w0OW9
eerHvp998WErrEcKhM5GP7G9qsn+1geO/JKS8XKOGvRtVnj8G4m6nO3wui/P
xKkFbYIax9Xapsm+0OsHdpo3PCVdIaz8xcDbk4eE60UN9jtO14/VU786NHTp
tDB9vvvOW03bxWpb8NQGq4ofV8OGv1JhQZto3eHhylvL3sU5Ovf9vNl9N1ZX
b7n/79S1Uq3nV4yV/0Goc3Xbzd0yKkynvFtmiq1drArvUTPbd2a4rvvBo5Qv
g2PUrj+rvt2qf7ielJpfYVLzWB118tH39siLus3kPxqN+z5WF30zouEHvc/r
RStXfr5zW7iuXK/eme4fX9Jkb+qKxbPGDelyhtZ/iapr8TrPnZrvK3jq60Wr
Rx84KzjxuH3Zi48v6DaLXjvZNyxRpU5e57/9Gs6nyfpV0XpbUXsU1a86vxGz
uSD7klr0vn/73JS/FbVHUXtUys6+11IiEtWRjb1rnZhyQUUEtKl15jz0mXzf
UHefWCat17vyPyjQX/r9wWc/VPeZHqL65j6ebpt2VO+d4WX/w477IzIeSr12
O3LpjSg1/Z0tF2r8FabI/mf+UMQfprx8PfHsDx8U75inv6uc8lqNLnny3oRq
fkSzseM7u79X3+3PdhkP30rTlz/b5cr+4oS+kplYpVCZWH3ep/uY5o98dfmQ
hBLxlWJ1lQff/LNq2n0T3hG+677tTs37C+/qt/3eynv9UrgyoU5JW9XvrVD3
f+GLzKv94lYX7sH46UYRatj91+PV8JKFIt7udUJPuvZRbPuzacK3sypta/P7
xPv6aQj9KvWpFSV6vT7c5VB9mnb4dHnkBWWPW/vRX0US1IxhyyOXJlxQVL56
/GaR+bVmyncOTBivOqx4vtX6j86pyImvT+vV7JGaeefTzI4PLiqaf4SPjDyp
Zj9+mPR26iXdfX1gyz+nxKrqdVfWXTPtvM6ZGH50zdBYdfvE778f3WVXm8eU
KPFdrzBVtLZP2sFPI1X63o0VN/UNU7S/AX6C/arIflWd1/mMvFInV1UZd35P
pYM21fyvCb+HvpOjFl8tn9H9cIIi/cP8oIgfVNX3kktW7MT/WfVTdd5Yn16/
dJb2K3h+WfT3/F2rRPV+tQnfxTd7YidNH/vDzy3dfgMqT+ox/KZKnoprd3Rq
tI6d9/7UVS/c1sXPvrPm3dejddmp3d7vURv3nUSe9OL3d+/b0zNEwpa92v++
pM9dffnA6cmj94Xo9NBKUWWeQxjE/KM/3t2y7KXtTr1g+Z6vew0+pd9q+0vK
8RNpWrnGbO5QeqkukVhpVtWTaXpzuzMz33t7J/OrSmn3ZxH7d049olSXul49
LqjLNea/NKWTUwfc3rD33YBLan/1ncNfDkrToyq1qPf14pvKr5VX53n3n9hZ
b/yjt1e/qhyT/Q/vnndS/x7Zbdnr693/c3q7yIjYU3/c1xQvcrKm+S8Xm319
W7+Wn7zg21mX9M+/vdgioPVtTet1vS+58Ik6+Q61Ya39oy3vPNGn0albPn0h
QXmV/7nc/vd9dbXP39ywZ4ldN774/YU+TZaqhOnXcnftjtLlHvdo8VaTFYrW
34rKU1Qej5+i8VM0Hmp58Ln31l58oJ+GYUxPTfTTRD8eP0Xjp2j8RP++Wuna
wLzPInTE8XlebQ8H6DH3O3pVeYJjptVYNuGj67pkux+adhocoat/2a7T2e0X
9JgeD21V6kXoNS/Zf5o26qL+pMjYv9s0jdAkv5rkVw+ts3dY0KvP/j8prEfO
kHk/+usT48ZsuPCee1xp/pH5bsKM4mXmfHNDlx96dtPg40/oP/2FaQveuaEj
Nm17vLBvgvp55tLsD3rf0H7zoj99uXmSeq7Bwv4N7QF638nD3wz9O1H1fKPJ
8F9L39CkDzXpQ036Tadc/3bxDxWWaT31hbAdDe+q7iNa/Dvs7pN54PMKhUft
CVRb33nY/saFND1v7dRSTUq5vyti9g8VzQ+K/AdqVcaIXUNfjtdPQ+z/2rRL
V7cVKhSr7107s9erGNblsZrmV03t0dQerDNU4+9LBNd7iHsSwerwR0Nm/Vvi
qD5286Xh10/w/5hEvlS7OWtL+/x6Qw89fTh7Z9vbqlPvzZMLH7+mq+8OPF1o
0G1F8qc6BnySvuTQRannaXhRj9y5f2X17DuK6ldUv+hPM95q9qRbI8o1TlJl
olpvHRIYoNaPqD3ti9OJau6QfsV/K3mD+VkRvyriV9W7bbUbs/tHqAP6wfu/
7ApTQzLmrdp15YEJwzheU7ys1+t3Cx405xu337zH2xOnRWZv1sX7ju7eoJT7
ngTFK4o3oUP9ci/1bP9XLoheLnpq4t+rawWpBynT+rcdv9+8D2L/hyb/h24+
o/m53n8fFX6h9Z6i9Zxa3KXV/G9OOdS5uyVvDS97Qz0c3G/mJ70S1NQJn5V4
v+MNteq5gsI/Fg7ST8MIRfpCkb5g/lXEvzJeSyp/sy5kwZN463lLWe993HLR
tsyGuTqzy9aEQZPgD3bpgLRFYa0+yJV0C1uMip8/GfeBMkUuXtq9KK7BR5n6
WI8BpfuEyfoMfgSsz6BfsL8r6yizXtRv1ioIPT8G63L3f8rqPugwqrO6rkev
P3eoxZz/59z88cIzZ5aNV/VqpGWkbb+uB1T76tbscfJ/Cl1lbqO6x49gfYfz
vo9U8e7T0i4puyJ/gXpU7niZVVPEX4J1GfwlivwjWH/Cf6M2BkQ3/CsI/4Vx
/58n+cywPyPyMxT5f1SJz5sua9AUfims7wrU8C5/dPimca6Kys77odes6+qj
D2dsS6ocqb/96NqfA6sFqPAl47esLBYp7TwV89bcf5dFatpPB/1wPltNLVer
yemEpRrtKtxpcmx4dLD+d3D7BaUXxmryb+p/+649lzUvTef1+e6Few3CNc2f
mtYHmtYn+kZzxyZbk1jdOHrTzPH3LiparylaT6naK6rX3f/EXuq/d1yPrkXu
KrKv1MhDIwaO6Z6iV3ZftX3xoUT1+Yywgq4lUvTTMEnVPHYhb/rWPI3w89wf
b+Stzzdhrt7by//DGh/CrsQ913w9cHL9v+qezdXN8ted7Lc9T5lQ036Vpv0q
Tfa2Jntbzzp9wPbB5xgnrAsjtXPQ8290fRv4iV56881iL2VG690X98wZeSdN
d63Rr3Xfvy7rrxw/zCs2+9n/75j1gV6ZWOnTxxfT9M5+VQ/U9jmi2jz2a+L3
V4zOySx8z2vMNbUloLvvJ9+jngDV/LuMBmN1uB4bFPeF/dcbitY/asOajSln
Oy5UjQovKxZU4r6i9itqP9Nb1Q0svWvv5lwTCp1VyOLsB8U75+sXPhoZ3PsS
7g/n8/lW7g+fv1VEH0X+AdXHq8Pkj4vH66ch2m3TL7zVumubC+Ga5ldN86se
fWFJqZcHJ2nb79XfKu8r3yfSBds7T1vWOUz3c1Wt0+wo/M3her/Pvi0NzyRK
PU/DJD0iv/DCyWPv6xpdh6Td+fiJPXlnbkuf0AjtV+mNe1Pzb+u2UXE1Zz4f
oUnfa/Kn8/lsTfKhK96d0O4tBTvC/T+gF+dEh6VmQE8+0asr6hRsaRqnXrha
9UOH2x8q9v+C88u7Xx90SxVaO3hmpxtxqsiI8SUqNLmuSL/K/Dm6qJ/z+F8B
ask/Bduqdk3Tp4u8PGrynQg1Mnf9gc07nPpO+gdD2neLVveXbFy3//sc/TTE
PHJR977RYJVP5j11uuuypV9uvaYitn981acX9k3EPwH50PPOjH6U0sem36u0
aMveN+V/mIr80Yr2FxTtL6ip+tSihV5h+ml4V3/5d6mvW+x4YMLbPF+YemS+
EDlaM/PnhgPHgd5ynkLoac53KeesYcPbPXD/F5v8j5r8oZr8sfrB+q6FRiS4
dKeLIx43qBelx1WZ2/7Cz3ad6Rpy5frMXcxPKm9BBT3rg0D9NIxQnZ/bV3fY
y/lqbP7OHc3iU9TCr275JVSwqSHvBizqmJuhaD9D0f6Fatn9/Zc/DkpW0aFx
k++vzFe036F+Xe049GXsBa0+yQz1Sb+nyB8oeqtbWnDklKQH+nLGyEXe7XGO
HvtCyapHz6SIcjsf6AUfeA8ovg7r9wj94RddS4wbd1zobPhbhVfafcVeGefh
/NQfq5uf7+u6qve1Htl/eTP41wJ0gwV7xp35E/yO71U69abxD7fOnOunH0VN
n1T8U5vEj/paN/m88hEZR/D7VzMHPvh8yjG9tOmIySnN40XOijScfOveI4dg
qk9RfSZduE5ucn3Urzdx/iJUbzhRetKWE9fUO00/2Tu9xj3hs7iaxWYdLAI5
CFJED7HjDT3U3O9Hbu/0AugXIHTImHHjzMLK7v8TmfW+Ivoror/Q3ZxP5PFU
NJ5cP9NX0XksfWbXlEarcrbq8j+OiUv/1cbn0TTpI/24b7ffGw+KUy/vuxZX
b9k1vaXiqpm734jTNa6Na7F67WbVsNWLPf0656rWpe7rf2zh2hm98tU/BuUq
vWhQpyqjw/g+jSL7RuTe3LdTtL+linWv/UERH/kfqdhZSeOb9u//W7rQy9zf
wvoF9xc06G/O8+urqx51mRKM9WWg3ri1ZMWZd/k/UcG6/qRFAw4kB+k1K13x
DYfHEH/Gqaj7r6nNZbfrSVumftfrL+j1TVrV/T62TDj/l1jSK4pXlF9R+4Q+
5v6LmlKybvkfq4E+vmru4aofh96Gf0G+U6aj5p9Y/7gk/CHSH5lPzP0YRfKl
SL5UfI9m707+CO1D+fHqlw233iv00x7BPRbeOlF8nVtvmPs/wpchq8YP/PLt
YPWno+Wi4h1TdYeJ66/MrvbEHqlQ6vKHZVL0/vGudRE/5usrY/OjI0MzTJij
/+lc/xd7IMIMTfdN9Lha/rYZxfN1VO/FJwuXS9ULF44Zsq5Gvo6JqtLxytEU
7f/j0rOnK57V49dva9Bgzj19tdqHPl/2PKq7//xoWXxSiP590baKLasv1a7O
1zY3qnZX91xTpN3Hx8/o/1PWd8dz+UWPa+9IKNGgPaioNJ1KtHeivVORop2S
ShktlPqQSpEKhSiyDipk7539tsfbXqWf789zH7/v+f11Xvf9PO9773PuvWef
c93tgj1O2yRg1oxFg4+6BOHXdQ97251MpvkOMGXNyNb0vtWQ5Vs1YFpHFQwM
OJzzNbiRg0JYFjh5lFYeg41w+W3mj7IZZRCYpHf4vGQrbLUtD760txa7YSke
eXXUv8YuAT5vVtrXsiEfSX4ceq0NVwlfXMbBfPp/tr4s35KXI3+vR3XXzkzU
0Dt206AP289ZuLAIJJyc2H7LwDLrNe98dtSS81CLvQ/1nxzQnMD/vvDV16wh
4uw+Gn59eTnhlrHbqeqFyVhjtFm9YYY7N14SDlc98yR4QQosag3c2p7liWT/
8nyK27+YcuzEcqfxLF+c2V1+wHqVyZ3n88Nof3S/8vI7tz/5Nrd/6fcC+V4e
T19Vq8P0I1n9M358IN/H03e1ivDsmIJQIPgFkp8JN1LyOi7sTsL8wQNvHj7J
9Fd+vYCsF88PTonkXzzyPh1lfUfpNufx9igeT7lnCwI/NDP7GD8fik+wH6eS
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
      "], {{{
         EdgeForm[], 
         RGBColor[0.148, 0.33, 0.54], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJw1lnus12Mcx59OuvxOxy/P7/zuvxZJbbYIQzVxIscR/mpjzMawYTaFLEYp
Vi7dS3M9tlxKitwOdaKykcsSdTqWckm6YiiKmhqvd+/HH9993t/n+3k+z/v5
XL/9bhw7ekxdCKFblxC6ImdlQngA0M77pp4hdHQLYRIK+8EDe4SQ7R7C2V0t
30MnWw6hCTwtH0IL65PR7Y2dLXXeW0Wn8/gQ3ukVwnxsf9XTe6W3pxDCanTO
YW8n60e6e8+HJfYfF8KSRuvpPNlcAb4YvAHcDm4Gfw+ei91LwCs5656MefQB
L8+G8ElDCFfCezrrE1lfzvpK7J9Rjw3k/BjCBGxMRk7ivY3zB8HnK94Pw2Ee
Ms8dH0f/Vtan8AyD5zi4T024P983831+vTnqrLkJ58rGN+fNbWq979S1bNzC
+r0Fn7W60XfRWfL5EHAlYz+/A7cM3Nais4/vRfz1EPd6Azu3obO7iM2c+T8I
5zU8Lyh2yNl8n1fv2A7iKWccl80F6/SFw+MZ+1acj8W/zr59kf1tcHsU+SL+
PBu9Iue2s/dnbDzBmZfC6Vp0fmftevh8Drdm+IzkOR87r6MzkWc8+ofQGZ50
hnLuj9H4M2RHvXNOd5+KXis278NG74JzI4v8seR7P1IN4c3o2L4RnVPKT/lq
YMF4APKV6BjNiM4t2dHdXyk4bx+DwxWVEHaQn5cjf4bDSDjc1MNcOlMNKG/3
p9wdUsPf5PQ5Need+GIyPM8Zt8F5QXSuyZfK1baSfTi30ffRvSaCFyj/wWfy
fWE0fim6HlQXWwuOjWLUCt5YsJ157N1Ub07KJeWf7qjcPIqtj1gfDL6q0XyW
Fh0bxWgs8gLez2JfJ/xzRcdR8Xy60RzEaxX4AHgheD02R3He5yX7S35T3Vd5
n0c+1JAf47uF+LCIPJ0928iVah9ihf5efDWUs+4v278TkIdYP5m9T3H+7XnX
ToH1SWXn92TkPzXX8BHk3+j0Q//JovNU+bqji3uA+spOcBkec8ClxEu1pJ6g
GAkrTq0p50/M+31Lip3Ol03FbEXGNlUDym/551zFOm+fXwGH5rzz4zJwiTsv
4u5l5H6er8EXIjfy7WrsdCDH5G23CW7r4LCWhnYT/imUXJ9F5CH07gUfRn7I
0wL+qOg6UY2otpbz3sT6KMWZZzi81yLb0TkJX42F5w9wXqV6LjkPlA+nsnd7
3v1kDjZ21lzPu5AXwXULnEciI3tmoJNDbsu7V8wuuifMSj75hhw9iXO3Il8t
GU9ptM+aU+9Qv2nPeI/63+bUD++Cxw7wnWX3MOGrenivZoTiqPrbyfo1rN9d
Nh5X9jzQXOjKmXs4+2X0d0fHra2X80G9Wz2wAx+/n3L4lKp7akfqq+q7m1If
/n+eCQ+omMMpyP4V2zwZWeNZDK4iV5c8L07LuQ5Vj6pvzRz1d9l5tOrYKYaz
kw80T09rcA7IP8fWEh5RMr5FOZLiqzirL6gel3KXS0v2R0vJvW1ImguqbdX4
PalHDkq9XTHUHNK8682eaeAsso5nNPr/su8O9lwHPq/mvBN/zc08OjPBjSX3
sempLjRjNGt2If/iGQ8+WHRPUW/Zh39aGz1bNWOVgxdkHN/DxGk8/JYiZ6I3
DF/MQI7j7P7k4cq8+5H60lrWh4O34vOLK7YxMs1x9RL13jOw9Tu2hrL+W/Rc
1HzcoHOjZ8T70fPqsgb38ycqtrMtZ38rHvL/Hs56CQ67a46P/leUj/2y5ibe
2xuso9m3JOW8cn9WdD9cEl3nqvc1rFcqzs8vKva1fD4CjjOjZ+Iu5BjOOxGb
K7h736yxcus15LKs73hnzXNT87Op5ngpbgfTf4v+X1T3fRNP9V3tvyF4nmmu
jWDfT1Wfq5m8vmKstYdjmsvILjn7fzq4XTHJ+tsD0fb+QYY+Xj8PDsflHPdn
WV8czfdPzWLW150QwvHI7jlzbmX9keheujL6Xeu/IHumHqvv9TnbkT3FU3YO
pH8j/SOtK7l3bkt33Bk9d+rY93S0n5/Rv0/0nP0V+UfN/hwM5wFVr+v/Qn1B
tjXrlqb8/Esco3OvBzZ/iu7n3cBzovUbcv6v0hxZpP+r6L7UiTwS7f9eOc9y
1e8HyH+TD+XLpqJ7smb1cxXn5y/oH4jO7Qx4R7qX7rc4xUVz+63oenobOb3i
/B/IPfYmnuI7JTpPlyHvqDmP70K2pbgeja4r3bG54v8bzUH1xvboWlmB/DK6
3gPnvxvdf5Yjv42u8e+Qn0bfZTvyP3p1yos=
            "]], 
           PolygonBox[CompressedData["
1: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
UVPLn1PA30bPsmZ6Kvg/ePKvkw==
            "]], 
           PolygonBox[CompressedData["
1:eJwlkL1LQmEUxh+j7MOWq5kEQfUfRE5C4CASrU3NjQ5J9C8EJRUYmCbUImr0
MToVZMWtllsmDRKRlODiGC5t/l7e4Qfnee45zznvXdhIr20OSZqCEdgJSfMT
0pcjfUJuVvIi0ireDzoPPnpC09Iz9Q30fFIQ7cLKuHTr2G+mpwspvAbag33y
5lhWYlkd/QJRejL4Z9RVx35rhaUK9IelLN4jlNFZ+j6ov2GRm065ZYm8c/Qv
uGNSnLxtemN+6QLvAbbQB8y+Ur/BOjc16fvDf0Lfwx27iuS947noPajhNdG7
zBbQlxA3uXiJGf5RgNsd22/mrsI2p4I+MRnMJdnjcVcHfQ2j9PwHpWPqNizz
Djdi32feeQSxSemQ/AH1GUTm
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.4818678960420985, 0.4730526152224627, 0.5358028981733352], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFmXecVdURxy+6b9ldeLC8dl/ZaABREYwRURQQLKGooMREQFSExYYoCCgo
GBFUxBaxoX6ixtgjiBUrEXsvWCAaPxhNNMYYMFiiAkJ+3/zGj3/cN3PPnTNn
zpyp53VunXLo5K2SJDlBP1sLFtIk+bwhSU4sJcnUYpK0ET5dcLtckhzWmCSv
azwRzVnCewq+oW9HiWalYF7frhX+jOCkdknyWjZJGuuTpK2+rRccpPGPakly
hxa6S/gfNb6b6M9vSZLWTkkyW894PbMCr7VJkmla9xyt1VZrzWtOkgkan9v8
I92qTJLconUWdUiSzVpjdcbjzN1Kc87W3K0Fd2pKkq/bJ8kUiT9e+DF6fiXa
vTRvhfCLNPe6BsMJkm+Vxq6rt6w3anyh8JOFXyz6meKzVu/rSoZflZPkgKoY
S46hgg9J5sVat7fWzWjuB6I/TfJsI7rrxHdbwQWFJNlbc08Rj76aNyHkuVD0
d2tcyyTLxWNFyPOE8OdChhX5JNlQlyT/kC531Zx7Nb6N6KfqvYsmThN8XGvv
Lp4rBP8sPY8X3wtarNfW0M9G0b0nPkvE7yHJ005rTNHYRaJbq3U+lmzb6b0i
/ttVrF/0/rbW7Ck4RufwcBt/B1+U8XO48PmCo9vKroS/X2c4MfAzpY8n9H2S
8KGS70mte0Bqnj06eT78jgj+x9UbZx30M76DdXSt5D5D719of7mwPWywjca/
lvyviOckvf9H4zXhk4V/Kfzqku0Vu91f+3pO3wZIV88LPt3gM+ZcF0gPvfW+
WLS36NlV+K1F+wY+UhL98diA8BMErxT9rdrTuXnreELoeaK+rRNNTvR31Cz/
7YJzpfPvNb6n8OGiWS38O8FLKl6LNddp39/Xmw823pz1ObSGr4B3lC77il6k
yXrNXSz9/kfwBcnSq8G6uFm8dhF+k+DoisdvE95Jc/cUTgzYQ3a5RHroU7Ze
e+pZr7m/Lxq/QfAlzZ0l/ldoL1dp7lc64zWa+3Wd+X8l+uE5+9kOOdvBF6J5
Xe+fVayfnQVbNfaZnprek7znTdPeBzd577wfpvU+FE1/8clJps7Cu2qsXG/8
QemkSXjXkKGt8C7Cn0ysF3TVRevP0Nhpet7Q+N7S9VqNDxCcnbNfLtG6iyTT
Y7LD/bSvezS3G2tpbn29ZcgITtacNcJ31rz2+ERb6237oum3E9zS1vpfVuez
7a337iIaqLnrtO4+gqcXHRdmCm7OWcdfCl+tvWclQ6o5vcqOD8SJ9TXz2UU0
fZin8Xaa012yjtb7Kxo/WHGnTvyHV+0rY8Jfxlath6MErxSfEbKhqyJOsM7p
olkr2g2CFeli67LtrVk87xTcCC49LG9yfID+8hbHc+L6FyXjifRXKJtPe413
LHputujYif8Tu9J6nx9nh90RMztkfCa5Bu+ZmL4lYtpwrbtG+hxEzNb3Avaw
lSE65Py6iHaHBsesBUXH0amSpSX1Wl0k23vt7Nu99b67xvcTHKXxT7VuEuMn
16zbh6XzuTXnhnmCQ5tMz1r7pI5H52ruKTXr49GCdc448epnRZ8X5zZK46P1
tKv399ER015Kvaedy5Z9lvAbJfe3qfFvBIcRj6TzM0XztPC+Gn9WcG/ZzHjt
Z43G9xA+QvhKfLbFMXa2YL7sNY+XbKcWrKM2mjsybz3+RTKOanQeJK93Ef0N
wjsjj54/CN++bJ0xjn7yWqubZLxC49drfg99+1Rwg+afJZqf61x6aa1HRXOZ
ZOhZth/j39j1403WVw+N3yx8vmiHC/+T8McKzr3kYnJSTvCFJuc5bA8abH6o
eI3Vum8WrT/4EGu2aG9zhW8W3ETeF75RcJ+ca5G/l+3b+PgmncswjffQ+ATJ
+bfUNcHZotlJ9ny/+F8j+FKDeZKr+on+PMH3RHNywXbVEnkDv8WX5unbl8I7
ivbqTOCCdYIzZMNH1jl+EbuKon29YN+4QPLMKdtusd/ZZcfFbfOOkb3bOfc/
oPFdhe8o/qMaLD82c5743KQ1uuv7cxXXJ89WfL7QU0PsHLH3Msn8TMXyzCfW
lc0HfWDT2OjA1P5PHBgmPTxYtgw7iSateB8lwWF6PtL43RqfJXyNxvulrluo
Z1gXHUIzQPie4nOXxvcSHNjRcsJrkN6XaXyo4AjxeUpjmyq2hR4drT9qLHLy
l4JH6HlVY0dyphXH2n0FN5Zte59L5rHCV4pmnOBJWfvLAn3bVPZ5ri85ZhG7
tpSdH2ZEnCfOLQ97I5YR0w4U/XzZSoNy7qLUddSsyMFj9RzdyfGTc+edmEaO
GBvjc+SX44Sf1ewHemiB44KGurY1cjq5h3fy1xsZzycOE9d7Ro3EPMaZS21M
rUCd0L/o2mtLzTVIa9TMzKG+oiYfGTixCNgz8JeLtq2q9jpJejuuo3VzTWqf
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
zZFL+P+Hfok90t/Pix6f/yEnxn+R/wMSF7Xg
            "]], 
           PolygonBox[CompressedData["
1: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
F/5/d5m/gQ==
            "]], 
           
           PolygonBox[{{6202, 2734, 6204, 5176, 5177}, {6139, 2688, 6141, 
            5167, 5168}, {6180, 6179, 5252, 2721, 6183}, {6186, 2722, 5253, 
            6179, 6180}, {5168, 5167, 6185, 2722, 6184}, {6201, 2733, 5257, 
            6158, 6159}, {6159, 6158, 5258, 2734, 6203}, {5177, 5176, 6239, 
            2768, 6238}}]}]}, {
         EdgeForm[], 
         RGBColor[0.7858706516169804, 0.5798906443382359, 0.3570920131069508], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFmgm0VNWVhi/w3vNVFfUe1Hjr1lN5ihMRRUk0GhTQdgYcGCQa53ZMOwEm
itoGFYwrzpoookZFBnFiUDRiAAdwxCHEjlPsJHS3CtrOimK0/49/u3qtuuuc
OveM++yz97//c7uPP/OwM3omSfJgryTRL1nTniSdmyTJB61JckCb/5M/uZYk
lyntU0mScXq+VP7eapKsV/peu/+foDqntyTJZJUnaZJcnFcfXUnyj6b7OVrv
L1fZ68r/Q/UP1/8xqr9XOUkOqXicCWr7mt6/pWeN/h+aS5I3ov64msvHKl3c
SJKG2m6qtu3qM6/naw17aM39H6J0F/W5TO2+rSfJHso/q/wTKt+8d5L8SXXu
1MLP0xpfafe7Iar3kMZbojSn5wz1f4T6H646L6nOfqr/cea2e6q/vzRdPkT5
4ep3d72/U2lT9Ve2+/+wmvODVedMpfdrnJvV73jVeb7d80Mmd2rcwSq7pu61
jNC4ywtJUlC+Vf2c1ZEk5/dRH0of0zO1j2W9QM+Oqnd84rJpemaonz92OE/d
kVGf8lGqO1T5RarfV/mSHm1RskOr/2+q/GbITOMWlf9OaaJyiSz5jfZ0U717
QWu6KnX5lanrUo86Y1o9H/Z1Z6WD9VyYuGxQzPPZeEd5vZQk/ZQu1L73U9nm
eobofxdz0bO98kNa/X+g8v0jT3mb0rqeTvX3asXr66nFzNTEK7EW0mrB6xtZ
9NonK/+zVs/hKyl9d8FjM+7m3+f1vlbyOLma+6jEuOhLp/ZrssYrKN+Rsx6N
TF0+TfWvqFsvv1ZZXf9P1Dg3KF1ftowuke50aM4XKf+c8lvp3ZPq+121a1P5
2Sp/XOVb1rxXM6R3AzTWZHRG691T/RzK/uv93sqPVX6h8sOVH618u8a9S+MP
Qg81t8+qbvup0kskh2XK36cxelcsj3vU/85q3yJde1V1+mseM7SWU+teP+tu
Sh5vli3L+5rW5+Wh059prDmdtiE9i8730Dye0PvDNf5i1WnTGAfr/0D10ap+
L1b/myhdrf/dej9HfY5R3Rmqc53m8UrZujhL5S0162lVc7hH5W+o79M0z2/0
fNRD50fpug6XIwtsyF0F243+qr+typZo/B8ov5Pyq5TfVnbu83af17s1/8+U
z5Rfqufbdp/HdVrLd5xx5Rc0rC9t6mOi5vOFyico7ad369tZuOX9RfT5hdZ2
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
OnELGAXZDIh4fHTdugG+m6n8+/i8Ltvm/nA3bdZB5so83wi95KwRlxCfELNQ
jxTM1xbcBjhkcc68FZwV8tist/0UWLhflONbl4Xf4dyv6nRMPKDTeXDRkuC4
/tmwPB4Kf4edWhP5UwLDg+WX5D02526g+thez8M5n0nKGRdfx7j4d3z40sif
GnnOBjp1b5zxZ7UfI9R2f8l1RGb9PiQzf0Hs/vOqeQ3szdCyMdTckPkrqvdL
1X9V6Wl1z3kz1VlRc2wHzzes3f2naj8ltS4elNnGMAfwHrp5T+SZE3nw2z4a
e5J055TgGg/JmYekPrYCfd6tyzLdVWm/TnN0cD37aqyZqj+nZM5lVs7+Cft6
U/RzdfBC8EPTcy4nBpwmPV6o/NNquzAfMUOr8Rp5Ygdi5zk52/yHSy6bXTUf
QFuwA+eZGB/7Bm/6WnCnm9Yduz+q+rNznhv8JP7i9pztO+d/ZvCQ07S2fSWQ
6XXHTftGnDKpYds7UWlX2b4XLhb9GhD6dpr+F6STT5aMx/Fl6B58T5J3G/T3
wdA30hmRxw7ND1u0Xd1zm12yX8c3rar6TC/KGTdwfhmLM3x73jHjI632jzvl
7Cs5R+wdGB4OY1jwGNieM4rGCTynFx0rndzp8tXK3960TYOLelY6dKbK+wbe
Ax/vFOf35qL1b2Jg5TfV9qPM5R9mwWu2msMcTKxH7BMcOfEzsTNjnhnjvg0X
o/wv1HbXijmUtZnjODA9cRRxAjh9iPprqTg2mJ7ZH4Dl8SPgb+zZEyp/K3Ws
99fU7fGN4OG5FZ/zg1KfX84XOPxI9fvv+v+Ryv+c+UwfXzVvfWPRc3o/c36d
0mVNxyJwlgMrtvVwVNgB/CTzuLTmGJ9YHzwyJs4p82FdxCmkrBPsBbfDHQA6
TOy5JNYOh0PMA4Y/KNpSv1l2f3+Tvjxf8/kdVfX+z4vz2wK3l7OPeD11nLtU
89+zbtv2tNJVqePoeZnjuXmBE26SnC6Ks5yPOwLuCuBNWM8jVes5GAV8AnYb
F3bgv6vmTDdX3yeq3wrxT+ZYnPiZOBl+j/iQ2Kd/yXjtZa3jMOah+uPgMFP3
uU3J76izrfI944xxviaUPD5cCPs0MRd3DQXniafAZYzLeXk8s+9bkRkjzc/b
lnQGxgCHwLU8EnzL4RXf/eS15xdWzYOv1Fy+yow9Nij9pOY9Olbz/Udq/7RG
6SVl45d3ZCfeb/j836N5Dta7eep/V6XvqfwOnet3G+YO4emYMzwptm153e3A
ZtiO/qnP/4DUsRE2EVnOKDuue0T1T657H75UWbXLPO+7WsetmTHsd2XLFdtN
vW6to1/RPnhU0TwF9cBXYKuNdxDtttfYarDqirx946VN+/tfNX3vsfFOpNV4
BfsFNlndx/1yZv635n3/Wep4FNyDf8YmYI+wTejUit62v49kxp+PKr0i9f3L
Hep7n8x8xH5KfwaHqzrHKj1dT5fyZ2fGdvjj36bGL8iZ/ZiR+j5oXtPxLXEu
/DoxErHS7dz1NDy3bxq+C4Q3Wsk4qTnB3VKvmbVfrPTapnHsb5X2I/6Bj1V+
aNU4elTJcSO8J7Zs65L3hf25NfW9y21Kd9YzV233bLrupKh/WbQlxrs6NR90
jdJrU3M116W+R+oK+9sj+Bu4m+PjbF8fHEJncCDs85FF8xuzKtb5A1Tn/Krf
wwcTYzI2424fdy0D4eEz2zruHG7JvL83K90vNa7dX+n9Ta+L9W0Tets/ZN83
4s/nm45hn1Y6LDVeHx426aCwp3ObXiNrPTnsyYmxz12ho7OblsnVoSPc1eHP
sKHwcfgA7vPghOGGfxL7yH4uz2xz31R+t4p91O5hL/ET+L5Gao41S62rp4c/
hUOES4TbfiPaYGtHlo2Xrq2bY4VTfbZhTpyYtKH6acX+cxx8WNPcwlLum2Jt
6PIN4L9WAnbbDmzBT5TuV7YdnFo3RzUy9hHZgOHAe5y7ofEOX4Z9xDauDmwJ
xlwfdzfc4dybmRd7KTU3j76hsw9k1pP7MnPicFVTiCnqrvdO3fEonAjxbI+K
58zcX4y9xM8MLxl7dpbc30Y+VPWezuyv8dtPhn3GTqP7zAH9+2fYW+zu9Kqx
5Jd185jEr6NV/kXZd2o/bTp2IZbkng68eEVwLxvLovz5VschxCBw8fjrJRXH
JRdEOZw6MSU2gvjmi03chlgTTmTju4q5rn414+TuTscV2Dd4N/hu4l7m8Jzq
HpjZP5cD87cVzZ0SqxHjEOvsm1lWyOzQzHWeU/2DM8fHubJ9Er5pfMXrwm8i
C+5mL4j4iro9o/zRnOMv7nDHZh5zXNX3urtE+YOp7fgi0i6v5SrJeWTJPh6e
5vySscUv1HZqyT4R30jMROxErDStan1ozbyegRFPvZgZO76QOS4H94Pv52Y+
p3dljrnhDfC/+dR14HTR2SOCX50Z3xvw3QHnrF/IHG4DncVmMh5zYp+JleGe
wEJgIvxZNbgJxmpovo+Fr8HnENduE3vH2SXfO3hH7nGITb6POYlz0VnsFdiM
7ya2DzlgP7ET4G1imu/iXrC75jPCWUFn8QXcd9wVdnxm6nPF+VpXNx5l3S9l
9iX4lAElxxnsC1jo5rDDt2U+q5yxBZnPM+f65dS6iw6jG/B9zHeZ6oyv2v9P
4IxXbT9OyLwf7MvszHwiOPYl0pIx7I+4H4BD1lrm4ovKxi3c92781kF1Tsqs
6+j8cco/XHVssrhqPUZH98+sf+gh7cEmg+Lbkpkhk/lNc0/E2bsrnVc1HwaH
/Xjc+Q6Oeyh0BqxCbNQS99rsN/tOOXwfvN8PU/vtkcEhEyODK5jTn8v2Ld8Q
u3eZz+3R5XtfsNoHme+buXdeXbUPw5c9C+cZfg6scX1gAzACnPPk+L5lfcOc
ys3qY3Hqb0geSn2fzZ3fGtX/r8DSYGrurbm/Xqv8CVXv43El8+Zwl/AIEwMP
L8CuV73eC1R2TsnnaWv1P6NqO813EA99P24zzjxnX/l3q+bg3lN6atX8Dd8x
LQ0/tVxp78w4raB0Vtk+AG7y6MBj4DL6htOE14bnZ67YbjDguPhe4pjMWGXj
9xFqtwX8v6pdovJByl+cmT8gJiEegVNaF/zSOZnr/7XsMft+j3sK9qHEoeAp
vnvgbhR7Pjfy8O7IjTl9U3eM8GHNPEBnxAJnZdYBdIE4HNyO3uBXV8f3Rec2
vJbfV8z5cVcI7wc3xTzherAH2AVs0XWZsQSYgrv+96MO8dZr8T1Ya8N1hwYu
uz3ikZ1S27FBqTkN+AzuZi6rm3uYVres+oWc58a9MP6LuwTK4cIHBZfP+Rob
XBCcELbpdyGfazK3vTYzv4ftYE5bBL4F5z5X91mdVrFu4o+4K9+xbv5lkNJt
U8degyrmb/CD+OQfRRxEPIRvRr7I9syaOaCzauY/wC68I0bpDt14puR3v9aa
cqnP9OiKOXH0cG0j7pz7mM+BB5qVd7yDz26GTOA94T/5joN94yxvvI8rWJ/g
svkGjr07oOa7iLfD/hOfjAm7DZc0NvJgZ/SHmHmf1OW3VWx/2LshwZntHvLf
IfXcLqtYroeHHJDllyHPXnGnmaua08F+Ev8fE/Efc+ZbD3iWSWHzGG9I8GTD
w88Wws/D4YyP75C4n+mWXbsZXr1kH7I6cCP6RTk6hj9l/8FF3Hvhp7EjYyv+
LqJv7Cd7Bc4EyxAj4gexVXyzgt/h2wG+42FdFwdvCX8JdwF2xWfgDweHPO+J
cvDQpzVzIp/VzPmzl+gouoWObagbdzA/5sb3BMz3kprvrNgz+vyubn7gY5X/
oG4ebnvuzYJ/gIfAH6Jz8NK1mvWWewy+QeEu4Hnuhko+tz1UNiuzT8Q3dqWW
G3JdW7Z/fCj4dTg8/NbrJWOy4XVzzMgKO/lyZg4BLqGQmuvvnZon6444vTt4
1S3qxlZPhpw3iTsUsB190h+c9i6p94RvRU/J7N/x8/hs5sYcZ+Q9Z/Z8s9R6
Bp8KN3ZGfP+GvZwRdeC9PgjbBS+KHesVdu+DuI87u2K7P6BpznVs7Cvf0y2L
Ptlb4hb2ne/RXo9v0jgHnIfFca/M/fKUzPeHb8c5Oqxm/nd0Le4ZWu2r4Eq4
lwQTHhBcAZzBYam5i5cr/u4HG38dcXxqfZwjmRyZeky+RxsVvD38/dDUfNGe
qe+014SesW8rYu/QKeIsOJyjU8eSxJT/B63wvOU=
            "]], 
           PolygonBox[CompressedData["
1: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
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.9303312152063677, 0.6958280380159194, 0.3840267671397401], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFnAeU1EXWxZth8nTPDJ3732NaEQU/RVFMGFBBVzBhQAUTiAkRFUVRUXEB
ETDvou6aFQUxgNk154B5FVDMCTGsmCPId3/c59lzaKq6usKr9MJ9r2at4cft
NbomlUqt35BKdVb6TFsqtWNTKnWqvh9QTqVebE6lvq6mUpdXUqn+6VTqMqXp
Yio1ozGVmqXfS8pfrXxZ6cu1qdTx6uyUTqnUN2p/dp3aq8+PklRqeiaV+lDp
l/XOz9Nv36uvW9Xnd0q/KaRSF+i3l/OpVD6bSjW3aAz1/05O5er/DLXdULS8
rjFGaYyb9VtX1Zmj9Au120XlyzRWJ9ExSfVrlA6ouP4s9XGG5vRTayp1oCY5
RmOfoc/dqn+j6u4seo7S93czrrO36L9E3zeqNf2fai7d9b2l1r//HHX6q/5O
+vxDdS5Qncf0mabPeNE5QHW/UfmB9Z7XkRp3kdIJ6ucple8lem7Rd00htYXq
b67Pf9TmZv1+sj6PqLxD6a2qo+VPravfTony/TTmMo0zTt/7iP5c0PaMyp7V
Z3Xl+3bR3NS2j+rvqrKrlG8TDQfXmd7J+sxT+dUqL6n80aD/duXPK3vc85XO
F13PN5vWpNY0sv7/0JrWaO9GaI0rWutrRMcOIvQY9TFbdUeq/z+0Tr/rM1b5
m1Q2K8pHNvj7UOXf1b4fqbY/qI8D1OcRyr9TcLvl+hytOtclnntz3n3frM/J
Kp/bYLqhubfq9NBizhXN/1E/U9TPWyXtnc5zrdZipGhuUNkAzWWc9m6l6v6k
335VP7Vp16ljnjp7vVV3Z82rnPc5eFF976XvT2rug5TeqzGf0+f/RMdi9fGb
9uOEWvdDn9fXOv058i9rr/dU3wX1taVo2EP5GspF32TRMlFjPqz8Jiq/WrR3
b9easn+io4fySReX9Wp2nfFq87HGL9a5n+ej/ofKX6mx1lGdE2u9rl2Vn638
c6LlF9V7VumnmvvnSrdV/+dpjn01j521/k2ax0cNPk/0l0SfXTp0ZlX+Ry7W
KdaKeewec5mvvvsq/5jym3Y4f5fmlSjdXp/HuUui7XuNvYvGvaHk33qr7k06
N4dqr2+set8OUf62et8l9vcczXegfttCfWwgGn6o816yjweobvdGn61/tPv8
j2vwWkObktQ5je7/dtX5CPqavbbPi4YWpQ/qvB2qtoe0ey+XtHmOnJ0/NO4j
oru/6m7U4Xt6Zdb3gPxMpV+o3pexnqzrF5E/usPlV6htvtm/HaPy0+P8fCji
Pmry/ae/w3W2OusMXa457qHfrxG95c6+10/rc33M5fbgCc2q25T2unze4jVn
vzorf27Um6ayszXGJ/A8lS1XP4O1bnWipb7Nd3O41uZ8/XaX6l+o3z+o953a
TOd+mdLlmu9U/b6B+lhTn646K7fo+4u6axmdn7nKPyOCjs2aL66m8jnq5x3m
pO+baX376/sPqnODaHtT5Xvqs576uVNtuyttVT/zlJ+vMf8qel9t9P5P05r0
1hynKj1M/Zytsp2UXqk2XVXvX0q3UrpC5Zvps6G+36u2PYvm338LGQRPPFT5
vys/Ve1L9K90E413A2dBtG+g773UxxGif1TBfR6jtEXr9JPWYZLabs49VD/t
6m+2+jhO+WP0Waw93lTpBznTsSLWOd3m9pcov4Zomqk2byjtpXFXatxX1P9r
Gm+B1vw/Ze9Jgz7faby76rxOP6e8xsgPZAfrtDDyo7R3/TLm6wcWvHcrtJbP
1rsMPt8Qez1BNAxTOlyf3fVbY5vPAfM6T22r6vd8pYO1R3fEeGeq/1tjvIVl
y/Q29V+f9pnmPA9Tm++Zr9ZwRc5zZK4H57xuNUovr/o8L1bbfTT3RtG8t9Jt
tZ7b6LN1xjJuUuxXUd8/UZ/r6vvmcX7uUZ+7qO+JIQeRffQDvzpUZ2Ca0jdU
ntG9e0Z0p5Wm1PdKzbEAb65aT1iufg6tWF+ZKdqGww+j/cai72n1e1DZOtBT
IU+5f89EfudGy9556n625rC/aJiltKt+OzVoe1b9ppXvm5in3RZ3NtHY1+n7
/WXzp+aMedRfRN9a+myp9dpedZ5VnY10pjqUv1759g7ztWeCDzS1ef9YX3SK
qaFXvKv65yn/vvq/tGq5v0hz+ovKZ6mfJxhXfZwV+kCdfrtZ5Q9DXNnlXyNv
9X2C8o/p96PanKf+YNExUfknVT5CtH/b4P0oqu0MzSdR2llreZbKd1S9S2pd
Hz6GLKqEPNpU9DyocXsrPUPrPyljvelj7ddH7eYRPWo9lwUi7Vv1ebHyPZFl
iefbJW+ejcyjT/S4/qHL1WvthqisUel8fR8mGqbo/D+jNe7W6P63Kbn89Irv
UP/Q5T7QHC5Sm1Lechy5jp6gqqnOtd6vJS3m1UfXWK4iX3uGnEXGvoUurfsw
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
85YrvJX5f5LZYno=
            "]], 
           PolygonBox[CompressedData["
1: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
DwOvmHEuSTmmChnvMe015Yx6Qv+10L6KfKypehtT9pXkEy+k71Xw3xByjucW
6JOTrqWqZlCzyHtEe0U+Seuoc+zKtetOKwR+g1Yn5DdtPP1tSrhW+Rl43Zhr
vqr9qsbbVL4W34pCzqkqt3pb1L7WRdqT9P0C8uVCzvElgafQupSwzPMJ52iV
q1Wf6ls1HNVyFKOeiXgNtBbyuTeovqh6UMhvht6OLeCNQo4BJsVdI1WtVD7B
xahzdMrVaQ3m6/5OO9enmHdL1DV41eKlc2PCMapiVdVwl6Yd4yrW1R2ku0gx
lmIt1eDWp13TVG1Td1I75HfEHfsV8a2P4tdC+2I9+bY+4phIsZFqkqpNKien
3Fxt6BOSrtGrVq8czSzoJ5J+i1TDPZBwzUi1o5n0l1A9Cv1BnnNG70R8h+gu
UU5upWqNyD8Udo1LtS7lWJVrVQ1EtZDVMduqGq1qtctonYDfYM6ms7c6Z5x7
Vs66C3CjjGsv6rMxcHbCvpJizB9jrpGpVqYc1Hcx5ziV67zIHPeJOwenXJxi
uqKUc4jKJSrm2oi9Wcg/Vco5uLLgp1L2RVWDaqu3hD7/zLePcG/GOSHlhpRD
mqPaT8y1D9XYVGtTjlG5RsUcM5KucavWrRz2qkLnoJSL0piXqt4BTzrsN1Rv
6WPwFOW5prKZ/n+DJ5pnn/Q88D0Z+86yqYlyWRnfhf+XswcenfRZuAjPKN1N
Sb9lypEOAr4LnnCecz53av5Trq3Ih7tUvkDasbdqqLkxvyl6W8LobwN/TqF9
c9XMO8G/NGJfVDnIqxj78ohrDfoNin6Lopy7cu/KOSj3MAcbEmH/pmQ28Ert
yQL7gPIFq2ec21BOpoZiUWw4mO+apmqbqnmq9qmal2pfLZOufSsm+4a17Jn0
by1UQygP3AsbGoQ9x/OT9gHkC0hnTdVG0vZ9rueOKJ12TUe1HeUgfwCulXGu
QjGWYq3ZMc+F1miI4pOkfWfdMQcjrgGrFqwapGqRR6KOBTTGFRnHZIrN5MM2
Qzae8NnSnaW7qww6fg/7Nzn6bc6XEa+lYvgJhY5pFdsqhqqQdA5XuVzlfEfC
uz7jWEs17zMx52SUm1EMr1h+ADpied5T/YHbRF0rUcyp2HNaxL/lUAw8X79n
UY2zpHNgbWP+zYF+e6AcwUcZ50CVC9WZP6ZckvLX2R7DuJRrYKqFKcc5A/7T
Edc6dIfqLp2l/FbYNR3VdvQm6W1Sn/+IO4etXLZy3g9EnWNXrl057Puj9hnl
O8rHPhC3TyffTjWAa+mrUtprqxxZZeB/ZZxb0W8AHge+Lu1cjn4Dod9CDI+4
1iWb1qP7pbhrr6rJqDbTO+67RW+e3j7l4JWLV45+HLL/SLiWohzlKebmq5R/
i6AcyZ6Ua6iqpWpPvhnxbwr02wLVlFRbahe1L6QzMlO1CfR3Leka6m70/Zj2
b1MUwyqWfUk1/Dz7dOd1F8f92wv5WPK1Ps/4tzuque7V2Un4t1PKsX2dcEym
2Ew1h0TEv3nQbx+0RwaiL5xwLkk11KNRvyl6W9RnV53tIv+2SjZmqZ6Sca1b
MexH8LZPOXem34RkYVtc9fZc37m6e/XG661XTutD8G/S/q2KcnL70/6NiH4r
Ip+pnGrfUed+9Zu4mWnXvFT7Us3uXfp+P+Jci+64Xth3U6F9KeUclXtslXas
oD2qvao3R2+PbJoBvCzit1E5B+Ueyqacy5aP2Bxbrk+4dqociHIhLdL+LZty
LMq1HE041lFN8QjwfwGZtIwP
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.9788939557135373, 0.8172348892838434, 0.5345712627119658], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFnXeYFUXWxu/MwAyT7r1zcxjX9CmiggHFHNaIukZQRAkGwACIGSOuWQyA
EcSIoru6a8QsKGDEsKJgliBmUVFEzPq9v3kPj3/0U9XVlbq6wgnvOb3mEaMO
OK42kUi0tSYSdQqPa04k5iUTid6K/1GTSNymxMGKf69M0xXvp7Rl6URibkMi
cbvuv611nn2VfpzSR+q6rj6RuKVzIvG6ns3QldHzu3WNUZ6cwv/oalH8Nz2b
qvgRitepzJ+dEolHdZ+N/OcqfcO6SFN8SuT/Tf05OZVInKTrX7rv3ZJIHK7+
nKA6DtP9S7oGKf94ha/oWqr8Vyp8VdcPxPOJxIPKv5fCX1uc3l/payh8UNe1
KntelN1D6ccqfFnXKKUX2lVG8S7ZRGJWpL+k9C3qPD7PKT4j+vC84sfU+X6E
6tlO4ezI/3tnt3WJ4nMVf0DxlOLfqD/rddF4KG2h+niJxuR3PXu7weELqmdt
pf1Ge4o3d3Z/rtBV1NgXdPVvcbtLdA1XnrcVvhPvcpiebdWUSLypOp7QeNV2
9vMBSv9Q4Wjlmar0k5T+hu5PULuvxne8p5RIfKm0exX+R+18pHhB+RfqO6R1
/cF309xZW/3fROUu1/3ruh5Rnnx8d77pvmprvp7/T/ePK/5Yi9//J4U/triN
Jaq4T6PaVriG6mvt5PbeVDvzdU1qdn+XrPou+h4fK74y47QP491vivd7q87f
i/E/TenD9D5PxTeao+so1X9ywmM/TPGjFa9V/HHFj9D1f+3Oc5rq31Flj1f8
TJXbWfETFa9RvIvyP9vJ902K76JxPI16FR5NuvJ8r/jpindS/BK9X+fOvu+u
/CdHH+7Q2E7V9Y3e8Uil/6T0Y3TdVHS7A/SuvbRej1H53iq/TPcFpX+osVpP
9bYp3lXhLiq7r9pr1/2dtQ7PVf2X1rlflypeUjuLOrv85/omj9S7/Axdo3Sd
rnp21POc4jsof6otkUjq2kXfYIDC7ahb6dtqfHZSfAv15Ra19bTaOInxVPop
Sj9P4/aNynyta6ne67is50tfrcHFavcK5flT91vrOkjx/mp3lubCTF23xjqb
Fd/6g4jzHbmfGfOWdfZUrLVeeo9+qufQGq/FGbEnUHZenctsW+d+vsh619ge
rPy7ql87a0x20jVBYzxAY3hKvfu0gcLeCndT/oc0z8/U+O+mvv9bef+laxP1
Na8xyenqo/ccp7w76lpT+V+p8Ticr76t0LPDmGNK66lwF12bKn6Y2qrp7Gcj
WjyefM+eGs/Bih+l+Nnq549q90yF45S+r9L3U/o2ac9z1vg/K9o31fcxCge2
eG33V72D1P96lb1R5YYr3kXxYxQ+kNO+rXBrfYtuep8f1Y/V6r3+xirv/+k6
T30+V1d3xftrni1UnoMVrtD9BrqGqN0TVaZJZY5XuJuut5XnfbX7eWfn/0zh
oqrT91HZEcpzt9I+U/lb1Yf+up+qcBONbVr1XKD7c3TfXeER2nNOKbhvJyvc
W++8lsoNVLtjdF+r/GcrnJryu/BspO4/UL4rNfdOUT1rK309veMPGqtfVc/6
uu9VTiQ21jtvqPTTlWddpa2v+LWK76f49TmvZepnPY/LOZyput/Qu3xSz+am
ecOa0HWn6v5C/f886XEZp2e16sPCvOcCexn72FW6v13pl6tvh6mOktIHK7xM
dZYVf0Xp+6jNiuITlX658r/P/l/wPtSxXyS8z7Lffq66xun6R63X+HXK35s9
SXNgouJfKP6g+n4tfVX867z3lvNif7lW/T1f8QZ9j1q9R42ujzSWmynfDmpj
Y4WD1fbxKnu6+naI4oMVP4F+qt4vVe5KhdPV1yd1bah+7K/7ZUq/RmEf1XeA
rnWVXqey6lain77pgyl/B9IPU/rJqvMM1XmH2pyqq2ut97Cl6ttJin+q8f1E
1wUqt1xz/H9Kf0FtbKM2nlN4t8Izlf6w0ifTJ5V9tIvpkdeqjm+sdnoUfCZ8
q7ZSZeffUGmPdvZaY809o/Tf9A3O1VrbS33fU9f9anuE+vhVjc+ITVTma8VH
q92y9rqHVM8GSru8i+OTVF9/lTu63nTIL7p/rpPfpVn5+2pt3l42vcEZfW7s
bR/EHjUz9qvzanzGcyZzrp5f43T2QObL1fVuY6HSFsVeNy/qIU8/tXOQrm91
36p2D1H8X2WnLYyzcnCUHZBwuDDiP6mvPXStUHxAjePDFL9b7/mi2t5M776n
3mui4nsoPELX7YofrrBNbVyneFJ5b1a5LXUdpbL1up+hupao7Bvac1enjL7P
74oPU3xGweuCNcF+NVJjOEJXVtcXSpvUxW0OhPaK/pRj/jCPcrqO4B0yXm/Q
D6vr2brsXQqvhk5QW1uojo8IlT5ddfZSeG6941P1bDPdD1T4m/K8rTn3lq4p
Or/GJ/3u26jtaqu/9wbK101lZyh+h+JdVfY59Wv7jM/VK5XeTW2/qjn0iq4f
1aetle9qpW+lsFVjMUbhKxqHziWnN6uOKVp7y1TuLD3vqXKb6iqqzUM0Lzur
jpasacA3gg7kTCbkXIYGHhfnwv7NnjvQY2/pu7+pa2yd6Q9oAmiSxxschzaY
nzQvMIF61WbXVtcFXTw+6rwi5iNtkRf+YXzQedD65yl9eJ1paM7lQUETM9/m
B30PbT9HfWnTGC3qZLp4jaCNOQcurPdZcIr6cLKuvmrnUM2DXdXWtcp3fa3p
BmiGicyxoMPhG7pH/dsq7zbNvt+w2fT6kdA/Lc5P2bvSpuG3CFoVmhU+BTqH
9q7T/aENbvM6lT2/zuv24ITp1itj/bKO3444+8RFdd4roHlfhqaPPOfFGF5Y
5zzwJqRRL3vFXnrnEdDgquPZWqfT1kbqZ4+0eRfKXRj1w8gNj3FmvInDaxzD
/qOruc19ujLqmay1uYXG4vGSeSDS4YOeUz1XRX9Iuyrys79MiL5trbq20jVM
79Nf+8lLevZNzjwafR6Z8Hc+Nmi2fyl9VNCE7MHvBY94a6S/rDwTYs4w5q/V
ePyhlx5RH1eLOTm26D16JWdH2nH26nKLvyVM7GFab3Uq365DZn6tzwfm9izN
35m6XtX9d0ofr2tlwmt6Qq353NcaTFeRznPSD69xOD7yDFH9jUr7UOtyFrSA
rmv07G/qz+zO5g9W07OM6mpX+L3W595KH6v+7K08/9C1WPf3qi+DxIstDBoJ
+gj+uqfm96ZJ3x/TxfwhvOEvBdPqaX23nTq73A5K/1Z5lyV9/u3S2Xk+Vj9v
Lro/f2isFqnNhbpOZw/rZLqx4z07ee28oHr6qL+vwS8pfXO1e1bQq721H61U
X3dTWNV6nF3v92bdDYuy1H14nemxp4O25ltDy25TZ1qXuXBMzM/9Ga86v9fM
tOs5IWE+cLVI/6yT88CPZ6rmmQfmzOPTFrwb8+foaOuWiI9UekX9fK/B9EiL
0rePvQjZwvYx39JKPxNeDbqpxucf591Hmkcpvf/veja51v3nHeEdt4vzlLyH
xTn7TY3fF7rg8EhnHG5MmZ7cLtIGRzqyDfqBPGQtzYn31N4aCke3me5GpsJ7
dYp36ZdyHB4TPiQR+9VTGrcZump0v1hrpC7yMw7Ef1XWrqqzts68Q0Z5P+hs
firR2XXx7Qeq/qs1f95t8f5ZG/V3U9n1dD2mfK9ozqU0V6/VnNpMaT11/RJr
45dYL11UrnOd5TOva+wnhYzoJOWpV3iG0k9SH07Utb/aa1S5ZJ15zO/1vc7g
HKoJGU+t65mtOn6ttYyI8OdoCz4DeQ+8RjZtGhZZ0Mnq10n1Lk+/fo38j2t8
0nX+1l9qHW2g/N/oXY7T9bnqGqHwJ7VV39nn53TNtx1UZqbWTlnjs4bS7mU+
K1+D4mmt6QM0HiMbfD9Q6fUKk0of0eB4CfpQfdtYV4vWz9fQnUpfAa+pqxNz
T/l7pnyOF6FhWAtNpqG6BX+4idJ/aDCfyP32yr8dtLninyEjabRM6B9tDpEL
DdK+M1/j8IPWy+F6/kqD3/lxlXtMVz+9W0rhhp0sU1pacPxbdeIrxbsrvpx4
ye18rbAt5fQX4bUVn65rqOoZrnAbpV+OXE5nwVZKe7Lk8W6LMf9c7/VZ2veT
47uzJyBXXBH84zA9r036/kG9/w8Klyt9d+X7VPHP4mx6PmhRwp8i3l1lN9T1
OvS03vU2XV10Pau0Z9Kui3OffXhurfMhn+yrsv9R2hedLOeCt1ip8PuEaYjv
o2/QvD9GW9V2l1lbY9u5wX3bP2E56LdxRrC3fhdzrz5kA9TL/vp1J++xHe8U
79Vd366Hvtfnuj9L8Rcanb8t7fVKOucB/eGMGB/1w/tvpPHvAT9UG+ddrdca
vP2bis/RNU/9fKPB9N2JsR5ZX4QNsTZvT3sNs16rmoONdT5H59U6Tjpj/lzQ
8FckXZb6GBdoFOgEaL9MnN3U3yXaeiXS2fe+UltLdV2oOn5IWSbym77PQZo3
R+rdFxVMdzwXdfaIbw29j9zi2Hq/35N6nyd0/a3B3+eN+EYXtvr7fpdwG6T3
S3jvz8ZZwDjNi7Hq1eyxGptwXuqC12HsSId+YAzIz5i8EGNNeluD49SD3BYZ
IvTY3UrbU9c5rJcGx7so/8f15tvh2VfTPvMK96IpLtEceYN3SjgvNC/5CS+M
+ASN03hd5+n+sWbzKsuR0eVM1/w95/nfGHLbq8su+57qX03jfUKt99v1NSbd
dI3Rs2MzlhX8mjc/w/t0vIvaWdbq+5ugnTXudYovVJ87Kcwq/3udndYtYVkP
6VuprteV/4iYn/Bg8GK7q9whWjsNypPPe86zRvuobKeU24Nmqm9wHuQUK5J+
F/LBb/GcPiJnOTLW6Z0tXofkv7RqXvh1jcNxautk9eNLzanN23xucV6wt4yq
957AHGIujQ35Fc850z5s8nmH7HZ41TLAh3Ouh3PnOOXfosXnEOWGx3xkvnD2
cAaxLghPjjhynJOi7JvRNu1yDlM/5/q9Offn1Yzp//HBA8xWX2Y1+b6at1wF
+conGfNw15e9hyHvQFYPrX510OucsyfEPLxA4zYKGZXqeqdiGdx9OcuGkUkg
O2J/Gh7vcleL87BPXaHvc3nI15CPnhhj1bvN488e2Dm+H9/ilgbPdeb5vHqf
R8xt6H7of/Ze5vu8SO/a4PhD8DtV51+BbEHhgnrzFMjbqJM9839V1/Oz8tyv
ebKLyn+k+8kKr2eeKv5d0iH0+st65xeaXNevOe8He2n8apQ3EXO4ttbzirXP
fjRd6UfVWu4wpNY01ZEq06DnKbXfpG8xUWM8lfNTeRfVWy+AnGNI7FfIpNE3
QPce0MXvQP9LecvNkJ99qn5+outT+p+yrJIyXdCNaI7dr2unGNvfYw/5KOpZ
Q/V8qPgY+BH1ee1G9+Vszf9nVdcRCucofUulb6T0J5sdfq96NtG86aH4pgq7
NzjOWPG8e+RhfdfE+KB/oG7e8SXVfXPK65wx7h5l19XcWD325G55ywyRHXbN
W2aI7JB9mzycg5P03hOTboNvz5x4KeFzgO+iriWW1PsdoTGeTvobM9bIWZZE
OrwV8utvFP8QHkvXGGi3aOsa1mCjZcjkg8+gj/CV6B+6Rvs9Gr3/MNbj9I17
q73Lq54318U8PKqz9+03lf9K5Zuma0KDaeh7FU6EX9Zce6jB8qarIs+jCed/
MOLIE+4NmcJbIR+4WPEfK+b7dtHcuLrB9dzHvlS2vmSrjOk56DrotwEax5vj
TEF2emeD5WPvNDmOHJXwjoif0Wj5KrTV1Ehn/b7a4DqfT5hmeCK+0RNBOzBW
6GzQ3YzMem++Pfbn2yLOuXNC3L8adM7UqH9VPvZ85EzUyT7DfL4l1i80/zMN
pvXXTvt90Q2hA30nxgHe4vXIQzg34ozzq9H/H1rNzx9W43BuxMnHPbTZKt0q
dc6NOuFZGIO3Y2wZ//81uO53on7yvxrpq+LvxNgN0Ph8pfBQhTc1OH6Z6tlJ
30yfM5HOWLeDvg1d28WdrOulL/vnzbfulzfvSpx96v2y82yZ8XkP/wyPPET5
flT6MKVfqfv9lN5cY16KdOjyF+udPgGeVGk3NLj8O53NV8BTTIoxn6jrQr6J
ru9qvP/NiT0QugjZPv3ppvaGKpyiF5pT7zaoH30remXkX+jkJ8Z5B+8+pd6y
PWSV6JiRV66WMdZgdt59pB70GHs1etwYv37av25V+vs5rwniyAnIS9vw8S9F
nD4gd35Z8YsSluUhnzlS8bzWfU/VN0P3j4q3eVLvPTFr2Q15oPdnhmyD/Ohe
9ox32DDenXOhb4O/DWkvtbht2uX59Bgf6pgd9Wyks2NJq9vt1+BntPllxjzr
ZQWf63vGWY9OAt3EORXvW0/GXso5zveAb3oi0lmb7+tdDtE6X5x1vidinUJD
zojviPxvVoP3G74xawyemrF6qcHyTPahWbF3wTfPjjXFnkSeixOW+b0cceRq
6LOhgS9ocFvQqIRPRbuZdsu+S5yz2osTKcspmfekw+PeWbZ+4g6Fd5ets7yr
7HlIPdT9sb79+tAXBetrR9Za3oK+Cr4dnv2rSD8q4bHmW8NTjYo2OX8X56x7
Qge1XqP1COgTdlbez6BrkDslfR5z30fj+n6jz6CDil6/bxTNZ8N3g8MYovsF
ih9ZtK6cOPpyzgNkC+gAvmx0nH1puMKPG62zPrDoevoqXBM9iMo9qbNmaNE6
+ZLSrg8+nza/UX/mNFqGjOwAGcIheqHWrGUI6AReZP9R3f015s/nzUMPVPwl
xQ/S+85ROK9qWmTrrOWBpCMTHKbyi3hfpT/HmmQeZbyW2xq9FpqjXWQYlxac
PpYwa1kIMhLmNHP7C/RrWctDkJFAY+4cdObRjW5rb8X3o9+K/6r8e7SZprxH
e/8BmgvPNvqsZB8mznk6pNljynh2zVp2gQzjukaf8ZzvIzX3vtW3H95uGhx6
HhzGq4EtWU9t1qmdhibr/Mi7LGXeF/xDvskYiC2VZ4s20zoNafPz8OfgaAgP
gd4rml7fomieA3ptTMIh9Bv757pZn9nIn5jb90c6egG+KXiYiSGrqNHVtWjd
+20Z81HgsZAtdEm7H4zXdfGuyJPJR/6e+m5bF93ubHTfMebID9G3890/Uz3P
5M1/9FCeF5PeH1k31+v+B+g+zasZReNazskYq4IuHOzIqRrTFXrPQ9Cfay6l
0SXnLTNFdorM9o+89cu/563zpB6wMeAgkC8jHxgTtOu9Bdfbu9Z714+qe2Wz
5bPIwzfTdbDqPFXP940zbvcG6z7hdcaqnmcVTlM9v2es52xpN526V/A+y5Pm
kbk/Rt/u2C4+e9Ehs4+xn52j/PvE/Byib/5H0Ayn1zqddpFhoWdHrrWLeMs6
dPFqf720MUPgheCDh3cxL/xpJ8vxOa9/qjh+OPixvHmgnxWulbWMcYQ2mJlg
BZS+JbLEqjEoryntzqLn5h0Kz643XgT5+tN69rLyP6S6D05ZXsw4c6Zytq6F
DrST8UDweafo+S61lmNPU56/qV9XVK1D+CbpZ+g+oRGgNZDxbBPyDfTXZ3bx
93ykxRgCsEnwlzvGOKNzgE/gfmHgHwZnEh0yZ94FfpdxOi3wVfVVj9XJet+s
4iMVH501hgY59lbwUvVORye4NG9afmzGMgtkF+Ad4Le2DB5tAXuy2ktqfh7d
7rV8Q9HfebUm6zzRN7XFNwXHA54Heni5wiT8ruo5rdb0Bd+a52c0/kUzE4eW
Zs6gY0CmBJ4DXMfHZfNb8FPwRVvUm7cclrDuoSXWI9iz+jjL0BsvCZ5mP82l
G1vdD/jR2pB11OZ9Xh1VMh8GrwcfNKbk+PXonDWGa7A3FMzTEIev/ibaAjfC
ede10Wcc/Oi6jabBH9KYT0t5f7yl4Dw3xx6/T+z/9HOdRvf1xoLjNygcp2sx
esOM5bvQK9Aq9GtIg/u5WHmG6H7XjPFqnHGcdWDZOA/QvxyX97obqXAj+HvF
91A9w/KOD1X4epO/I9/ztbT55n0S1uMcHWfK0SXzP8MUHqJrJd9PbQ3IWC74
odZLLu22aRdsDn0DKwDeYnic0dD0h8dZs0DpgxS/t8b0NvPnyoTX1yqc3eqc
CQ2mR6GBGmNdbK79bESj6dLBja7nvoTThkf62wXTFG8pnK3vsCBpPniW4jPh
tRtNjxwZNMkVyrdA+b/XO11e8BnyVcbyCOQSnyr+sPqwrNE8dbesdRDoIkj7
NtKZ8+hg0L+crjH6QfHTisa8EQf3tkm78TD/VPoYXeuwT3C+FL3/7KD4DGQm
zeY7wOCRHxwea2VlrJcx7W53/ax1BbTNWmOuL48+PNpsvS/nwcm1nrvM2+NT
pueQjRyr8hep7ncK1r+RBz3gyynLJsDJnZryfocObk7wNpy562Wty0DXcYni
dyl+lubVUe2mBy4rmn7m+/HtkCehz0AecoHyfEwf2j2feK9tVcfDStu83mc3
+BVwLH9kLbdBpoA84amC1y/reHdd1ylt84JxXeC7vtMY3qIP+3flf1JpdxYs
d71D4dKcz7ivcuZB0HHCb+wVeOar8+Yv0NHCY8CXMBeZh1cXnH6Vwn8XvXb+
pfClgvF14Ox213m3I2tBdZyoPmyn+EMFy4LYy9jHNg482KYK72s1/QHtAV4m
1+hzgxD+Dd6N85g+03fkSLwLcp4nCm7rcYU9Y6+8X/FpSbeLLA+aANrgj5xl
OL0azQ9t3+a9fauEzw10mpyz4GveCb0ZGCqwU2APzkpZXgoPcFTVtM31gRM+
JvKs3W7cb5+szyQwR+CK4CfgK9ifv221PByMUV79LLI2661zRl87MvbXbyL/
h83Wyw5VfTNyPrNPUfvHVF32HqX10hlaTlqmjH4HvT86no2SxkEi+988aRqI
5+gUeiQ9N49KW2dGmbMDuwiGkecbRVl0rcj5mbuP5CxnRp69ceS5TP1cL2eZ
+CfaD79IW1dHmaeiz0cUrGvonrS+4cycaXv411ubPQ+YAx9VrF8D7wBeAvws
8uErWx3fSGljFV7a6v0XnC3PwN0SXhXxzyqOb5DzmbEwZKrdop8vIFdp9fmI
HJaQe3Ba7CHcj1X69xU/PzIw22fGWi5p/izuZBq/VmNxl/LXVE3DsFejH9k7
Z0xGRXWs02ysBngL5hj5mWd1KrMecoKM6UqwJdCW++u9noi+gVt8rNV00/RW
p//a2Xk44x/X/bsRsu+1Vp2/BbxDq8uDf9wwaZ0N+hq+W4/4dhcpzyW0CxaE
8Vf7j2eMoQeTBN7n9Rh3xhwdaPfQg6JnrQ2caieFdUFj96myGWtt54z/oR5w
QTzvrOuBzi5XF3HC2ihL3p8i/y8Rpy/bq29fq5256tvfFf9Z6c9nLSv6usV2
CGCQwDSBZ2pttc5cn7oDt0ccW4NeSfeVtp6FD1W5K/Ju5+doF3nA8hbr8pG/
Px8ygW0qTt+6Ytr5qxbjrbdVuLTF9Cnzn3E+W+X6Vf2+N2gchiieYb0r3FfX
b+rPPlXLXP9Q/ICE6WvS+V7IF5E/ogc+LWX8DDow9o1c0nsQ5yTx0bVuc4No
9/C060Sme2bV6+6MqvPmY885rer8M3Oum7bgU3ZV+grFd6lab8d+hW4SWrs1
aQz4n63+vvR5YNXpAxT+N2c6+7yyceK8LxjMmqTLgIemX3/G++5c9bldqrod
9kd4qA6sU6v17GCT6Q94cJ4vjzzfRX720gPB9KW9fp5pNU6L9YQsDDwZ+Lev
NVZf6dpJ9xuqf08rvkHZ2L5buRK2L/gq9lvCpZEf7Axx9ufPFH7e7PUPBvzV
ZtM457cYjzgFvlJn46Jm4zPrAlsDD4LtwuKoh/DDSL+nxXHavTr6A00IHpb9
kb3xkibrUDkDkdXdqPg6yjdA731bszGlmbLzD9ca2SJw6eDToaWYK+g4bmkx
jUXannq2RPE9yn5OOvMKncRtMSb0a0n0c0G8HzQnOAXaRJ6wUdm41R4KS03W
IcFbgH/ZXtcdCesniCMnBHe5W6Qf39n3dyp+UtLppIEJBW/6sNJ708dIJ+wd
6dRHG8i85og+313xFxXuGfnJQz29o376sGu0u2OUJQ6+DZ7z95JlWOiekZeA
XycOnbq13m0u45yxDpT5c1iD+R7S0cfvhoxd8bszxugSf1T1bVd2Hbcjwyxb
/w/GEJoLXQ783nRd16J7U3/uRo/f/Fdf3og+gB/mW3MO8v1viDmATdP1zbZf
Agc7r9VY2IFpz4+3Wo0LI+S7ccY92+q1R/hcxP/s7HvOvjW1Jq/XfVVruqp4
Dee44v/MmafaXu/xQpSlXF55ZoNHzHn9Eed8Qd/OPgL/D/YBDAhyAOTiyNTQ
Z7/NecieAN+r8KNW05To2d6Nvq9XdZ5ROT9fEnmG6r6Twvaq3/ftqOfEBudB
T4T8oT5wJtT3dtQJXgXZA5izJdEu8iv2k1nR/7ngQHStrfhrrb4nzthwDz5/
9bLHh3EakXH7rRXLn8CNNQU/Ag2EPARainR4AcInIg5OB3slsDqTm/1NaWs4
NpHNnh9gw7BdA+tFvyZHHvJOivjRGctkZpSNH+MsRN5KO09GWyuiXc77i9ER
N9vWDn4JvgkZ2jMttqGiX9c0+H2p/6CU05GbcKZMj30DTDyy1X2KruPReN+b
Whyn7vub3RZzHv3pI5GHdXB/pNMP4o/E/GS+MifBrYxLGdt9bcj1SZ+v9vbX
vjNP4dENlnEj3/5P0vw7POMNLZZloKcFY3lFrfGff89btnC21v5zactkkcfm
Na/G6dueoDq30fP3msyPTmsyDgBd7n0p4/9Zu+D4wPPBUx8jXmAHxR/I+JzY
IeTBwwK7Bha0v9JmKtw4YT0wc5h99+rYf9l7keNwtr/KGKK/b7KcAJ12stlt
PaI2dkX+0+69eX6U3bTdfb4rY96f8YEWAm+HjhqeHZ0RmBD0Rr3aHZ+ZMf4W
DCh6Enisz5rM072jsein+LtZ46CQQSGLQreMrhpZKPhP9GBg3tDHQt+gkwWj
/a/ID64cXgps+Sg9P6jJuhmwXWC8kOtS3zFR56X6NhWNxWBwj03Oj70H490n
xnyi8rRyvig8VdenSt8ubxsh9DU7670K+qbjVe7Eoscv1WybiwOzluu/XHbd
/aI/Lc2uc62E81IGen1rjedWKdufoKcpN9u28f9a/V35pv9IGiODvn9mfG/2
6k+a3Dd0ZKQdEulgPLAxZE6uBh3cZF0RmGF4UcaKOfdC1HlgyfG+Cv+ra131
4T8l60OII7+C3wAfjk6JPlaa3TfsRvdqsjweGdKxTZZHzVGf5yq8KuG81cj/
sNbFQ2njy9BpLmny/p1TB69AVqvxLGY9Fg9pDBfoukzx47OeO5/E/GF+QkOA
gwWjPzfonFNVz//pndZWPZ8W3Z9Gpd1Wch+mlIwlfy3mxip8P/1E3/hJjCey
JM5JzlvsicGn3l9jfgW+BV3qEWAGU7YVvCVre9vpRctsoNvAKjMmC4LOuTl4
eNbChyljeQu6FqVswwqmFZ59TsiXkJWCO0Jeulqc65zpyAbIA66vp9baB2rr
HvW3b5PnMXov8BXsV8h3+P4/xRy4RO9f0jj3Vz/HgidGDl70vGluNr532wbX
uWW99YuUAy/AOTi4yWclejj0cWtmrKdGt81aRY6HjO9lPfuqaB0Tuqa924wJ
npb29/4w8Gx/T9nuhr0GWyL6yjvuW7R+bW+F69Z43tO3dKw11g7p5ZhX0Hq7
Bw3WNd6FtYYt44ImvxPY9g5cecL6ZeLY0dwYNky0+7eKMWxg2TbV8w90/aOT
7ZOwU4LeAqNOXcg00cOAETg3YXuoErxi4BzS8Wztiut5Iht2RS22dXhE6esq
HJy3fAg5LzJebE3OjfmJ/gP7OvQjXdttlz0wa/ks+S+O8PyIH6z3HtTqeter
uK2uCsco7cBWr80HK86Tyhl/SlvoC25Tel+lNyl9MDxcq78j33NwxMFrEwfX
vW/oGyiLPROYCeTQ2M1MiHTGg7HlW8zCzhrMltrppn4t0fWb7n9T+HuLZY7w
XciVkF3sUnH6nKztjH6LPP0qHuNc1vIE8NPwd8NbLDdGbvte2rIM8OCU+zX4
8TdanB9dFzht7sEqE86L+DT14cWw39mu2bgKMBWPqL2lavfCsucIc2IVbvfN
mBvI4CfEXgQ/eGXEoeGg5SblrZN8pcU2JeWK230YfVPF6RmFSXTNLfaN8GDW
ersxZetOz4n5hu1GJr7fWjnrU99W2a+ytsnpnzfv1bvV5zhY/p1bjeefWPGz
txTeo/AA6FXO2YrpLmwTr1N8T6XXqu5t07bjBgvyQMn74IMKv8va7r+p3e3s
0eq9jnDPiE+JPhDnnOiw968z7mD7VtuDn5/zftO9aFwntkHYTcOXtARvwtx/
JfbGZ3PGHc9GLlex3GldxZ8o27Z5M/Xr5qB1sVvHrgz7sidK3htaYn8YX3Ef
xil8WmVP1Jg/VfZ+xj7PvGK/wa6S853+VFpd/rSwQ0T2O0z3J7RanzGq2Xa/
2Py+XHF6MWeaBXksmPPVcsYnbaRxvj/ODs6Qt+K7bFUwbvyikKcRXhhysz6t
Xqd8L863MbGuF1T8HJ0S64L84G/RKb8e+il4MPiNj0veD/pE2f/pXbaO9+E7
b6Bra9X1cdZ2oR/ouwxX/WXmQNbruhx7HbYU6JrQQ2OTSdk9VHZ9hevp2qiz
51ef6PNZrH/FP826bZ5xjpO3W7RLf9aLOLg87AXA5mE7yZpkPQ5t8T12lGD7
wBzzvg9lvb7RaTembZPAus1VnGeanv+SN173F43HkWGHhnwMuh07DdYdNr7I
35G9d4u9ijX7QtqyG+jxp9O2fYI3n63wNWgAXatVfF5UK94vaP+istc+dYBJ
wJYLG1NoeORA0PbUCW2O/A76fLd2Y6AfVZ+fT/v51JChIT+jf4w748+e0CVv
2zts0LFXY99A139WF+NqeE/0Sx+FfhAamnnJnPwm4uiteFfKUkdjxTxaQ8XY
FOgabLiQDSwKW1loqky9aSneiTTeC/0tdvX4bkCmj8wc2XnnqnUle0JHZ0z/
YoeN/T0yMPxadOBi642hHdpmDMSy4MtXySFOSFkPB0b5qox9LIwMfRe4WHig
jdFjqY43y6bPWGs3Z/3t+F7Y+jH2+eCtoN1+jPcstjmtwy4sZDLIZoaWXXaG
6h5YNkZkQNl4hC6BSeifMgaC9sAakcb+jXwRmfmqc+7u0Mki/0O/yfvjv+HB
Tsb1gcXE9w70JzQ4mC7ocOwtO0JojxrbW36s+BdZr5umgnVTW4d+6rXANYFv
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
Yw/kPOIsYu7C424T8qj/B8/RBNM=
            "]], 
           PolygonBox[CompressedData["
1:eJwtm3e8zvX7x2+cc5x1H9x7nDLKSCEko/omOw1lJHuTKHwrZLfMhGQn2ml8
KyUNKlIRUsjKppBRCUnh93z1+v3xfpzr+lzjPe73uNYp231Ay/uLBgKBwmKB
QAZ/tyUCgXZ5gcBy4E+jgcC7oUDgxtxA4DDfbk8GAh9CrwU8FnoqFghsDwcC
baHfRdsaDwS6FQYCK0sEAj1y+AbvUdqD8I+CvwW63qA1hbc4bSL8a2gNgOfD
/xy0b8FvAR8P/jj4MuTrIj8Z+WrgHdE/H/0DiwQCVzC+b+m/FfwtaT8g+zH8
teGfAP9V8K9lzPcwsRLQ1wG3of0KvTGTXgK9O/xVsgKBLtB7AO9GR2fg/wUZ
YzoQ2Iv+9uDtaDug5dMeRt8l4K8B70TfLPDxtP7wdmd8qxjfHfT/JeN7NW7e
72nd0L8eHj4H7gTfDC07Egj0Bb6H9hN4JmtaOeA13Qb+MzIDGG8zvjVjvIs1
XvAe4OXB58ETzfVv1Je+O9Dm0X8X1qciHeWg/15onVnP7ej+Afk2yH+JfG3k
y8F/riAQ+CUzEEjAf45vdeHvms9vxdw2xT3W7sjvRr4k/Gvhf1p7Bvw9eFLo
izD/xcAN0f8e/M1Z02uRvQ3+IYynAvhIxrKFNZ1a4N+kDWtxHfR60Jcz3hrg
GdBLoq8S+osBj0yxHvwW1RjfTuh38u08eAv03QbcEvmxyB9F/kX0dwJfCH4c
+erMpzj45/TXs3ggkAU8Cn1XIV8P+hH0NUHHGfCuyE9B/ivwEfCPor8g+Hbm
cDfzKQ2+Ef6r0JFA/1jG3w/6neCPgbdjPC9orZn/j/BfR38T6f879I1FX1v6
+xt6DPwL+luPvvrg/ZD/Dfk0Mq/Q1wvQO8PPMAN7oXcHLwXeFf1dgRvQfkf+
QcabZP0HIJ9dMhBYze+zAfnvoY+HfxLy55GvCX4w6D3+DfxdwAugdwbvAJyi
fQ39IuPpCn8j9LVhPHU5H68y34ehX6X1gP8z6KWh/wGeQ/892SufwHOUtTgJ
/0bwAPyvoW8b+i4widm0m8FfgH8WcBvkJ6P/PvS9h76R8F+t8UIfq/sBvGeB
z8BB6JfA/wv4u+grxnr+Cf198Cas70D2W33oTdC3GPmHGculWk/oX8KfDf9Y
+ryW/puBPw58I/QG8C9Af3f4c9D3XlCbjfVgfUqBLwP/G/729N8b/oPwl2d+
o1jfU+iYr7uB/v4APkibCH4b/AeAt8DTWvcba1IK/UP4djn0q+miCfO7C31T
0fco81+F/tvBh4MfQd9U8Fbg48F/BV8Efg/jiTKf0+B9gG+A/h/o16C/Lvrv
Bp8BHgQ/AP/D9Fc+6DOps7mO/dgceAn9X8787gBfyfim0H9dxloOnd/BP4fx
lwVuhcxx+Bsw37fR3xz996F/H/xltP7QD0FfRn9ngEvS3xruij3gI8CXo+MB
xjsQfZmM50rkw8hfYH3vR9/ClO+63cxnAXCc9h3yR5CPAB9H/nXkq/P71kXf
rcg/iPyryA9H34d8663zCP9S4LuROQueD94WuDH87eBfBf4O/dWCZw3jrYa+
a4BL6zeivwnouxS4OOsxXnc7483Q2tDqw/8y61WO9SqDvtOMpxnjvZff73Xo
5bU+8C8CDkPfCL0+/GWg99T9SP9/ch5Hsr5L6aMr61uB8XwAXA96LegH6T/G
+K7k2wHGcx76M4yvDPgO8Fno+wj6Q/CX5nwPgN4B/F7oCfSVg/4DeGvWqwj9
38HvM4P1SUDfiHxr6O9DvwX5QfR3GfSh0LuAvwx+DHpdfs8b4P8D/izmUxf4
UsbwJvM7B34JcCH8h9B/CPki8O+GZyz9/478LuA7oI9B382sz2z0VwFPge8E
f5r1iIBvRn4q8/2N8ZxmvIvBWyJ/GfTO0F+E/0b9PujPRecXjGch/Iegt4A+
Uvc5+qajP8KYXmB8LcH7y5aA3hV6jPX5Ff0NkD+H/C/In4U+lf6a0V9t5jMF
OBv5mchfivw90MsjX1TnDXqa/iuAZ4CHGM8l4CeQeQP5ipyHdvzeXaG/D70V
v+9+9kdD+vuH/toxn9X0vwP+Z+CfRf+5yNeGfgJ6MfTPou924MGgbQDZAs3Q
1xN93eE/BV4d+i/wX2Q+VYF/pk3T+0f/lZn/kIjXQr+pftu/Q777uyHzlmwd
FC9G9lZaH+DtyLfMZt/SfzlkTzOHpcBtoTeiv0Xs0eeBm9GuAx+Nzt/Zb12Z
/1B4v0fnn8DDoHeBfg3z+wu8GvthDPqW0ccT0MrQykHfFvPb+A/z2Qo8GXoG
/f0I/iTwNYz3AfCXkN+N/Nf00STPd8ZJ8P/R3wnZQ/TRUPcNbQTj34LO0zoP
4MXAB7EGw+AvQR8zwRuh8zj0x6CXBF8P/Qvo36O/ZZ7f9DPgY5hfsVLMBX23
wL+Gdj7fv6F+y4/BdwLXoI1jLGVT/i11JsulvKZaW/FcBl5IK1bEd8olwEuQ
35TvM6iz+BQ6zsC/B7xSym+k3krxJMF/D3ltNIZGKZ9BncWT4NfprkJfMugz
r7OvPaa99hf0m8C/Chs+S6uv+yVl2bOsXx90b4OeRrYEazCbtegPPQU+D3wr
tEjYd6f66AetPS0jw3u0A3DFlMe+Cfwyfvst6Lg7zz7CVuDu7J8fc2yDyxZv
Av4ZeFv6bwy8l/W6N9s2rmzd/8IzGf17oe9jbbbSJui+o/XWewPPTubfD5ks
+nuIb1Ph700bwnwaQf8Oel/oZxnbZL69U8Q2+FB4+4Vti+9G/4/oXsgYEvQ9
kG/zgZ8L+23IRn45eAE8u9C3BLwEcNGkbTH9pkWAl8J/HP4N8PSirxP0/41s
Kcb7LrSu8JxnLS7QugG/F/Zb9gb80ZRtbtneXWg7gCvE7essgqc8cCf0nYf3
PvoPM98BfPsFek/07WF9T9BnXqbv6OvRF4FnRdA2ZJeIfRL5JrIx9oT9G+u3
lg09J2GfTL6ZbNgd0Iejo1LQNvUh8MG0aYzlQdoj9NUs4rdwOuPJRH4vrTe6
+tD2AY+CfkWWz9jVsmXDvquK8a0auvOT3lvP0oLAAeb8GLwzOH957IWyEd9F
/eHfpres0LbH+/Ak9RbIRmRso2hl4D2BjleZ+2u0SfRVE/ox4K7wb0bf24yp
qM4+32ql/Bvot3iXNazH3D9iTrdx3v7kWyfdj7TsfPukK0K2WWS7XMa3kcCj
aD+DVwAfDbwTngbAzzPeXfrtQ6btp11Bf5vBa+u+pr/H6G8VeAH4APjfh39N
yLo1Zo39I3T2y7dPW5X5FKf1yvedf3XKNoBsAfU5A/htWo9834nFwn5D9JY0
4dts4CHyv3SX0AYDt5RPnWOZd8CvRqZ/vt+84vLnGM+14LnwPMJvMwT+B8BP
gz8sfzRlW2cF33KAX0J+eb73uPZ6P9qqfM+xP/CL0D/Re818dzLfn/n2HPgp
+EeH/Wbp7XqQbyugjeHbgny/KT31vvL7NWK+/+XbZ7oLGN8z9P8xeFH6fyFs
+CNakZTPnM7eDej/DNn54Eu0vuB3Jv2G6S3TnD7Xemh9M8xzEfxJvXn53lPa
WwvBP8h3TKA1+GTw18HvYn99o/cq5b31MfO7NOQ3Vm+tfGT5yrXgHwg+B/kc
aPtSto3kE+wHzo3Z17wCfAR4BdZjfNA21E7wIpyhRcDT6G+f7EHoTwf95uvt
lw8lX0o8RdOOSSg2IRu0NP2fht4p0z7JGdnTyA8K+szq7J6UDZjpPvdAr0E7
qruEtjXkPfzvXqatBT/FHqiaYR1rZX+EPXbdGbo7CtE/POiYxE8Jn1GdVcUY
fkY2BM86dJVgPo+wfmdCtnW1RstYn8byWTI8x0N6H2n/AT7I/isDLbfQvlpr
+PPkayK/C/m24K9o/8j/yHAfYWRPQ98LvRP469Dy5f+BtwcPAn+a9N46zX5r
C+9h2s3gzWjzoL2PjrUB2+hLUo55KfbVWj6rfr+I4Va058Gn0xoG7YMcYL5d
orbtO/NtMbQSEcN6I/VWTuZbu0zPcQpwUejNg/aJZ4Av1x0W8LeZ4KP15hdz
jGJMyntae1s+WUv5W7qvMm3zlNJ9xX6oyd1ai7Za9yVjupLxTIbn17htAtkG
som/Vqws7Le0EvL/sBb/S9hW1h2qu1RnTGdNZ1pnu1PYb0MV+C/qLtUdx2/V
UmcGvCv0EdBrQS8K/Bv0q8CfQt/vwE8zxmXaC5yfacBHQvblzsKzOWIbTLaY
bNIJ8J+kVQGfojcPuDvnZySyQWS6Kd7IevXI9pnV2R2Kvj4ZthFkKwxO+22Q
zHL0/43MMMY7nPYP8AHaPcB9aQcVzwrbV0/RXzf6GwE+B3wi+vsAN4XnW/Sd
5Pd4En2FUfsGq2VTx7wntDf0ZuVBz+bbk9m2uWR7XUOrr/WgfcL8fwKvl2mb
Yxf9HYK/H2PpTzss+0A2B7/1fPofFXZMRrGZIsynN/R8vmWiK8G3DnHHPBX7
VMxhA7SOSb91S/VmgRfQsmTfwd8Z3mOMv0xx37FHgfvz7XCObY7y8L4T8dus
O1J3ZU/0bdDvI/9UtlDCsQfd2bq75cj8lGUfYxNr/wPtqQLH+LKijoEpFrYK
ngnAS5jDDfT1nnwy8Ga6MxnvW3rv0H8sYt5eujP1dkZsSzVDx4aQfUL5hrIR
N2m9kfm7mG0k2Uqzw45NaMy90F1L/kFx35HXAN+iM0H/nfnWHHgKY+gDXJT1
eAq4DjJ/y7bhW23g6fKngF+UPws8gG8VkW/It/uBzzLfJPxNwetArxU1rQH8
J8J+E/Q2zKXlKj7Cml2f5zdfb/+zSd9FSdZjgt4v2sY8v0F6iybqPWIu7dG5
n/ldiDgWs582l/lshv9xeMfSemovp/x2y4deBJ4I2zfWnXFO8Qz430X/OOi9
FK+OeG89QZsu3z/p2K/eeL3143VGmG91xvcVvA0itoVbyb5mPJPijuXLp3pC
sQrwmfC/zf4/j2yVmG1rvRl6O2rLR8+wTSLb5AqtSZ5tAtkGsmFky6yWPwu+
J+ZcgnyMEPhm8PbAfRhDaeCOYdv2K8Gfi3tMGtu1GgP0XeCti9snnhK2zynf
U3umBrR9Uccyq2p9gRchUw3ZHPA4+KCkY43as/9Neg9qL4rnNXhP8fu/W+CY
xrXw10haVx3oNWU/Qp8NbS4tBH1g3Hez7siKjGcG+irCP082pd6quO8+vcFX
aC/Tx0053qPaq8dpjRlvcfATwGH518BbWeM9ihVGTauKzKvIDor7LtadWkm2
muzZ4vb5H9VvEfNdNoXxZSJ7ivXZrFgf8l+i7/G4bVu92Y8C/xV1bGkHPOeA
P2c/35jnmNkK4G9oN+c55rgWuCDl31Ix1haKbypmHHAfnZHvDc+2XMdYqoAP
po9fc/wmPwRcHf51Wf7N7wQ+go6V4Gnw6Yz9SMx3p3JSS9H1V8RjW8qcNjD+
SSnnSiTzpPwNdHwAfJg1aBpyDku5rLXSCTyOMUSRXc14bgYeTRue4TM4Bng2
OtsUOMa+nb4qgm9lbttpA8GX0B5CV0d09Ie2I+SzpTM0Dv3rwe8FzwYfAx6M
O9elnJJySzOV00D3CtoWdI0Ar1bgGPmX4JMYQwrdtyPTHHgYcz7C+t0KvRVw
1ZBzX+pjk+x75CsXOIa/AvlHoT+UYZ9Pvt+PMfumskFki3wLvV+Wfd4PobeN
O/eDaOAu4Epxx74ux6avGHfMXLHzf+cMfFw5wBzbIMeUj0BwepbvyElpxwAV
C9S3jdAO0N+0LMeAY/w+n6GjEvJH+PYpcF7Sd+f3rG9f+HvSMrK8Jy5B36yQ
cz91wB9XrAF6KMs2yTjlLpOOVdXk964PfJPGEHQOZZJsbdkgWY4pNdJ+hf5x
0DmADtDi4F8GnSPpBn4XeIbOOm0NeBvwYgX+Nhe8JfjFoGOys8Drxpz70Jjr
AQ+nNWPtGmmMegvD9o0U0wzrvmXMRbM8B81FOTbl2vTtEuDb446dywZrATyX
NjLfOcBngb9LOlb3qGI2us/Rl8h2DqkbYzut/ZztGO8oaFeGnJvVG9kS2u+0
obLlaIOhrWR8F9B3Fb9Zj7BtNtluj0K/AG+VlH1/8awI24eRL6Mz9jO81enz
QNA5qBrAt4ScC9tBf3ci/1zSsT7dcQuA74ialgKfxnxL8KZ8U+Cc463Q6ked
y7sM+qiE30S9jaXBZ8A/FfrSgN/sacAPwfMTa3OI9h/wzEKfrVdKcPeBn496
LrIpt+n9T9m3VsxyFXMpGfLeV45hXMI5HOVy0qzfC/JdQ47FB8FngT+vOSD/
Let1HNqcpHMNyknPBb5ZNjT8FcDfhP+TtHMZukOXpW1jy9aWTdua/p9PuC/l
dIYytk8YY6Ns58yVO5cNL1teMeZrof8pmynbOZRj6JuZ8NgU81Ps7xnZf9m2
SWuif0PUd5V8QvmGa6L2fRVzPRO1TS/bXndGZ+AJKee6lIOeqNxF2LH1y5lT
MuQ7VXer3vhroe1NO5anNyqCvm2K4efYJ6jN7zWa1pO90oP2BrQJysHl2EeT
rzYz5rdIb6TeyhFRx85GcgbGhPyb67dXTO448nNi3hsrZEOH/AbqLdSbp7dP
e0p7SzaBbIMHwrbNy6IvGrZPIN9AOcMnmN/TMb81imnuCznHplxbT/C9MdsY
sjVkU5dlbKVSjk0qhrQYfY1D5tWaa+3rhBybVEx0D/jLspGgz2e8fUO26WTb
lefbs8Dtos41ac9o7wxLOTYnH+Jg2Dlr5a4vyB5V7BuZWdBn68wr9oZMbrZr
KlRbMTrk2KfuAN0F8tHlqysHVTnlHI9yPbJxF8ScQ1Yu+Rj6O0btQ8uXVo73
Ivy90o5d6jd8E9758mFy7BNcBO8QtewtfFsNbV7Mc1uOTJ2Yc0bKHSmn0Dvq
mLVi14oZXox6DpqL3oSFwLuTjh1PYn0HaP5JxzIUY1esfXvStrByEn3DXlOt
rXJ8WZyFPUnHmmWDDFK8WP5EntdMa3cgaVvs3xg18H1h5y4VY1aseXvavpnu
8G1pxzgV61SNyI/KDyftyyjmpNjTr0nHLmWzzWA+qxlD0zznPJT7qAj9wzz7
fPL9FPNV7Fdv6K6YY66Kvf4G/iD6J4Xsi8iGLytfAXqrPOc4lOtQjle5Xn3b
BL4u7VoG1XysV25V+0+xZVpTzS/uWhD5gPcD95NPmmMfeHjYOS/lvs7wrT1w
a+jrc8wj3pVJ55L+Af8CeEvMuR/xtIE+j/5m5dgnuFT8IcdmFYNVLPbOuO9K
xSwVu6xGn3/kOEaqWKkKIeTLygaTLXZ92GORTy/fXjEjxY7kQ8uXTspnyLGP
L19/TNxj28HvU4O7vwf4rhzX+KjWp3LYayub8wHwoXHHQtezPgsZ6/tJ17ZI
Zolyj0nHPvTG6K05mbRvrDX9I+k1/Xdtc13r9DltRa5z7i1Yv9eSjk0pZnUq
5BoZ1cqI53b91gnbPrKJ7wHeIh8FeL9yGIp3ph0LU4zrWcUOQ56bak76Jswj
XtmIP0BbkHZsTDGo51Q/wJh/zvWbqLfxjYTfIq1Z77jfSL2V8pE/Zv1aQ/8a
fK1yCMCros5NS8fghL+JppqfBgnXOKnWSTGTJsi/lHQsTzG8k4xnfNK5tePs
qe/B+8O/K9c2imyVt2g7c/1NtOfBv8vznaK75cWQazHkI1+Prkq0T/Icc1bs
WTl75e51xtbIF+Hb/jzHGBRrUE2Lalv0rTn4I0nHPhVTVGyxSty2pMbQD/kO
SceylUP4MOScqHKjn/HtKmifJhyLlk8v3157RntHMYTBjGVuyLUb8nErw99F
8QWdf/k/Sb9RequUo1qg2F3SumXTP5xwDYRqIbQG9ZK2+WX7642ciP53YvY1
VeOwIOQ7Vnet3li9tf0LXeumGqP7gAcWuhYuvyS+JnDZkGvVlNNWbls1H6r9
UA3Fv7UUccealBPMgzao0LLak9qbHeOOLSkmFVQsL+5YmmJOJcAbhlzLpJpA
1QaOgL6uhGskVCuRz578kLfkKOvVjvG2D7l2Szy9xF/oWIxq6kaq1qrQtRWq
yXlctU/I70b2sN5I1V+lnXtZDF5JucKQ95pqpFQr9Zp84AzXOKnWaYjuzCzn
vJX7lk0o21A1YxnKTUVcW6EaB9U6PB9xbEo1X6r9eibi2gHVKKhWYX/EtWyq
yVFtTqWoay9Uk6faPOWklZtWDZBqgSpHXRunmkbVNp5POJahmg/VfiiGpFiS
ahxU66CaJNUmqSZHtTn1oq6lUk2HajtqRu2bqaZCtRXKmSt3rhoD1RqMiLi2
SDV5qs2rEXXthWrmVDunnLpy66q5Ue3NtIhrA1WjpFqllyKudVPNnWrv5BPI
N1BNlWqrGqFvVYFt4IXytyKudVPNmGrHuoQca1ONlmq1hoVcy6aaC9VedFJ+
POCaL9V+tQu5VkU1KKpFeTjk2k/VbKh2Y27auSflhBvS11Mh14Kp5ki1R6mU
94Zq1D4IO6aj2I5qelTboxivYr3KQSsXrZiYYmOqUSiutQi5llI1kqqV3Ji0
b6U3Sm+VYlyKdcmGCCVdM6PaGe3poOKhSdeaKUa3Rbk97fcC5+yUuxsWti2j
GjbVsk0LuXZGNYaqNZTPKt/1TWR+095OONb4Afg58F/Tpilm8TKyf6VNG0f7
J+IYp2Kd+k1yCh3TUGxDPpl8M+XolavXmC6A1wm7lkk1Zqo1uw3+dQX2weSL
KWar2K1iXop9VQ/b9lcNp2o5ZUPLllaNk2qdvo76LOo3/Urx5ohrRVQjpFoh
1WyodkM1VKqluqD8RKb7LAVeLuTaV9UQqZZoccS1cqohVC3h6xHX+qlmTrVz
v6j+sMBvgt6GqUnnHqrwbXjaPoN8hyvBh4IPS5smG0y2mHIoyqXoTmkXs48v
X/8a2ui0ayBVC9lK/r1qF5O2ZZUTrwa8MuLavrugz4H+Ytq1o6rpfCntGKpi
qYrpKLaTCrnWdQ74LvB5aeeaVRPQUfUxEfetHI9yPaWi5lVMUbFF1cSqNrYX
+Jvgn0c8N8V8FPtRzl25d9UkqTaptHyOAud0M1RrFvFYFdNSbEsxJMWS9Oa3
Ab495tii3qyP9ZYlHRvQHTqTvj+POZZRVD4X8NUxx94U01Fs51K92dnOmSl3
phyMcjGq4TxDf1fGnPtXzqS4+op4bRUDUyxsZMy65cPIl3kQ/M9s25SyLSen
XculGq+n0q5RV626ahTfkf+Hvqyc/695TfuN0VujGuI70o7BKRanmJdiX8qJ
KzeunL5y+4oxK9asPXk+7BiuYrny2V6JOWaq2KlyHsp96Mzp7KnmV7W/ylkp
d6U1P5x2Da9qeUOqSU67Bq4lv39A8TvwHmnTNGaNvaN8jALHZBSbUc2uanf1
rZP2CzyZBY5BKRZVMeJaWX1rm7aNIVvjFPNtDN407Voz1Tw3S7smUrWROjNH
wY8knOuej47Dim+kLauYgmIL1WKmKUdZVfEozTnomIRiE6rJVm22vrVQ/CHi
uSkmptiYcmjKpSkGp1hcIu3afsXYkmnXAKsWeKVq5NKuIVUt6RB0fAH+U8R7
XTXCqhVWDatqWRXDqwP8R8S8ikErFr1U/mmB96D24gdpx3r17UPgdMK+s2yA
wRHnYJSLUY3ExKRjEopNxPnWF/63IoZVk9tb6xvxWFWTo9qcEmnXBiuGWDLt
mKVil6qxLZN2DZVqqVQzW4LzMAD6tqBjyIolq8ZTtZ6K6W2g/9lR1zqKp1La
MWbFmnUGHmI+e+L+3wXl+JXr/z/g+ezG
            "]]}]}, {
         EdgeForm[], 
         RGBColor[1., 0.95, 0.75], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNnHe8VdW1/c+959Lkcssp995zzwUBsYEFMfYuIipNRDQWNM9ETTH6jLGC
guXZlVhDiYjJL7GiWGKPPqNiYiImalQURUFsUZMYn4UUf+PLGHzMH+ez1157
7dXXnGOOOfcZctQJBxzfWCgUBvQpFIq6/rJUKPy1f6EwtVYofEMPNtBvr4ZC
4WHdD+lbKHyq57u0FwqXtBUKG6v8hSkzUWXOGFAofF/vPqr0MJX5i/I/0u/S
Jl1V/1BddygXCmN03aVHz3V9T42upEyb36VO3j9O6WG6jlV7o5TXpev1Kj9F
ZecX3P6l6cOflfe+fvup/ETVd7Hyt1D6MvXnUN2fr2d9Olx2hK6T+hUKgzSW
J/Ts6mqhsKHyx2RcO7f7/TdaPd6NCu4L7VF3a2+llT+8V6Fwhd4dqPSPdH2h
6DR1fqQx7q3n2yj/YvV5hcb+gOo5WXmLVOaHul6p+q/Q70w9n61+Hqj8cUrP
VHqG2tpb6ZV6/zjlv6nr0l5OX6X8q5oLhTs1vgdV53D1d3/l76D8U7oKhcn0
QeUvanE926vczUpPUf5YldlXfZmq9ASlX2hzm5eyTk1+d0ddL9Ba/03XBzWO
ZXr3IpV7Wddv6jpUZd7RGM/U+l2l+xm63qD7D1THuLRFPu0dUfW6Tyl5rZhD
5pJ1vjTpT9TG/hrbPqrnWJWrqI4duwuFL6tOk7eB7teonmOVN1vlD1N7ryn/
YP1WaA4eqbmOeWpzkq5Ha43Kfb1fZumdAUrPrLrvjGGR8teo7b9r/r/Q9RrV
86baulZ7o65xTNNvter9uNVl3lV7G6p/berD6So7Te19rvceUHq9Xk7/TnWe
1ej6RuvdhW2uZ7TqXa33G/XuSKWf1fOl/V3n8rrz29W3T7Qnj1D5t/XuwEan
eXeHqtfsSLVfVfmBSp9f8pnk3E1S+fN7O/8O+qn0FxpnUc8mqO/j9fuvRu/Z
u3p7397e5LNNHT26Hpn0Jnq+RuX66H531Xdbr8gA7bGP9c4d+v2zweWZn0Gt
bmt4H++1M7NvmVvm4TCVq6pMRb9H9F5N/d5eda7SGjZqTVv07kXKm9vgc92m
69ka71mqo6Tnb6rctirfoHFfrb5dqfJzNMZbm/wuZ+fiVq8pe/LuSqFwvMpN
1VzN1VnYTO/O6fLasAdmq/7Bam+M8ssq8wO9M0xnaZHaHqz79TSOTrX/faX/
pnqP03Wm+rBA779d85jYE6zvtp16T2s2ust7ZE3WlD14cW/vwwdLnoOJ2lfv
6b5F9R+t+9v7eS+doPQpera+rgtVdmiPy5wYGfw3/d5q8n75OPtw9HruW896
Xp+JTd4Hp6ufc5TeXXX0qA/f1u8U3T+j3yN6f6GuN2t+jlLfpqjMdro/X229
r7GcqvRgzeF5rJHq2lzXlcpfVHR+R65Dkt5Ba/M3zdsu3Zbtw3hX14f07k56
d5XeHapyi9Tu5UrPrrpPD2usuyo9Te2erHm7rY/78Gu991f1f6zGU1HfRrZ6
j7HXPld/b1CZz3Rd2Mfp3yFrWn1OtlOZKzVfVT3fvMdnjrPHu/cq/Qtdby24
70P1W4KsaXWf79azy/s7nzn4ndI/Vfrp5A1J/kzV+67m+1T1uVt1bpkx7qd6
NqS8yvTVuD5WHwap7Hhd79d4b+jl/TVWZWY2eX3QB2/o/bOa3Tb176vn++k3
W+nbBjh9q66/0O+M/pZxCwe4nmv17jYNzt9D+c+qP7s2eB3Hqj+vMl79lmYt
3lP+/Ba3Qf3US/pxPbuq4r5OUp83qXmfv6+zNl35Gyt/vPL/gTzOfpit/LHK
37vusT6jMd6kdn6k/H10P1Hlx+ha0O9A5c/SHni00X04ouYzcmTN49gnc3J7
f++TS9XGDQOcz1g3LnrtfqJ37+jvcpR5rdXpWtE66UKVryr/U83/ESr7W10n
IO/1e1f1f1byudmr7rLost83GnsM62v88XKjn5E/S/3bRGtztq73aE++r3Jd
2uc3N1jnspcY64Z6989Fy4xZfV3fA2Xr0cEq/5za/TtnQnlrqu7PF7o+wDz1
9fl7XmOZpXZLavdlPTtddf9L11HKX9DPcronshk5f5n6NQa9pvuLWyxv0fMn
ln0OV9Qs28arzDa6v0x9uEjX7+v5nprT7Zn/XpaftNtT9PiYr22bLEeRp+jH
LfTOzoypZpmxhcr8vWjswf69scFtsBfRBb/Rs2XJv6HN5wi8wVniHl3Gubwh
+ZcUfZ45y+QtTJkzsvdO1jzMGmA8hE5Zd/7nqK0P+npPsB/OrFhvTdDeG6K+
3gVW07ivaXL6HF0PVP4SXReyPqr3ZL3/YfAA6duajFc2VvkFmp/Rut9V9yVd
j9I7s3TdTfX/X7DKZ3r3Ne2nZepPd8mY7m6926F+PKL+TtFYfqXraV2WG8iP
Zb1cHixwWsV6elyPZRay6zjlDal6Te7ocN7Hqres6xL2qMb6c/0eKlmf36gy
O2tcz6vdn4EH1M4L/a2n11M9X+i9V+qWsW/o2au679fPWOKj4BTwCvqJd6gH
/Q6uAl9dofpfLbk/e1asg8AuQ1R+suo4gLHr2Qhd31I/P9L4ftnitpDnNbW9
RHPQpevtjda187R2E1TXXcrvq/wnVN9/K38p56rR6dkFy0zKI+vKyj+paIyA
zlzd13rzWfXtPbAJ6689u2mr89HJ3CPXurUO27V6H7NGrA/Y+4Le7v+/ld6/
j8fDWI7p8N76huo8WuuyQmM5tGS8Bb46U33eWH0rtnks3y35/IMdpvUYM43S
3P9BdT2p30vq8+4pD6bZtOr5Olxlj9BvD6W3Vt7O/fwuWAvZSR/Y2/9S3//d
aluitdn3yIGvad1/o7nbRtfdih4D/Wc8k4MD/1Hxmv9BfW5QG+8q3dPjZ5RH
L/9S7Z2s+wXBnIdGn4KBGNfN2ExV47vDeiyP9kg/25rdN/q1Y817Y4eax7Ei
2OTOrB0yvKh+3KJ1b9L1buX/UPnXKf90Xc/Q7xal662+x1aqqsxpmUNky+kp
w9yeqt//U/4pSd+s/AN1fSS6hrNCnZwXnp+WMpyjU5L+uq7/q/I7q8xeLcYh
yOTTlD69xfbAnGbfk57EvBWNjdboN7loHYqOpW3aPUDXKfqNUXpli+/fLViH
ko8e7VCb03Oez250nduqzHhdJ+j3WGxY2sP+3T/pbWPzXhw79OuNLr9Nwc8n
pgx7rSn7jTmYnnlDF56tPj2s904Ao2iN/lAyfmAexqrMf1W8/zrrttumt9hm
f6bZY+Hd6Zkf8rmekfm5K2s6X+m+vVz/X5uMB5AD1Ptk3eU/UTuPpd2D9Oie
7MPnGnw+WaP7wWwq/5zeHarrUL1zjtLLpFuPrHivV5R/nuo7p8Xjo5+McWbR
13OSBgfOiH7aotm4ZKrqvy/56PTvdRo3HdjpfTQra7q02fVSz5bNfn9a9CY6
E3wDXmDOkQ3fVL96gQmRra1Ov9hoLA5mAi/BmXBuOMvgRfKPLHm/gTHAGh+p
jeZmzw82+ge9bacP7HF6WslnkHouaDRORkdiM4Ntwbhg8tnNnk/OAmcI/cz5
wpbGpv521biHd9Gtx8jW26PJHMxmerePZNMdjeZC4ERammxLY08Vui1TkC2H
lMwpkKY/7c3uH+kvK9Yb10mefKfuOm9V3te7jJEP7LKdSP3wLX8qmk95InMw
oNkczqG5J438W6nyT/W3HKIt5ORF1IM9p9/yVuPFWmwR7pF7yMDlyQdLUobn
Pwqf81PJsclKL0dHa1xXVs0XXVW1/cFcg1suj12DfTOrw+v8TMn8xnHhwa4J
zvhLzbYpOhj9i2ym/scbras/z9qtqVuHnqA5ubfN+v8W5e9Z9D3pS5p9/zxy
Ses1sd3PTu80j3Cqrg/o+Sj9blKZ0bp+iuxpMPZGv6JbwcIXhtsZyf4O5j6T
/aDrj/U7iL2FTtBvOHJA5a9usu3D/GMzfK1qvYBOo52pjW7r3EbzT29qzl9R
ekTSZzS6zFyl5zTYVmjX9YsG6583lP+4+jRB7Y3Xr9Ltc9ip6/G69sAVNltf
rAguekblh+fdz9PvtTqlzeXhH+Ah6kmvfR+bsMG29dLwNuAFcMO3tJfOa3Q+
exc8CZZ8kbmIrsT+Gl6zfT1P6757xdiio26eDnwDtgHXkG5ttC5d0dd8wGT1
oar1+g42cK5XYV9r/e7Q/f7aA1tVrVPBF8syLtaC+p5MnXBF4GzwM+fiqeRv
De5VelTNfSAffPWQ0gfr+deUvr7ksos7zD280dccBTwQWAUuiHaWpM7VDX53
swavP+2t5UcarJPQR5vVjHvBv+zrI4Pzj+lnDMM5hWeclvH+vr9tb3gQeAHy
d9G43wHH6/31tO43trgfzOv0/rZ/sT2wM3gXmwJ9fMi6vundE1X3xWU/f7r/
VzwL19M6PRbKs+6Ppf+8C3Znn/+xwdcp2fO0OT32OHb2dfotUvrJqu2Ho7RG
S6rmcp/Staw+j2j2u5wd0sjSxY2+J039pGnrw4r7fE2H9Q+6Bv0CBsdWbGnw
9bmkD036kwZfeYYt+VazbZYReq8O/mrwum8IBm+wDITXva/Vsp8zxlm7Tc+P
ypn7TOlxSZO/7v7C8ELjks/ee6DNvCXj2yzjgjsZHP4EbEC74L0ZdfOVSyrW
o4wRXXxBh+XxKyVjf3QpGPtqpX/a2+1uHYzAvP9Z8/tDzfMHVeMHxgiOvVTv
3d9mGQn3tTA+gxearb9pEw4ULhTe/zX1Y330QcnPR2bO5/eyrb5rMMOWyeeM
0p+r0q+fpW/zdC1pf8/pbSwAJgCDcd04HCN9uq/Nsnto2bb8w+r/70p+vqn2
+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
+jIo
            "]], 
           PolygonBox[CompressedData["
1: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
2w==
            "]]}]}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1: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
f4r/AfZet5s=
            "]]}, 
          RowBox[{"-", "2"}]], Annotation[#, -2, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwl1Hlsz3ccx/HPiAht17LSoXVT/EEk2xx/bK5IJPwxFopR9x/ujSlxbYs7
yh9C/WFbtOY+ElebWOfYoqgjqlqtTbvo1NGNtoiI6/GNP559ft6vz/vz+X6+
R38dpswbOfeDEEK6P2OSQrjTMoQbXIwrH4UwtnUI4zEOTdVp8pgo53Ufm+NY
9TiO4695vXwif6iewPGczhvkkzlBPYmbcQlf45t8ladwc65wjtFRf3IIg5s7
m3FDWWViCNltQtiFHBTpLbOmnEu5jG9xI71Veg/o+ZcP8l/mlruPal7K93hZ
dF96HxivMP4eK/HENXvKeyHF+mrXv48HaGvuEz2f4oj6MA7hhXyQrMBeA/g8
D+QLPJgv8hCu1Vdg340tQsjEn/K+8ir59lYhZKGP+jO8ko0y38lzyDD+zngx
d1Z/ZfzWeAKnqn8wXmT8I3dTTzRuED1rdFevlc90L+u4h3qqcYpzJCNBPdxZ
4nkEN+M31uWbe83tuBhfWtsbKZ7nNOuTeTr3N9cPJc6che3YigbmtnG+PW+b
L0cZmsjveU/tOcd8DO+M3kX0fvl3/bc801KUIF5+VJ4uP8m5OIYTOI7T8i+i
52PPRViAHtE7dR8Ljf+xRyWS7FOo/6nsP+forudb45byeq5Djbyb/BvjFvJa
foJH8lT5fONE+WP+Hw/lXeU10Z74W13hWvOMu8hn81zMwefOmGq+D9/UU4wr
nuFlxNnzPD/n6/Ii3EBn/Ze5EJdQb/4PfY04n+u4QH4BF9FR/zk+izP4Tc8p
dHCWXN9WHqqc5S62eBZt9eeaz8NJPLZfG1lr5FmfG333xvdRjfb22WTdZmTi
pfpn637BPnvvxzP3t0nvU96r3oM47yIWr2U79P6EX+W7US/L1F/Hu9Q5iNHb
FLX2X+U6a7A6+j/Rdxet5DPcwwHnO4hh1o71HdTI96n3o52ssevc0TcV03DC
3seRpO8oH8MS+y7GTmuyMdS6DHWFnnJrKvl29BunNxYZzlUavVs92/RnYUj0
TmUzZSU8ixN5DKdF59ezFgnR7wSK7Dc66f3v7jsNd9yb
            "]], 
           LineBox[CompressedData["
1:eJwl1Hloz3Ecx/EPoZQxNsfcWjZZzs2RnKtN9g/NUWx/2OSoaTbZ1MacpW1y
TGPMHxSRosj85xj+cEVyyzW3KcTGH1ge3/zx3Ov7vl6f9+dTvw3JX5Vd2C6E
kODPiV4h9O8ZwgAk9Q+hrEcIi+USkN4vhOr4EGbQ7XSmXCby+oRwrHcIx9EF
Mdhq7jbdQtfrqUAjLmGH2XW0HI95PcG7BD1xzqTJKJMrxy7fu1GD8fonRDPm
r9EcO+bir/hu5EPr6FO6n16mV7HAPa7QLXo3Y7RahXgkz1EYjYn86nEQB9Cm
firaW/9gZPFYJNfdbA7tSmPRDUvc8UffEFrwHT/Rij/uk8ZjHGbyyEaK3tn4
7M2aUci3UbzCDpfpJG+W53sxjpjvwGeQuY/OyeOTjwvOLxGfp6X0vnqqvuvR
W5tbh1hxNySqJ9Nh2CG/E4/0jRXfMbdSvYFPAT1Hc6N3RWfx7Oie+k7ao9Tc
WvyVb0OGPTPRxKtG/x58ivrdp5luN1eNoepn3PM0qsSV+MHvDX2LV3iNJuTq
fU5f4BmS+LyM3lT/S2ct4ZGPDfI3nJdqj7EYg1nusg1HeXwVf8N0+07DVGw0
kya3VM8y1Inn2HU/rcU8tX00m+6lc2kir1Y6Xn8LnUAbnHsWq3kWowi/1H7i
j/xvTLZvmX0X2XUhvqiNiM71vQLL0V58Qe9FHMYhdEcsCpzbI3pr34P4DES9
3BpxCYrsl8xzFR1G63jFeKeVeuLNxWGKHRrpcD3v1VLoB5ohvzn6fUa/Tdw3
s4nnPVqlvxIHUY+PcpVqVchyRjUeyBXZ/yEt9n6rUYRaXrfM3MR8Zzy0V6eo
n3ak6TzS4v//f/kHCJCnuQ==
            "]], 
           LineBox[CompressedData["
1:eJwl0jlPVWEQgOExcWmgQVEIQmKBiYWF8gfUgAgG8F4qA24sUZRIBUgCcg2a
sLQIyu6S4BoxFBRAcKms7OBHQOMCVAjPicWb98x8M/MtOSca2tL390XEOPqO
RJw+FnEvL6LkeMTHnIhW3x/4VkFEA26iCY2YVX+db6AO11CPX7kRHXo28yNG
DkcsmDnKb1Bq7ixXWqvAJTwV/+U07/Ikp5IYtfgkLtM3x9NYMm+Kl7k32cd+
D7lIbSGynSELV53vCqdQhRpUY1H9j2SGnpNcjH7zuuUzcg/UfNHbyV+5i1d4
lNd4hFf5gDNd0LOfD+Egzot7vNm55Ez8/Kj7mDltjxlMot5eU/zP+g7a9dXJ
/XT2MfkJ3JEb5xb+rL/a2hxX8Ta28ExPMy/LN/Gw+Df/wUW8ky/n9zxo1m2z
hvgJ93OGL+sZ8L3lHJsoFX/T8x2P5M+oyfBZfmtOi5q7GHS/Acy737q32MAp
6y84pfYlz+A10uJXyftZf5z7/z/bAx/rX+w=
            "]]}, 
          RowBox[{"-", "2.5`"}]], Annotation[#, -2.5, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{4636, 6312, 5098, 5557, 5556, 6773, 5085, 6772, 5086, 
            6774, 5464, 6770, 6771, 6303, 6304, 4631, 5554, 6758, 6759, 6757, 
            6761, 6760, 5463, 6755, 6756, 6292, 6293, 4628, 5553, 6739, 6740, 
            6738, 6742, 6741, 5462, 6737, 5066, 6275, 6276, 6277, 5551, 5552, 
            5068, 6097, 5067}], 
           
           LineBox[{4659, 6339, 5845, 5123, 5469, 4690, 6342, 6341, 6340, 
            5124, 6809, 4899, 6823, 6824, 6820, 6822, 6821, 4692, 4661, 6350, 
            6349, 6826, 6825, 4900, 6843, 6844, 6840, 6842, 6841, 4693, 4666, 
            6362, 6361, 6846, 6845, 4907, 6861, 6862, 6860, 5144, 4694, 5473, 
            5146, 6133, 5145}], 
           
           LineBox[{5120, 6804, 5121, 5665, 5664, 5360, 7097, 5361, 7098, 
            5119, 6813, 6814, 6810, 6812, 6811, 5667, 7103, 7104, 7102, 7106, 
            7105, 5126, 6122, 6123, 6119, 6121, 6120, 5669, 7112, 7113, 7111, 
            7115, 7114, 5134, 6858, 5138, 6856, 5137, 6857, 5672, 5673, 5139, 
            5852, 6366}], 
           
           LineBox[{6283, 5836, 5072, 5634, 5633, 6286, 6285, 6284, 7073, 
            7072, 5073, 7077, 7078, 6287, 6288, 4625, 5636, 4629, 6300, 6299, 
            7082, 7081, 5083, 7085, 7086, 6301, 6302, 4630, 5641, 4635, 6308, 
            6307, 7088, 7087, 5096, 7089, 5351, 6309, 6310, 6311, 5644, 5645, 
            5099, 6785, 6787, 6786}], 
           LineBox[CompressedData["
1:eJwl0UsrhGEUwPEzhQUpxp1JKZZyiY1v4FJKxIYFcpkFH0KxEcUOG9etBQsL
UWysfAMLlMssNEUxY+M3Wfz7n+c855zned63ZXp5ZCkREWn8NkTsVEX8cB65
wrom4o3f8YoV+xm+SkbM8bF1cWPEqrr+pogBTMvP4FLNVG3Ek1yD/Udu5Gfe
1pcV31frqzeH2/iEB7iLJ7lITdaMb/EPXqynzM2J81ivi9hERypigzt5z/6N
eAGLaEWz89Kc4wve5W6+Q4+eMz3D7nzOaetD+V4+4i0cYB+neHCHL3f6RMId
+gpvUBviD9+iksfkynmUKzhldkbfmnPLvH9CvpTHedac28K5ahYxJD+IdrUl
5p3wvPx18v8f/QE57ULc
            "]], 
           LineBox[CompressedData["
1:eJwl00lIFGAUwPHXoridMmfGaTwIKWS5RIcujUtFm9Eyljl2Sg/RomEaWdJx
tGNFxyKoSxAGdbCOEWSL6aVDkN262IZaULfoFx3+/L+3fO99Mzq1fedygysi
Yg6vExF7qiKeYAqfcHxNxFIqYhEf0hHr10bMcx3/0Z+Rr81EDOqrcR7gTesi
GrERzWjCkP4GHuYNfJ6PuL+fZ/iAXd18FJ1yOe7CQfnDfAgXUW9+lX0Len5V
RuTNuu3cw7f4QnXECIZR4Z3lKElGFGO3/gJneEq9hk+Kf3OTt0+43yRuRgs6
7LuLe2jHFvUh/mxXHepxzfzruIFqM9JIIIUkfuoZ4EE0YzNakDOrnCtQii5x
Ga/2rlUo9bnfu7tNvl2+A1m0oRWT6gVvKfg+rjhPO79AVv9zXvKeRazUu0u9
Hyf0jpjZx8V2FKFN/7K+Vt7r3phc1me/L+50t8h380iumLvk884fzcqL+/Vf
dh7DM3G5ehlK0St+yOM8yQWe19fD3+3bav4X/oav2GnWK++66n1v1SZ4llPy
SdxEFRKYkS+ov+FxfuleVn6aL3nfKO6o9arts++dvT98lgV7GuVH/f8si3eo
PXbvjPpZPBCf5lM4Jr9dPOfc4P2z3CEu+fc3Ej8Vpyv//2b+Akbkaps=
            "]]}, 
          RowBox[{"-", "3"}]], Annotation[#, -3, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{4626, 6290, 6289, 7080, 7079, 5075, 6751, 6752, 6748, 
            6750, 6749, 7131, 6906, 6907, 6905, 6909, 6908, 5076, 6768, 6769, 
            6765, 6767, 6766}], 
           
           LineBox[{4627, 6291, 6754, 6753, 4883, 6730, 6731, 6273, 6274, 
            4623, 4673, 6726, 6727, 6725, 6729, 6728, 4873, 6735, 6736, 6732, 
            6734, 6733}], 
           
           LineBox[{4667, 6363, 6848, 6847, 5472, 6852, 6853, 6849, 6851, 
            6850, 6943, 4672, 6371, 6370, 6864, 6863, 5474, 6868, 6869, 6865, 
            6867, 6866}], 
           
           LineBox[{4669, 6365, 6364, 6855, 6854, 5136, 5735, 5736, 5445, 
            5461, 4668, 6942, 4662, 6352, 6351, 6828, 6827, 5132, 6832, 6833, 
            6829, 6831, 6830}], 
           LineBox[CompressedData["
1:eJwl0ktI1FEcxfHf9KB9ZRmWOhJUai3ylT1GWmQGWWgLo1oFbVVUpKkW+WCs
RdA73bQosE1IPjKooAItCEk3Qe0KchtEUZaifoYWX8695557fnf+TPJsS2Nz
IiJeoSA3YjYn4hv2b4jYh8G1ETs2RkzxatZFDPNS9C/vH35jDn8wIFNEkyhE
x/qIBG3Vcdy9FpqzySBeKUrwiFdr7n3ZQ7QOh3HdjCfORzCMdrlx2kbX0NWo
lTll5qh1PX8bStzN6HrP22ldipBrM78dD+UfYAH98gfy/B7slrviXmv2nRhy
dp6mkS/biYu8x/aXaNr+mnyFOU1+00kM8p45K+eV4Q1e4wS/271V3jFkfZD3
Wa6Ol0G92S90HaUvaS+vB+fs38q+QwoN9unN3oELmJa96u0ztNHZvP4x+6dZ
7MdRbM4x1JibcGclVuCjO7fl7uAGbuEmPsn2Z7+3zADN0Lu0izbpv2e9oPeH
9y1ZL6JSVyWvCmWoQDk6dFXr3ItC+yIksUv+ND2D73p+0Z9ImXHEjAnfMqO3
D1W8auzBpL4uXd24jF70YM6dETqaRc8YtsvO6N5Kp+kHfNX3BXnyz32PLdb5
uf//98syoG2p
            "]], 
           
           LineBox[{6036, 4945, 6601, 6035, 6602, 4943, 6599, 6399, 6400, 
            5874, 6240, 6238, 5177, 6202, 6203, 6159, 6201, 6200, 5543, 5544, 
            5206, 5548, 5546, 4786, 5534, 5535, 5620, 5619, 4862, 5608, 5609, 
            5533, 5531, 5682, 5589, 5590, 5200, 5490, 4725, 6182, 6183, 6180, 
            6186, 6184, 5168, 6139, 6140, 5871, 6395, 6032, 4940, 6029, 4941, 
            6033, 6445, 6635, 6637, 6636, 6059, 5947, 6522, 5948, 6075, 6653, 
            6654, 6652, 6480, 6036}]}, 
          RowBox[{"-", "3.5`"}]], Annotation[#, -3.5, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5343, 5775, 5389, 5391, 5390, 5707, 5189, 5706, 5388, 
            6164, 5224, 5913, 5914, 5915, 5739, 5912, 5911}], 
           
           LineBox[{5345, 5776, 5412, 5414, 5413, 5740, 5190, 5708, 5392, 
            6147, 5191, 5879, 5880, 5881, 5709, 5878, 5877}], 
           
           LineBox[{5367, 5783, 5742, 6435, 6434, 5916, 5229, 6165, 5411, 
            6162, 5222, 5904, 5905, 5906, 5737, 5903, 5902}], 
           
           LineBox[{5368, 5784, 5674, 6437, 6436, 6948, 5230, 5951, 6532, 
            5952, 5223, 6163, 5909, 5910, 5738, 5908, 5907}], 
           LineBox[CompressedData["
1:eJwl0r1LVnEUwPGj/QdqvjwKEpRT1mQFiqmPkZKTg39AteaTGiS+oAaioA01
uLUZRCU2VL5QOqgtZqg0uRiRSjj4MikK+rk4fPnec37nnN+5l3vlYaa5NSsi
xlGWihgpihjFS4xfjniL77kRV51949WCiCX+wq/4M7/mNXWrSOurQy0OsI+M
/B4a1K3z9byIPn014rP8iGzPl/BevJDMxyKOc+xTErGlZhufCiOa5B7JLZuT
4ht8UBxxkw95wOw7/IIr+DZuYUzfjJocc3KxiAUMe68h/HVfv/l9GFbXxu1I
y9fjj/6v6jd5LHlHuVNzT/DR3oVyBcjHDyzht7NqPe/03BPXo0quEk/dcZdr
8EC+CZPq0ur/22dF/AtFSKEY8+7ZVr+Dx3bb4n+Y0LOr900yx149zrpRqr6D
n+G+fAMaMaV+GlV2OEv24fAtj7jXnDa59mRHzPqOHTzFGZ7hJzzNrVyufs7M
eaybuYZRs7Lc/VNuBcuYE3ea/xwf1LSINzxXmLOT3Cvukh/0fC118S+eA3Oo
Z+o=
            "]], 
           
           LineBox[{6204, 5258, 6158, 5257, 5545, 7303, 5733, 7304, 5547, 
            5937, 5536, 5017, 5618, 7306, 5683, 5151, 5532, 5150, 5591, 7305, 
            5725, 5489, 5491, 5252, 6179, 5253, 6185, 5167, 6141, 5695, 5170, 
            7313, 4942, 7309, 7315, 7316, 4996, 6060, 6058, 5038, 6073, 6074, 
            5020, 7312, 7311, 7310, 4944, 6600, 7314, 5383, 5701, 6239, 5176, 
            6204}]}, 
          RowBox[{"-", "4"}]], 
         Annotation[#, -4, "Tooltip"]& ], {}, {}}}], {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {0., 0.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, AxesLabel -> {None, None}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*StyleBox[\\\"y\\\",FontSlant->\\\"Italic\\\"]\\) (R)\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*StyleBox[\\\"x\\\",FontSlant->\\\"Italic\\\"]\\) (R)\"", 
         TraditionalForm], 
        FormBox[
        "\"\\!\\(\\*StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"]\\) \
(GM1/R)\"", TraditionalForm]}}, DisplayFunction -> Identity, AspectRatio -> 1,
      AxesLabel -> {None, None}, DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*StyleBox[\\\"y\\\",FontSlant->\\\"Italic\\\"]\\) (R)\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*StyleBox[\\\"x\\\",FontSlant->\\\"Italic\\\"]\\) (R)\"", 
         TraditionalForm], 
        FormBox[
        "\"\\!\\(\\*StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"]\\) \
(GM1/R)\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, 
     PlotRange -> {{-1.75, 1.75}, {-1.75, 1.75}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             
             RasterBox[{{{0.148, 0.33, 0.54}}, {{0.4818678960420986, 
              0.4730526152224628, 0.535802898173335}}, {{0.7858706516169804, 
              0.5798906443382359, 0.3570920131069508}}, {{0.9303312152063677, 
              0.6958280380159195, 0.3840267671397401}}, {{0.9788939557135374, 
              0.8172348892838435, 0.5345712627119659}}, {{1., 0.95, 0.75}}}, {{
                Rational[-15, 2], -288}, {
                Rational[15, 2], 288}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -288}, {
                  Rational[-15, 2], -288}, {
                  Rational[-15, 2], 288}, {
                  Rational[15, 2], 288}, {
                  Rational[15, 2], -288}}, {{
                 7.5, -288}, {-7.5, -288}, {-7.5, 288}, {7.5, 288}, {
                 7.5, -288}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -192.}, {
                    Rational[15, 2], -192.}}, {{-7.5, -192.}, {
                  7.5, -192.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -96.}, {
                    Rational[15, 2], -96.}}, {{-7.5, -96.}, {7.5, -96.}}]]}, {
               
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 0.}, {
                    Rational[15, 2], 0.}}, {{-7.5, 0.}, {7.5, 0.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 96.}, {
                    Rational[15, 2], 96.}}, {{-7.5, 96.}, {7.5, 96.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 191.99999999999994`}, {
                    Rational[15, 2], 191.99999999999994`}}, {{-7.5, 
                  191.99999999999994`}, {7.5, 191.99999999999994`}}]]}}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                
                LineBox[{{7.500000000000001, -288.00000000000006`}, {
                 7.500000000000001, 288.}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.500000000000001, -192.00000000000003`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -192.00000000000003`}]}, {{
                    7.500000000000001, -96.00000000000001}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -96.00000000000001}]}, {{
                    7.500000000000001, 0.}, 
                    Offset[{4., 0}, {7.500000000000001, 0.}]}, {{
                    7.500000000000001, 95.99999999999993}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    95.99999999999993}]}, {{7.500000000000001, 
                    191.99999999999994`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    191.99999999999994`}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-4.0\"", ShowStringCharacters -> False], -4., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -192.00000000000003`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-3.5\"", ShowStringCharacters -> False], -3.5,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, -96.00000000000001}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-3.0\"", ShowStringCharacters -> False], -3., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-2.5\"", ShowStringCharacters -> False], -2.5,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 95.99999999999993}], 
                    
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-2.0\"", ShowStringCharacters -> False], -2., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    191.99999999999994`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], FontSize -> Large]}}, StripOnInput -> 
                    False]}, {}}, {{
                    Directive[
                    Opacity[1], FontSize -> Large]}}, StripOnInput -> 
                    False], {"GraphicsLabel"}, StripOnInput -> False]}, {
                 "GraphicsTicks"}, StripOnInput -> False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]]}}, StripOnInput -> False]}, {
              "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 576}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontSize -> Large, FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "4.349283870557462`"}], ",", 
                   RowBox[{"-", "1.7752940443130911`"}]}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "4.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "3.5`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "3.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "2.5`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "2.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "576"}], ",", 
           RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8446044359605207`*^9, 3.84460448361208*^9}, 
   3.844604890735423*^9, 3.844606797537751*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"b24ad783-7892-4d7d-845f-f3d98482bf80"]
}, Open  ]],

Cell[TextData[{
 "Para podemos identificar mais claramente os pontos de Lagrange, colocarei \
um gr\[AAcute]fico ilustrativo das curvas de n\[IAcute]vel do potencial com \
os 5 pontos de Lagrange demarcados. A imagem foi pode ser encontrada no ",
 ButtonBox["link",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://pt.wikipedia.org/wiki/Pontos_de_Lagrange"], None},
  ButtonNote->"https://pt.wikipedia.org/wiki/Pontos_de_Lagrange"],
 "."
}], "Text",
 CellChangeTimes->{{3.8446045162575483`*^9, 3.8446045710644817`*^9}, {
  3.844604687200108*^9, 
  3.844604751584361*^9}},ExpressionUUID->"17bff590-6287-44a4-815b-\
5cdba8cf5d1d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvT9vHFm37rdsJw4dDqHoVaAPoIjQRA4JAgxoOBb6wtcXTs6FzjVomV9B
IAgl+gyEoEw5AQUKFbzAAIwGNjGxDk4ywA2uNeZwV639rH9776qu/qPmXqgZ
lJrNZnf1rl+tevaz1v7Hf/jP5//7f09E/+V/fPjf+er/+p//9V9X//f/8j89
/ON//Zf/8n/8p3/5j//byb/8n//xP/3Hfz3+D//Dw4P/739H9P88/Pf3/l89
evTo0aNHjx49evTo0aNHjx49evTo0aNHjx49evTo0aNHjx49evTo0aNHjx49
evTo0aNHjx49evTo0aNHjx49evTo0aNHjx49evTo0aNHjx49evTo0aNHjx49
evTo0aNHjx49evTo0aNHjx49evTo0aNHjx49evTo0aNHjx49evTo0aNHjx5b
CfJi12+qR48ePXr8HR3LPXr06LGH0eHco0ePHnsYHc49evTosYfR4dyjR48e
exgdzj169Oixh9Hh3KNHjx57GB3OPXr06LGH0eHco0ePHruKAn4LcO7E7tGj
R4+NxlJw7jl2jx49eiwYM+BsH+wCSI8ePXosG1PhXMB1h3OPHj16LBVl2Eah
nhy9To8ePXr0mBdrQpV/t8O5R48ePRaM9eFcSKp79OjRo8e86HDu0aNHjz2M
pYjaydyjR48eC0aHc48ePXrsYXSo9ujRo8ceRodzjx49euxhdDj36NGjxx5G
h3OPHj167GF0OPfo0aPHHkaHc48ePXrsYXQ49+jRo8ceRodzjx49euxhdDj3
6NGjxx5Gh3OPHj167GF0OPfo0aPHHkaHc48ePXrsYXQ49+jRo8ceRodzjx49
euxhdDj36NGjxx5Gh3OPHk8tHk75H7/827/98t/S9u2XH2l7ePzzLz94ez9u
D4+//eVH2l4f5e1k3B6e8PLoB2/P/qG3xJmjX38M27m3vRk2XlZpeOS6bftU
2eyyTSpanoNP9rfq+3wjtvyC5oCog8aH8SH4wOJh5+/iIfBr4u8O3z9+0d/G
H/GQeBgeD1u/OvTosbVIp1s69fhM5BP2G5ywLXDmXzw5+uHCGWGSyezBWaMP
IdYI5+sKgY++Bjj9Chs+6O7XUC/4HLEaP5p7SfLgnPhsD6zl88mReHvIZ/xO
FZ+/Ab2Zz4xo6pTu0WNjwVhGOCcm88ZnK57d73/5gXDmx0+ABoiIzBngiQvn
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
OCIJmv1FnrkOLRz0mKi013d3PvcoBAW95t4bSzNJNSMv8xd1/rwOdOa0dolf
kV1oKOc75cYzrmRdPh51jKoBgxWMQsFIuzmZgVCGrdr+MDv8zy1v7tuoApwg
rChdMHhUtWi3O4cxdZQrvnmiUOjPORkApxDhbV1Vf5YNCtrruzufe7hBxV5z
BUvzMP7LbZmxY4bbyEi2x681lPOdco294yZZlwsZcrukHDH5Sy37ZTD+IcE4
iat/Bvsz+KzeRgufo6nDFj6XtWhXiAY+Cy900N3O5/OI6O8+n1v0ZylxRPXd
6W91PvcohCVze+sMQeZf5RB1exmhZS6syPbXKwmccqpFhg9nmmJd5rRtNpzJ
k5Tbc2YXzn/MhfOf3v5sOM/Ln63c0Sh0KC26MFFIYq6wYIRGlcPhc9SIY+Bz
wf/MSxJLiWNSi9FemdIjBckyJeWQLxgzBJarUkaUMDdUZAOTfadce7bstida
SQhUncll4SLicBm/jUlvy0YLRfT67RoIb+kFq9xuKTZcjaB2L6zBdKEw2sFM
hF1gxenFEfYaLa6lolTo9AQs8SaoH1QSB3XzRg9vHUCXzJFrboKUMXZmJp0t
lyqyR1xfuXAefxou3scnqTvfZ7VlKrrjChkyEuajYfKacP4zhvMkqE7dCq/c
IpJYOBcmFpfic1xX6PLZNk3yF71ye42Ga6l4s4RuiTfJFJrGggIuyO18frJh
yUzjJGA6mxpdc01Sxqeo82epItsU/bktMnw4k1foZ+HM5Gmv6YvscF8COLeo
ypPgvDiH5+G6LJK4cK7q0i18XsV8tnaOYqFK1CjJ5bMncbh89pbzjkq8kc+s
b2Arm87nJxhp2ET980k2AqWia45HoFphqm2NbKwxucVJGbUeK8JZktmBM8nl
kCI403R33IdAUkajcruk3AhnBcYtM7mF1WU+I5wLfLamuyqfSXYideu+i0Y7
xWe+WavzeXhmYS1CdHF4LZJeSjjb/nXpNOx8fmphyWxzZrcRqHLNUVlnvofN
kzIoNGb4RX9QXJDPNWWTI+OUWwUJ8zx3XPrd6A79iwRvmcPtACw858e/b3Wr
gjpSRVQUWJ2e0OjrSE8uTBeSM0uoClX0AoVEqtY71J/Js3BkPnMLO7OEN4rP
is/Y+JEgf+5wfgoRkVm1zed1AAuuOQvnTGaAM5FuyzwOdafzJ4naAbcV8xnm
QtUmn3ja8rk81YDBVClg2cL5j+lwtqBzgbwrOKs/XVU/qnBu8Xi0NL6r8rk5
f7Z8Ls0PkrFwWP2ZzxrFZytuvAXxufP5CQbFlubymiaCzL826cxOZ+YinInI
zZyH60KWMvK9qrVkuHBeyf1JcKZgvq8896du8FvgXACyzZZ3BWf1p6uXGBvq
shUdUjzy1YlCl89otJuibyg+V/wbRM5y3gT68zB6DZ9d8Tk9mflMfdmUJxOW
zK6lOY0QhDOZ6uyqzuwuMjVittD5U8N5PH3OPDhnhbkKZzx/2+FMUxzLLpz/
qMGZqdWo9yIkdwJn9aen8tnq0mU+p2jhM5m6b2WE9vjMl35nxdjHHc+/IeGc
x/m9pz8H5g2Xz8r8jN3UO58POKhWoB0tOEWyCygpNSPQmclXM3Coq0XfrJqR
vE+ViuwCkFdw5uKJHLUj3pB1uawqR5LFTPb+Hj8+e5v+NlrgHBk8FJ8LBSwf
AqOdy+fnWoLOhd5m9diC/gxV3vNKCIv583uz+GDn88FHRGaE81vImSurTUVq
hktmYczQcB7Hf7R2yZzFpBScyZjlFJBdKeOLly3Psy5HZC5LFvPh/Lv85/pw
/t282hpwns3nqEHHeny284OiilDyWbfrL+nPpoUdwxmb1zGfU1KEd698hio+
dzgfUpBZ2cQtBqRx4QY1CfjMrjZ1PkVnTuPWkTLCdhlEa1Vks46RwtrkbLZs
pQwmQ1m+UN6MFjind1WVLNaCs2LygnBej898BGbnz+18jlzQ5Fs4WvwbtgVH
rD97LewIJm4Un7FnneUzyWVTOp8PJqitrxGNwle04NQwJotwpsDSHPiZywtL
+XBOb6Mqa1C8gFShroRP/xlqRgucIyxbGq8L50WYHL3aenBGUXqj+kbkggY+
6xVjbXF3RX8GPufBD/qGkzxD8w2KzRsE6xD1ycHDizSSfwRLtaZvHweD6hCu
1QxbACW7gJLRmY3U7C5iYtfIbpIyoors9N4K832Rh3lz8nJVypjJ4QjLO9yK
cP5hJhDTMYkqcVxWu0YOO1dIsukoXr4D/fnM6BtZgoZcwvrrvvvi89fAWed1
rrNtN8rOur6m1c8eaGlWcObvnUcCkvkZLM/qr51dbzTnuubqbZnbpQwXzhT0
LyrAmZOxbc79LQPn3/cPzr9X4Ozy2abQa/L50vBZqRyB/uzyOfdHMim0s4o3
ofj81cwMSvG5zOfe9vmAQ9WbsGyFd0xu2oxwztd6HF3ugib16uxqW+ZVBGcq
uuYiKaMKZ6rZmNeEcwHLy8D59z2Fs+WzEm3sgary+Uszny8Nn60EHejPls9W
4rg1+rNYQoWk+OzzWVYN0Nh5w23L3+F8YKG+R7UaoFUz0OEj2s2V184WC5pE
jebapQx/pb/TYGvPlrfvlCsrzPOZvKyU8c8ltuDFNZxVqh+wGi9nLYi2dnQ3
hXb1DUS0WfQKi1J1Cl1vwWGWIFSIVvlzQjQva/Vamuswf07JVUf0zxv89Q3n
hbdUq0qYcfpY1GjHa2cPaUO9ALBdynjlZssFODdmy5OK/jqc5/P5nzU4N/AZ
D90MPkcShwvnY7DNm0JCbE6bU+gRzkU+2xQ6qkwxcH5plk1RlSmdzz9vkFcJ
aJdqTQPPVTNEJWBZzWhtNNcoZfj95SI4k9dcrgBnTpi3AOcCmQ8Qzv+cAue5
fC57OUiqHLaWkGKLHfn+58jFgQt5q3E+roaJtg212ETi83mFz2/BQIWTRB3O
P29wqmzhzN8vLgGMmTPCmVgWU/aMEc7UqjOHcB7J7MCZZOfPMpkb4Uym1efm
4Fwm82HC+Z/wgobPBWm6zGeSdo4qn8mr9UYJeqL/Wa1FqPis/c/gGv3uN98w
EjTymWRxrlq2O52w7rJWnc8/RVBQDEjeylNqHW3RPYPVDB5OrmtOrjZVc81V
dGZUM6y2jBym6TqzC+SIw2UgV11zLXxemNU7J7O3leBcAzWzmgK7XQRq8jom
tXRJoqa1Ykv5M/B50DeIgsUHPT4/kz2fT+A8RfOGXdOqw3n/g8hfFpCKS7UO
WbFL5gDOkC1/j1ebslJzRWfGnLkAZ/IqsufpzLPhfAh83ns4l/lcyKJJLq1i
82cXzh6fKy3sYj5nfSPzOWjLT1RZ08qa6z73spSfKqygEcGZoOkcjwSxuImq
OU2jyC824YWz3UZzVxbO4yAvVWcX4GzJfCnPwai53Jel4bx3fN5nOP9zJpyR
z+1wtpmzy2cLZ7OWt25hZ9e3CvgsxOeBz9GyKaP4/Czo+RxVplDvufEzhMqZ
1RIn0cpTLpxZZ85S83w43yg4Q/oxYRKwTOZLeRraSUBk8rJwrvKZZOxX8rx5
OCc+53/OgnPE56r+XG40SqA/H8ut0MKO9OSgqh8s8lkJg7iKkFzTiuIFB99L
50bn8/4Hwjl9Zd+kca7QEZQn/nLOjE3neERhDsADbxiHLGWU1jShhgLAdp05
av5ZLcpeH8gtOXOZ1ZN+66dmtYCz2ubqz7yVjXbkNUpS/g0KLByFFnZ2/W6A
s5c/W9uz5bO3phXzWTnrsDKlw3nPQ6XN6fv65rmayXQE1StPAZxJSc3Y12hM
mIHMtwGZL6o6s2tprurMlxLIUefPDcF5Np/djLpK7J+XzyU4r83nqgua4uVU
Zls44O7P8tkubhWUpUSVKV5Nty1LeS9rurvyvLdBUmq2ZdoM52gdbe1qRsMP
XujZvZnVDDUJaFebqsOZPDWjqjNfGiBHnT83BOc1+Tw1r/5J+TwHzgGf8UA1
wjmaHFR8duFs5gctnC2f7cqwwbLdX6Gqy8D5YXsJN7mvwVZXhXPn8/5EIrPb
N4NkDw0aOza7cM7NDD04D+MK4DzetTXBeRzPFZ3ZhXNEZgvnj4HOvDk4L87n
Ql5Nsj3FT8TnyjaXzxRI0O36s60fXMXmjSqfJZxvhOc5Nm8MfC72fI5qut2e
Gz1/3pPgL4XJzB1BseNcU0fQeB1t0joz5sw4GtHV3NQFlGJLc4vOPKn5Z5XM
k5g8e7Mo/sPstEB7GQFkT1g9i8+RxOGKz1SsHyRjfq6a6xr4LNuKVp3PXk8k
1DcUn6k3rNvvQDiTadcckdnvCBqvo23h7OrMJFzN2BG3dRLwdIrO7MK5TOa9
gvMfkip/mifMBvXT5POa+gY1mJ9VcbfHZ+18HuGcy1Js2WBOjYKedW7Pjc+S
z72me6+CjEMD2zXzl5h26h1BRzIrOJOcBDTGOZwExJVNWisBZ7vmov6few7n
iMnrSCWW0gvzeQ3qUllzXo7PU/UNNTm4ami+UYSzWhnW9uQParpNT35K8/IB
ny2cla2uw3nnQUZlsiUnqhJQdAS19YDeOtpEUWsjJWUkJuNAxY5erT3zTzfW
aK5Fai6DehK9J/2tRS4QZW5PTq2Xw/UEOE9ndTmFdkFNXv86HGwRokl3FmU+
V1fudnqKWnEjqum25g1crdsu1d3F550HTe+hQaojqKrUVh1BvaVaLZxlwqx0
Zl50frNwpoZGc7Ph/Js8zcus/s0wYR0+/+b9rQLAC8L1nNR6CT6nP7pRoaOQ
QkdZNBl/nYVzM5/9lbvhvLjRtmd0PsPMoOJzvqUNKlPcmcEubuw81PGP4Exe
mbboCCqLAZ2OoPfROtqWzFcBmc9cKSOCM03vAtrSaG4qnC2To8ddgK8D58LL
2mtEQS0pCyDbkTu2AGfL5yqcrf582cbnNIBlW361ckq1bV2prJuo0nPj2T8q
cO4zg7sNiicB1TygWwkYVWqLSUDuCApwBjLPhHM6VctwVm6NHcK5gNk/vP31
mez+CfdvFfhcFTrsfGKJ1WvwOb/4huHcYuH4w9Ofo/nBlcdnHLEBn4Xt2S7b
bZPnXJli4Qw9N1w+qzSs83kfogBnkgtq+2XaqruRLdNuW0d7HHg4GjGLcIwZ
VSATTAJWdeaqn3kekFu26JXLc5HRFvX9qG7V9xOJIVVpehFfx1pkLiM6uJSU
4fybPOYFPl96fA4mB1Hc0GUplZpuVTZYTJ6V7fnE1KRQtz3vOqjo0FBrtkZk
LncE1WpGLtN2l2qN4OwsOFWGM0mpuQXO1Wx5Q3yOXnk2nN2meS2sLr+f34BL
VT4rrK3J52XIvDafrcSBh5eC4u7GyhS7plXA57imu8zn4sygrRmM+NzhvJ2g
oFJbwTmJG2GZdgzngcP3IGhk79ydTADs4ia4Jmb2zrVPAk6CMzU4NDbEZ8vG
FjjTcqE+XfljumJIi7tjE0LH1vhchfMXL3lW5g3ks1vWrZx1ls8UlaWoqZyv
pmYwWArWwpn5TI9CB/ai7HDeZlTtc+/lgtokKwFzdyO+NBs4cwO6gc+5UrsC
ZyDzGXqbdw7nxfkcsbHM4XLmbO8FCh8tgnbLm28RpfkFF+Tz8IKbz58nOTdc
ccOF88rMDNqez3AKrAo13YrPGc4NNd0kGyLR2O3ZrtNNkMjtmltPIlwyt8N5
uAortVlVAt5HldrYPQObGrGakUcpdiSgUW12deZVIDVXKwHXZ/KXGLmTNgtJ
l7cf4bN8MI9H7U/d5iHui3yU76RRjS/r0uml6ga8ZqFjC3ye6qyztueIz9ZW
59V0M5xdPt8Cn4OGdW3Jc3mdlK5sbDmowdtM452OhTPx5IJrn/PgLMkcwZnt
GT6c2ycBG+FcJU8jn9UTJgEZSRihuMBki9wynN1fLIvwCOryYanq0vw6M/m8
0eTZ8HlqWYri87uYz81lg7osBfgslWdr2yjUdEvl2W3FT9DrDPnc4bzpwEPN
SwSmAR95m50eGuf560Y4ZzKPcB6esB6cCUwai8CZpqgZZT6rJ0zNkz+aU7sA
5w/ejsJsdfsY75c3F9RVXdpKHwNdp/J50+LG7xU4/+nBWclQfKzeGT6nIVqD
c6HnhuN5Fny2cDat+PPJW4Mzyb6UHc5bCAYy58zvIWd2FzqpLKgN9SbCPgdw
tk1BxxygsixgI5wpLgZcEM4Rn9UTGpmsgNwO5xbk8saHRR2faHOPW6TVq4tL
S17dqHVkegcUzXAuTh0uzmc3ef4Nvlz8viI+W88z6ZoUl8+24YbquXGX8yI3
eUbP81gwiAUp5K1j1ZPnrQWNfZsZzmqhE54dmAfnoEwb22hg1UnuOEdZbc6j
lIfucaAzY9M5d+4vygDbgTx7K0i4kbbwQb5//FwRTpG61BZlVvOfw7fk8vkD
fLp5fHZ9HZnMLYl0zdqxiLgxD85W3CCZPJ+GybPbc8NXNsRZpgq6LZzf5HUG
0VPXleedB17+0hJU7ipUaqGTun1uCpyBzKoYMGw6pxLmVaBmNMKZpkjN62wu
kN1M2ML5HcD50muq48ZqxDVfudTOqo3h/Ofs9SISq9UruHx268QVovkVWoWO
rcC5PC0YKRvlmUHk8/MmPrvdRO+sc4NYWix4nj3bxkmbbaPDeROh4Jz4TGYV
qre/NMFZXJFtSWBQqW3hLMnsrDwVwZkCnbkRzhvlc4HJZZnCvRdWoTJnS+Dy
pn7Lbvi3PnhHNRKr8eNP5XPFejfLd7c+nBWfq3DGAYbfqTq2K6nOBet0v/Dg
rGwbDpzFpHzkefb6iJ7UPM8dzhsKghuTbyD1c86s2unn1qA4Cah66duVAQeH
hirTxmJAdDWXyrSVpVnxhEyjZlcp3VDaHE2TRezF9xYpFRbCeDE6DbZjeYNc
fkL7b+FFELV9dYGwGkh0QaR4DpE3fP11fXe/Sw5XmdyQPNv8eR6fOX9W4obX
EMnlc1HcsHz2bBuMaGxVV+YzN3nuiF48rH3uc2BsVu30S3D+JMl8j5OAdxuC
8yqGs+XzRuFsgVyAs1WSbTalkmHkZAHOx2Z2qT3caVbF50jqT6E0kEapv8Dn
1hrwdj7b/Sl8divT1xQ3XOXZmxnMZd3FVvy3ofJ8X7HVWTirhhvkJc8dzsuG
hTM9ChounAnsc5nMsNDJIDV79rl0ziqHBpA5w3kks4YzBU3nVpDCNToNNiRo
lLEcwVkpycw3ZLILZ3cr8NZC+1QeyTLJFZ9tLr3yPgXJ9UEiPjOiG+cKqeaL
Ts+p69K/T4Hz761wjjzPis/vDJ/nwhltG1cy/4Hk2cI5sNU9gz51k+DcCwYX
DFaYXfscSYcGRVKz6aU/DIO4EtBYmu3iU61wPoWb61UM50hzXgTOZSy7orHK
l5CBzLpj71RV7SUVQseaXzyLX5jtzOyUNr5twb8S1cvbHDv9SvUb4WOIB7bA
aiouwjLAuSWRnq5ptHjqXD5HcH4HFzV7B2T4HC1lVUue739o24ZNns+d5BnT
s2orpF0j7XCCV9Zusc+1wvkrrEJVWRlQw3kkc26dwUCmuFKbGiYBl50HjF6k
miS7cCZTxluGM3KSjxLs4BTqK4/VfGOi7lAiqr9SfwLfwLFcq7FQEEQN/sb0
tHY+K0Tvls9T4eza6tTN0foFgyp5LtnqZMFgWdlAPnc4byK4NaiFMzvo3AZ0
2qFRWOhk6GvErecmwNnt2Lw/cOZkbzac0yusPNViJT8vMpkvWJjcwg4ewFeW
1VQLQ/UMZ7xiPjdXCgvnUyl68DPLX5BCdNnXoRCt4LwdPjfCOZoWfGcu04rP
0lbH32lhHSvbbSOcFlSLwKb8ubDCIIobbHjmmcFdI+1wAvs2U80+JxY6ieFM
XCtqmurLhU5uFJxHMmj7HNV66W8ZznzWz5CX33n2BhfOpwZ9fASYjYEQUcGv
XEoG15R5VaD3c3ktQD5jzWaKAp+ZQi18JqNFR747RLSTPG+Yz+vA+YMHZzUS
glZ12Ee3ZKsTcEbP873fqs7tI2ptGwrOic+7RtrhxDd5b/K2aJ8TJg10aIQL
nXyHhDlyaNj1pxyHhnumn45kXsl0tBHOiq5V+aKQKltr3AdPvojOPrz0qJ57
AYfRAX7GvfsAvyt5txttV/GP1K+vDN59F3pV96gKHR/l5Y+8C2jEajJ1hfNN
Hc2aRhnOdkRZPr+rjZCAz2eSz6rFrrI9f9flBnErUQIBU/EZKcGd3jHH2zXS
DicIVP33sArVcnC23eesfW4mnFXO3Jgtl7XiGdqy0g8jODOLqnBmND0XSTIy
8MymuIaoOE9kaXw1/t/96QWUaiKrL7wLgZq9zRoIKuQun/EbtDcX9shbLfqP
Gp9L23pwrmrOf0yBczV5PhZwfuHBudSHX6xgVWslSuQ34X8pu21g8sx83jXS
DicUnN8bMp9EDejQPmerTqbBWfXSnwDnqqt5Kpw/wknUqC0rOPMbUGRGb4YL
54DJYpqPZDw+uBobXyuK8v4VrREyl85LhmH/k/GZjkCtrjgtQrR7tPlBxWfL
Q65bqcO5nc/xK5Th/Ec8W2HhXFWezczgmeRzQXlOttVghUE+eT+ZVnWe8kwA
5/djnw0WN3aNtMMJbKpfLTyZAOd7tdBJu7dZwJlJ1Qjny2Y429Nf8VndXJc3
Kyx/8EzLEZzTc6yswachABDtFmcA59x93QPslUmVr8x24e4HL4gmgVc2nUYd
JhKlXSEaQR19a8g6l4fs5ViMz8VX2AScL+fD2W8lmuE89nkm5alDz3Nt+deT
ow7njQd2Z3Vbg5JRn/zuc/fa2yxz5oJDQ691Mq9dc/skYCOf7U8/mH9GJxdb
l23+c2rkZdLNbYScCzws6MaZoqPGeLvodqM2Q/6y6+ZV9YZICdEUaNF8xbT6
hlI5qg1I19/m1aG4cP7QMHI8z/MryWc9KsbxYJo8Y5/ne1k4hnIlwJmT59dm
+VeShuddI+1wAuFc9TaX4Iz2uWlw1u30LZkjh8ZKJsyLwJnhEKXHjXCmQDmM
RAyQlPM6ieOR0dM9bkILx1lNwt7ZJzcGeGX5BhkpLVJr+7XKl3L4TJ7QEWnR
ysvRyGfV3W7TcG7kM02fEzx2kmc1LajX5ibpqaNC8pxO5GsveY7X5layc4fz
sqHgXPY2Ezjo8pcYeJuJSHmbx6Gi7XNj/rxtOOM5QsYYEMH5gwfnS4BzQgFy
RsE5PeFYyxevULIYgfaKby6UagH5KnMyr1lgwHgHmE37rDV9D/bvClRXfDaU
XknR4xV8Im3GK/M5IdrCuYXPbne7BfPnCM4z6rg/NFzcFZw9T50258hv6u5I
rWDFnjr2bMRwVtOCr48EMT6DuLFrpB1OfAY/TNnbHML52vc2A5wr3mZ5Fr96
DvjaApxTVMn80bysvSdlmBSsy+TZldOJJuknJGV4XEgZAOcbeA66ym+9feTw
92Df/lYuCpZvVQnXFx6fz+RFR/M5heUzH9V33hfKv9jCZ37yUnwuwHlSE6SP
NTiv6nC2y1cVDc9g28hn7lcPzm98OL/04Py5w3nRUP00qLq4NgPZtgYFbzOJ
bK3sbdZeWa7ULkwCknfP287k9i0qJMHzqDy9ruxkUlvOk2imSQKfXFemlU1m
I7piMB0S8Pwqyg3yPudL6He9l+sZjf8ULyiXTkgnu8S1kD6A4XxR1qCOtA71
7fMBt991+sWPRS80wxlBPU+OXidttqqaa6iL5gQ9T53is5WdB3GD8rXb47Op
FmzkM66QsmukHU6QWb/VdWj4cLatQf1mGq5DA43Nfj1gBGeqeZsX5HMLnCk2
piKWTS0JT7K/kqaL1ZGY3cuSBdBvTGvh/BLwZLQiZmHepxriF/mGaJxFkii+
U3qI5TN8IsHn8SA4WgeZPnjqq3e/63Y+K65uCM4tsrOrPBNY4t1BJYeTuzzK
hYUz8NkTN7xSbjKzTghnpTx3OC8YFs6vC/Y5dNC5rUHvf4B9rgxnZZ97pc7Q
FodGGc6L8LkM53Smu+64U9msybXGWUccEO9q9EGhXpHn+JQmPFwW+RIJNzUO
eO/ztVU0RSnSm+Gc75LsdcETq1GahgcvlNbx+KAoDKeAzzwGZvA5/bqdLqSJ
c4UtgkZB1nBl55ZpwVMfzi/k9HEkOxs4P/KZyKyQMgvO7zucFw2CYsyXgUmD
yGtAdw/2OXGfewsY4VFRsc+hg65dZ55RFTiVyVG2vPLOHdvM06u25ttPvM3n
tbqUEW680iEPAbmCrh5U/76evgk38Uz8keptNV6R9Ysr9WNMqlVDFeD2oHGB
zKW92WjqSI/Y8YDXaPx22vPnlgZKLZv7/Gr5tkqb01bQytJ2XJOdg1Ju20RU
ep7TGLuX2te1HieFaUHV5HnXSDuceAsl2ydA5iFnLiyu/TWCM65FFcFZ2+d+
OjiT58dQp4/bCmMk88rMoOmJmxFWwpWqqfhVYFOspzyuep9ufNwYOGxA7TxT
vazBdT67sYQ/zyryaguCz+IVPCFaIdqVOHAMIJ+/TOdzO6ILTyvD2WoaPOTK
cLYD7HnYpO7MU54VnCF5tn3qvLWromrBDucNhW2m8VJqGkTe4tqufU6YNGbC
mWqtQfcBzuqsUXC2eMFyEpCXr4y2PMAZjuF3nGuLJIs8BeDlt4T5M6fEv3pJ
Mv4Ue8MavCOiuTMDUfZlSereYZI2gkLVznAR+tl4CcsHkI+q1bhIeu1m89ll
b0TgMr2rcP4SwPlDDc52TlBe/RWcVzU43/lwlqWC5VLuE7Ow4K6Rdjjhdjoq
wDl/axU4K3tzxT73s8CZaeDCOf2UZQ2jB/KHzfIyassgboiEM4vJbv4s81iV
8+SlxOL8uTFUKiUeN7qKMVV+h+2WP7t4ncznVy6feVTgkee5s3feAOAXn8Fn
F9Qpykn1RuF86sP5RQDnVQ3OdxU410q5O5w3F1iM+QwWDvv7KskmjTeCAOzI
yl+ovxwVOuiyFQHGz5nNjo4NkNU5WLA0rw9nl8lVy9wpTGBJJoelteZAMa++
I4oJFIw6JGFpITdwvaHq9tJs+FIseSXVK7+HN8Os8fBP++blaIHjwBemKxwq
JC5qL8h0wToNrtrWaPdR4jFaYMWy2t2P5BE1A9hevl2WztSEoFf1/wIGmzBs
eGsLBqXcbp+Na7AE/Coo4a5dtWukHU6otQIFnH8FOKt67clwvqjC+XkznJc1
aXxohnN0snDObE+WES92Av3KZDLflQZISj5CJWFMg/lrwsQ4nTVq1mbNwNtY
5L8SQIYHVTL/VcxQyA+rFDClcigz/IuCETo9jiOk7OL4Mv5Klc/u/iJwdvnc
btE0480tFUQ4B302oiZ1Nnn+1Ume6dFU0OG8eNiFXAngTCSm+4kCB10m8/cY
zheGzBPgTNJBd7konD80wJliy9ypccrxTJbqjDGSR1uXfXn5HrTcr3oObvhe
IHd9eOTlePtzIoHMXy7P/Kb/Ryg+ORIGHot3VL3yWwKBWlWPDh/h3iKap4+1
Kdrjs6hVsXxWt1d2MCg+8zsvTxTa/TXhTKY8cKqVLoazLRXE+k3VZ8O4ndvg
nIZcgrMqRemyxoKh4EyPOZKA86/z4UxZU3W9zWcKZao7aBnOl4vC+UMM53T+
soPOnixkakxG+OAnTZ89d8MYn2Ncc9KbobVcz4Nh5QUaZxAc8srnoFcHJyBs
qFWY1V/Ha4TSt1HZUOK5saaU+EyjahTxGS+jfO3+aPhMMFGY/lk2ckzdpsL5
4wbhvPLgjJPOdxPg/KYC57cdzotGWLLNX4cSnP0VT/C7Fo0l0aHhdZIsrd+K
ZKZad9AZNLabmzC75wgWSgR1fyhlcF8RODXuxZSZOrZkOGyT1ZfjOm4cfGuJ
we0c01oV7ZFWHXrYuAEL/iFFcsXtZ7K2lD+O/aRouhtHkZoe1Q75ghHaXsqj
QhV6RDR/okYhGglcoHE0D/glqD1xNQ0172w1Z0lm1JzPPD6j1bneZ4MknAul
3K8ln3eNtMMJTpv95ahkDQL21fe8zXfqzKo108g3qlSDs+vQeBecekvBuXCC
IJkRzkSkpIwjbWO+GY4VpscPxzCQl4cnnGcsK9UiNUV5LR/5Bs0GLW/TKsm8
bx/kBX8xPsOKDPygm2zjW0WviKtFWz7Lw3UFfEYHplbDIhd0xOePo9cO4Rzx
2e7jE9rhTEVBox3OxkhvDRsrI27cAJ/vQmXjXi5c1eG8uyDZY/+ZKtleBs5X
QOaVhfORXF97Npwb+bwUnEmoGa8Mmc9KZH6EM2H+HMjLaqaPuZem/BCVD9+g
pXFC7sNG64V9ZQv/pI2gFZM/AvKZP+bwYfnGQRYVGonjQuobWoK2I4ea+aw2
y2e1/4d8wj7BGTtsqCZ1aklBCWdVxz0dzq+POpwXDirD+Rx8GmBvVnCmTOY5
cE7DLIIzNS+u3cjnRjiT0Zn5BEl8sA0/0T4HVo0LeUygeeP9DysvK1mD4WYt
TJw/I6I/P+7jyhQp1h8nUbj6Rtq3iObfEp1mUdvRfHZrVdg3HvZKsoJYgc8W
0b8F+I1Q3ALn9Fc2DWdPdlZwNu1DbR23WfK1Bc6Jz4twqcdfjycd2678ZhrR
oifhEq5I5tyCjHJWqR0aqtMRj0YcpWWfxjoJ8ztzXpT9zGTaGshzATtk1loZ
XAOWzx2gYZ7M+H0v1WPc3/7g4XhIzr/BO0w7qLdEoBYH4R4smqPXDkYXzmKg
vqqbjiqVwzXJR3OFH4OkF6mrdgoK8xd42fKYvCySWQ3FgpVOuunUkoI3Kn/O
I7PQPlTx2Wu/fwJ83vIgPODAooMIzukM8uGsSwLXgvOxgbMls2tyXhbOVPQz
q7VLRhSjqM73C0xm4ZQT2fI1+OUe71NQ+adxOoChx9x7YPJeLQyU3hW/JaW3
WDPeoHXwdLNsqAV8vjuSdrsCnzGLVsPJ8jkaOentFfj8RQK5Bc4tY/LSZCOz
4PwqgLOW15y0IWofapfkPteejQ7nTQQWhVXgfJ1vuk1xLq6agc4E10FXgvPx
FDgXTrHZcKbYz0xGyoD7a1uRfSUb9IHbkOGDRZfnTvL88H+202CFLE7Y7XoE
iWBE26tJOnlJpdBct/LJ4TMOrfGfPp8fH9HtRt3hRHGtdwuifzM7X4pwJiNl
bB7OvqxRhzPKzi6ccdXXcwfOJx3Oi8ZLqNoulWxDc8gxq7mzWQ1Mr2ep2Zg0
hLe5cR5wns7cMuvH2ypQM4LS7BeySUjUwUCWKsuVgIYHAcvojmMhF6XjHYoY
7UGPKge/1XQp4StLepClaZUP5APlODZvpb4hvED2C3KbtCgjtBpR6a8XhI6P
Zkdt9ncLA9KOw2gQnkL2EgzISUtW3cjzV1enqqUZdKpmJkGwXGLXo+9w4iVU
bTtVgbIHnYTz9yPRP+12WThTs0NjKThToGYEfQxe4CkwJm8hma19VF0NsYWF
9Sqj42LXQ6YpEMu8/16K0twCUdSwvNH5QOZznt2w0pnDZ3d0lfnsEhW/iI8j
lj9KPqunkXFlNMI5GoTI52BAKjifeXC+UppzCc6FhVG8GeoO58XDdtcXcMaq
QGxDd49VgXdBSoP9jkrLUe0DnCnoAIZqhiEztv+6MjOAUsqQ1SXDgIcDrsjM
VR4/RaochUJ04rNKoZ2VHaKKp7GjnVflNJSozOZzlDzj9sUQWNE4UjB4lLZk
zgU4n06D85kHZ214LsE5MtQF9qEO52XDrrI9nCleyXYDnG+LcD776eBM3vJ/
A2Pzh1p5M4CyIpu1evQljkebT3DmM0MsYW3Xw2StYETzx2Q+89gbDqnhMyN6
POYOnwHRelHCI69XP/KZHtf1tslzxOcI2kvNd1ThHN/KuXA+8+AsqgUrcI7b
h3Y4bzrwCPtrBaK3WdZzjWSOSrYvTM4sVjwpwJkC+1wE5w9TmHxp1Ix0Utj7
R3WaS3uA6jIX01gBGRJmAunVppSHQea/HuH814ho1me+gbROY8faYRxi6wBM
D7L4rNybujPt+B2JXnZur9GV9EK/Gy3uCdrVkdbC4UhGc+c7IiAHa1RF5dvW
5KzcdEFHRF4m8qs56+P2oarpyq6H2+HEJDhnMjeVbF94gvOm4PxhFpypuIam
6ZnvwBkpgeM8k1mObQbvw9hmj9zJWNyH2XKKXQ+QdUN9EMXnz1DA8hrnPlw+
C33D5bPbKEBUebt8XsmRxnAu81kNuXXgTMEkoIUzebdy6HOeBWdRxF2Bs2kf
iu1kD2DE7k+gq3ZROKtpdGfFk+cyH1BwXk2Hc+EEmQFnb0ETp6kRI6KRzJw5
p+QZ6+mQz7seF4uFvcQgn9NHfvuLWPEh5PNY6x30D1d8dlZ1L/CZAmtQQUZz
92fAORqEs+AclQdeHDldndWqKLkUpR3ODxvPW6XBvKuRdnixSThfbR/O0Qmy
CJyBzEML0JEGpRlA7JWRTRqSzJw5c7eKXY+LZSLK/9ODyGcaXdCvj8TEx3CQ
2/g8fh04OVhZbaesb5T5XB1yZTjzwYl89RuD81UA57sJcH7jwPllh/OioU10
bGhk//m40DaRXmNIlmyrvvqqMNAvPHFvMKmt8GTqZvMWkirfsdzwVtFbakp1
ATU5szfxl3aYQpwwJ0BxPrnrQbFYlC80TKd/++W/vR1TaLKtxTlnUBPTnv4M
/Lkw4rNODKLhZ0cg0lXtvIvx62rL/CdajBnW21yYByxrznK44ooYsojbas6f
NJyZzyyKIp+3OcAOO4jTZgVnt5/G/Q+p+JVLtutwbulBtyE4Y8ZizwXKU4E4
/X3hDnUe25nMVs1gHy/w+TM09vy5bMwt0fhxksD+bVSeFZ+fyR6JRHLpLk9/
hnHoTw5ylyR3+K1MWnspmXwpdyy0C8KyxXI7nCmcB2yH81UdzlZzjuGsFuPu
cF42SHZxb4LzcEaIkm0XzuN5Ue+nsR04v5NkVreTSObjfBZwgbbfn3lALtYA
BmTm20CbM38+LJ15UtA4AfoNZgZDPn8CD0w6zhP0DdFl1Eocis9WfLBwjqBd
lS+mwplKagbzOWrmbH3OFs6x5mw6bChlo8N5Q1GB87WEM3YKzXC+k/0wJ8P5
eItwfhfAeeXBGXqBpsHPH8p2ATVSs9SZGc7kyRpPlswpaHTWKT7T2JdPjE/g
M8I55rPfv+64jc/MVZKhBqdFsfvMeXAm3dTFwvnFFDhfBXAONGdUODuctxhq
9WS/9sRbaFt+vzjX4JroxLSaypnVebEslq0YSHGZtu0ISnCTOH5G2xF3aM7M
TFYTf9h5gEF0eArzmkGQQnNru9dQpSLyByZG2MA2qu/Wq/CoPEENS2ZsxNXy
5lIX2as4jKpLG5DdwpOV5bMcvUVZwyyJYusElWcD+bzrcXQ4MQ/OmKKYqkCb
NjtwLszILJs2vzOCRnTuPNc3j6LjnGwHqpbIzGtOKTK7qXLiTyezDctnvq4N
Vd5vDJ+N/jyOT7XEFUocImEou+6Zz6ebgfOxSZI5e9kMnJtkjXy+V+Es29N1
OC8YW4Gzv8p25NZwJ1Nm87kdziZXKcD5CsnMB8fCmWAGkBG9V32Y9y0IJI5v
UoJ+ZpYeZjh7+rNdghAlDpEwqFnCBfncAudjyM+fSyZvBs51WSOf7/d+130X
zonPux5BhxMDlottQvNt4zgVCIPfLdl2biGr+YkL50WAbAUNV9ZTI38c7Re2
HSgeEL6KDTuj74sNzCQn/g5ezUiQWfMVuFHSNyjM4XbQJT6LNuOl/qJyfIpC
QjJzIgxn65EuU/fYex0bNQgry5ywZ3hS84XcsKWGddMFcP5qZA0LZ7MkSofz
guE02K/7NETnxkY4H5lVtl04U9DvaKdw5qxDw3nYgRkTTieYzFhgcmA1JjaW
+nTk6c/EsjPWD2IicY/6c8HnuTISh5agGZtqrKr902DfzYrJJMb4F9O+x+QK
nMeBWoCzy+eGzNmFs7dk1TMw1K3/7fdI4a5+kuGsOtE5ttJo5Ps9nHcL50tz
s1mAM1YCjsMbms5JOBfIrJLnh7R519/5poIRtNSrufqz5jPe6N0Dn80yECaF
OLN8tnoCotWdxVP7haz4OBArGoQLH87p9T01w8LZ8rlN1hjhbN3OPNo7nDcU
dTh/Ajg/as40iHtuD2ecFl/tIZwvPTiT6XEEY57hfLEmnOnQXXMLkplfkPVn
kvOqqrnowGcDZyrpb2qRdNGVS21lUcIFuDJglJXkFlVZMVlieRKcrybA+T6A
87UD5645Lxu8IphIQqI2oaKlhjvg/bYG6FKLpGZL5nlwfie3soPOeudgesWW
aUNHUKgHTNc1HpycQhA0LqaxBnDXX/imgomx+Muy/kxj/aBjfpb688AWr8+A
TSTGTScSdsYQhQj3QcNYK0qcte3rDfkPbZ3UrJ8LZ54xuTnyNOdMZuAzH0nH
Tce2gfN8lcRvZNkB8JSjCmdB5lY4Y82sA+eIz5uDMwXtZUh654DMWHKiy7Rd
Mh+9ETd3isyH0Zl5J8FH7/NYonKCzZ/Pgc/Xks/Dl8X6xmQVzvJZJbo1dcKK
Erm9eTUJl0C2GbJbbLIcnO8DOF93OG8pNg/nVy6cI01jfbfGcnBetcOZM7dn
0AqG5PLTu/6qf+JIB5D7iyKf7ZLEBPoz9xkY+VyZwgZE+3w+yuvgOIpEFc4B
b18F+9G28jb8OALO48VoOpyjOpRrgPN5h/OmIo/tljahbXAm4qq6VyjlUdwm
9HRv4AynJ5+tXoMjrNQuwpkOrkXz9oNgAYIHRKNN0Yfz9Q+YJblzB63LZ5hl
8/ls4VzYagmwu60PZy01rwVntw7FWxKlw3nx0GMbqmLl9IptX1BtEyo0Zyq2
CV3Jlhcz4OzqzJfyZe08oLVn8JsfP9qtOLu5Hsc0z6fHuaq3kN2xWNo1jfWD
vLJBPTmIfOaJbN1HUc0PKv3Z1Xi1OAwAF9dxD8VKDS5QdNkNq6WsyTleQ7Bs
dbaa87ieYIfz4uEnHhWHc6kT3SHCGbILTiqgXXPiA7Pi7SiN4kzWrr/nQ4hE
PL+sW/J5GMPC9lzmM/KzNBkXhZmk41+3yblCqN1XJ9R8OAOZq5lzEc7eMtxi
bY5fO5yXD1/WcOGcG5urTnTLwNmSeRE448uuanCGd+7DeTjZTY8j5HOCxhMh
85Y/nS0Y5OlXpzLF4bPWN6QuF/LZaA7oMX4lf1G9iFb8ZsRW4HznwBnnBM16
KArOzOdtjofDDgXnfPzdNqFDVWypTeiew3k1H863Gc7pOJh2zQjnFIcNZ/6Y
W/uLyY6oliln+6Iu6+ab8eLaahP5jMOjLAI7KHatFGN6o3ZEm5pJuIanXU2B
c9z7yML5usN54yHafKnCbdZX/fXoW9baFnCeZ6Jbk8yut9nam8cTB7vE8Gl7
Fzk00uAkOf33FOpNUmyZzPhHv402GCd/Hq1HFAp02lzHEyhF9ClR4gp/BX53
eDWo979BGbAc8l2pd3gjSXvVtvlMLqfNotdZNCfoddjocF4wHDirBvsga3hw
vpGyhjbR8bQ1V1o1wnmptLlceOLBeeXB+S7yNls4v38acN4Jmf/yygZ98bnS
v8vnM6gBEZ9tanoRwDDfdkl08/pBt3bfA7XL55tmPt8U+AzD+64C58J6VR3O
mwkfzteT4CxkjRHOZy6cI1nDhfPlzuC88uB858N5XCH65ahm8O32AcN5hx8w
grNb1h3C+W8+s1rl87kQBshXhV+UPLwBGN56+4Kc8kXwTa4D54qPLoSzlZ07
nDcZrkzn9XC+k8nG7ZFe/aS1U2gLnN81yxqRQ0ORGaXm53r9VtYPcRoFus+x
pfCTsM8RaZMGPZl5wL+2PhWo/rSq6U4HH9ccFKO60vxWINHTEHC7tfmnyXil
M21UCKuBxpL865BR41/0kurydit/He3fnlXjHrziQe8jhDO76XY1Kg4veAw3
LE1VhjNqGkLWKBeerKk5lx10LpxJrC+PjcoHLVHDmRMJGJ88JgnszU+HzLsN
emxUgmUpDGfm89+zVDyquajKmOua+ezKyCq5heSTcTdiWaSgdv9+uHZoyMv1
Os2fm8TnApwDq0bXnHcaU+CsJgQtnNXqJ1nWmAHnds25RdNAEx2JJeYtnC8s
nIdDAV1tFZyflH1uH4LGRlI8/aqSZ3TvZz57dVUm63D5LGTkxDocJxrOj2Nm
ePyruDTYEKwe79SG0w1EciVQy/c8B85A5tiq8TQ0Z/d72fWb2iicz9aE85qa
swvn01LJdhHOtqn+qGx0OG8/LJw/A5z/ttVZOF8DnGFUt/HZVWu1OIzJ7cB/
CWRR1gFii3gCI/HxjINX0wL1RD5X4Ry0DG3QnJOUlJSNXQ+N+bE/WE6BR1sM
HgFn/CpvYaZMVz+NlNOa8yQ4t5voopx55S16cup7m1PrZp4K5CtOrtfOfu/r
PBWI3UHTF8q99Pfnyz3ssHwmo2xoPn+VfDb6M2A2lJSZw8r/Pzx+LRTavx85
z7PGUSTbDxc0DQ+OaVLWRmSXG3Et0MpMefM0jShzjnofXWvNucN52eDRq3yh
dkJQDoBWOLdoziT7Hc2YDSwLzmvCmYhE2jDCGVHwROC8Vx8tHe1vQGbteQ66
iTp8Hqe8OTV1UCw4lmv5hyeMCTACFs08uSUFL6YMCyvnX7n+wXjPiL6Xgoyj
ddgZwwqcvQ9VhLOVNa61rNHhvGzo0WsrUMYbQHV1HiFWh3NV1ijDucDnSbOB
RTifWTgPGx8HuKcj6PfODucnsj7g/nzA9GYUnNHzXOj2rPmMyHW8bXcunAUq
v2rA5n+OXXkL+fOQOZ9nwguDhORz/rtKlPDFGWeTZG6Gsy0SlHBOQt+ux8X8
2LcRni/oNc05gHPBR7djOF8CnFd1OJ9V4Hzvw5mgafPBp8379ukIWtW5cEZP
nbLVubMqFndmg/kXb+4vwm9joLih5RGm5fgXIz5XEb0YnM87nDcYrGlgYWDN
EWo1Z2w4kOGslmCbAef2qcBGwRlNGnI5KjbR3YyVAuM5iAnM2E+AYH3Ah/9/
O3Q479u45aCgJgWnqHIGUrg9FKNdbqgkfNXkHMaG7OnNpGoJbMaSKT3+uuhI
hjOJ/LblzKanRdvs2iPzeprzbDi7x2QTQ6X9nezkr9vgQZvvpOrNQllzRlmD
SzmWhHP7nOBEOKOJblWB81eAs+yncTKeVt+ehqax63fhBI3XRNttI8FZKRvh
3IrQcrkAJCMr4+5rrssYHvmUJQu+IrjgffuY5397NP59HjeLJtUnhJGo+Ezk
1a14iTRGdC+wvuacttnf487H2D68BwxMKnIywHC+t73KQ1ljQ3BunBOcDucX
pt8RrhkxjFs+HVw407geB/N519/nRmKvRqwKC+f3xvBc6Fhe4jPsZAxK85tA
tJGU3ZQ4ilTnyLOZPNGstOhhJ6ypaRRnZsG5QXPucF4wUHPWd2rgtzzKC09b
OF+V4UxQu71zOB/LVd4Azig4p53xHtDC+U0+fZRbY9ff51MMkp66EM7BQmwh
n5FUIGvkwSBlDeRzlBK3gzr9n6c2klSS/kT2dn79Id7eTD7X4HwvP6nUnLlf
6GHDeSdvzMmcwxaL6atEZ76w0kk4i0W3FZZXcqPpjTXUc6omutMxhzcLudo2
obn8hM/BYUyO0x/8f+7qcMBq8/4HGcMz6hsDNMriBpZ+2M1LHYmyDYPgBopA
45oxJPgXUykT6+fpQdXWSYkzA6WnIdpX1zWcY1lDeAKfBpy39lb9zFnLGhGc
r2I4V7oetcO5hc9rw1kttJ3uC+Rs4LWYDXS7amz6y+rhBsL5s7E941xVODNY
5rMs5cvawrnYOfFEjNmfyPIZswJ+G+LNcxY9m8+TKgSfDJzxQdzZ9LttkzUK
cFaa86pd1lhJCaIA5yqfl4BzbhM6TneWrBrYj64v4brzsHxOXpoTu8Kgaxwt
89lDE884pD+BjpE0EtY8eZHP6UaApxrZgkJe8t/G59iOwi+Csk8kazwBOEfv
ahtwxkPtTgSHmbNqQo5ujRdK1jj1pGY3ba5a6QqChgtnvig8F3xm499FpGkc
mTaheIK8BXnz4QzqssZug2Ba8PMo2CZyDigrJ8+fxODPOEr7nCrD3ZOCMxnH
zvq0QT6nv8VwZpVG8Jm56ljsapvk8/Ai5oAcKpypFjt5q8vBuaI5R3wuw9ny
eSqcT304vwrgfGPhzAMyneMunA8yc97hyTI1EM7fYjhj93KhPEdwZokP+8+c
i+VvFJnJiJPrfKiIz1xymG/rwrL0OXwmvnGWx+RQ4Tw1tvNuS3CuTAiW4exo
zi6fSVo1qpqz/WljVw0DZ1GBAnC+IZ4NvHfahNJj6sLz6XSggvNPdKb8FcA5
8Tlnm2U4f/LhnI6DgjOfmy+lzryhj8Zk5v/nknBT4j284UJNTQOfM5xrVrot
wHk/x+Hu4VyaEHThXNGcLZ9poubs/rTaJvR0Hpz/a9gmtMN534K/iG/w1byG
JnVuQUrIZ4SeVKqx9pBgVbKNfrQUbJzOnwW6JPnJc5XPyjroMXm3mjOZm5F9
GJk7hvNMzfnFDjVnC2e+Ljy+Pbs01Zlcmmr0NnPycJ1PZ5LeZjQG7MNoWTB+
xk80G86azxZEAZlR2toCnHmkob+OPXVEcc+9Mp+ttTvm8/bhjA+SjLWO6dxQ
b2ajf2szmrOG89Y0ZwvnUx/OvPrJGdQGQjfFAM4pc34JiwYeHpz3JzmZFGQW
FkQ4p2ruXI0i4Vwi83Um88P/0S+BcN70RyNZ2JKdz3h9sbaNFj57dTcRn7cM
Z/XINsEYxTavDlubENyO5uzC+dTreiThnFc/ERUoDOfrJwTnv/ZV5SuHC+dU
EE1jk2dbLSgyTxCZW+DMf2ULh4v5rODM71PAGWseq5ODZThvXnOmWkS/ssRx
3etwr7zDlz4Hzit3QrDAZ9qW5kx56UBcmqoI54fPDoscMZy5PHCbp2ePchDM
CdKY0KbMWcwJunAev19GtEIQkagHJCg5aZxxWHOQpF9nCUVU1jTCuZHPDZoz
jemKXkFgjcx5xtHYwh/abURwFt+XWDFtjs9ZxTqac0uP/VOZMxc15wtfc07/
B1mDzNJU7w83c/4Zg4xhg+H8EorsBqBZZYOZU4QzgUPj25Tp4PXhzIa69B6E
c7vQzWmGshHkzBg7hPPTOd3a4IwrLMyRNcoxSXNuXADF8lnCWa24bTTnAM7P
/tHhvKfBcOa1q+pwNnzOErSF8xsfzu1f/TrjBOHMnZ1EWU1hmbkZsjO48tzY
LZz/+jmVt6mxMThrWaMlGntrNGrOp02as15xm9eJEHC+DuG8hcn6Hi2BcE47
6dvBJpwZzr8CWFw+u3AeHTsvoWR7KpzX4XMJzliQvgacG0/VXcEZ38NG/9C8
aDx6P3vMmxOkyZpzEc6gOZNpbnBgcLZfwc/4HIKCTYIZARVK1nCeIOET/SH1
xqrvOfogLcGv+U222ogMG9QI52YgbyEaj0DLk3cSOzlou40ZVrqirHEmNWdP
1lCLbh+6rOEe9pan7dtzaBKcQRDQTzBWDRs2c66+Z/dTNIb6u7mUe9YKXO4n
2nnMPjgHGXsla2Csb6WLZQ0LZ5M5Kzg/mcx51+9ifhDIGijP1mUN4HNJ1oAJ
wXmyxl+LZs4azoUFmjeQOS/uc+5hYwqc7xrg7JdvN8a2rHTNcL4vwfnAKgT5
W9j1G5kZBD5nzJzxWwt9zlPgfAL3TVbZaHmf63w6WlzWWF9z7nDeTPjfrF+E
UsiczyZZ6VwmL1W+fbkZKx0rG3SIskaKn/qD0Jg5Yw/kVITiw9lUcId8Bjir
lhoz4Dz70ykr3UvMnG17vSWsdB3Ou42F4GxX317G5zzJqsFw3oSV7inA+a+f
mc8FOPvrCXodNgbEGTgzn9MA4AqUrYla6a8wnzWc7doBS1jp7CowHc7bjClw
bpE1Qs3ZXdq1Bc5TNefLzVjpEM4HqTmn+Hk/C4HmjN+O6q2h4fxGZ84ZPg3l
2zuEM//fgfMkzbkMZ698u8N5OzERzpP6OVdahrb31pikOV/WNec5VjqWnQk0
Z1xhedff5JMOgtoT1ZWOv7JCVzrdVSPo8EOPM4kvobCFtnLrpC4cDx+NVxIU
tAzP39Y2zlh+Um8Zurvy7ScSYgQuJmtUutKtU77daKXjDZcvrLUMvaq2DOXG
R9j1qK9RtfMgMGnMgDMDucznNACw+VXLGFgf3ekVOEtPs5xMZgtnoraWRzGf
aZwNL7UM7XDecCwH52ld6TanOSs4n/pwdluGXoUtQ699OL/tcN6PIBCc63A2
FSgqc8ZHXD4znF9DZ+9Nw5lASCfZzzmE8/2UxQSlZ6PeMrTDecMxBc7zNec1
ZY3ZLUNXck4QNWclOwOcb304y650Hc57FQhnbhmaNh/O5xU4R3yeCmd+tXU+
GoZaibsO54etEc4/Ji5T1eG84ZgI53WXqbJ8pk22DF3JOUHUnJvg7GnO6aR4
Lc2unc+7DYYzm89fH/3gpbFFg02cB8TVUa0hIRBamc+vgc+Rp24pMn/7Javc
qTH18FmgE7XfY39zmnMvQtlwrAHnqz3UnC2fj3Xa/GJs48xv+EpanWUdCo7J
cXXXJwLnNcGyzSDZzFnBWfSjk1WB6A0mE+6SVQnO7jBQR2x9MnMR4mbhPE9z
7nDecJTgfF9effsK+LwvmrNbJOjBOapDuanC2c2aDniN15/ic1k4E6y1l0UA
U7I9WDUiONukccRRdA+FR2ydo8fv4Rs4goSD7twp2Z4P5xmac4fzhqMC5/vC
6ttXwOd90ZyjCm7QNHzNGeB8I5QNXIX5icH5r58keSZoE4puujKcBWcCODt8
hnIkVrPR8Y51fOt8IhtI5gRnQebI29wO56mac4fzhqMO578nFMpwvlpHc7Z8
XkdzLrTXeF7UnEfZefh0Cs7DiXmeBUwyy1QdsLKx55+LpOD8AEnueDx8X1x7
oqb2oBNFVK1sC+X412m8Uj/wGS/WtEZZN/9dTJizeG4bg3zNE39Ekbf5ztsC
OE/SnOGM6HBePNT8CN7ioeYMfAZ8CVkjLN9+Hq/u6iobZVmjKm7gJOOpnBCk
oUjwlZSdV7YU5XFnaNiVD8h5Ho001vAeNpz/2vvkmaAwEFtRndhOdOeA5WtI
OItwzny+B0zJyhQlcfCoSLdULbk0PyFVNn2WZE7/97s2WRGyFc4eoqfLGh3O
mwuhwsFwFV93Cc51WeO5lzMXZOeyrFFdrKoZzq8AziuZPKdpwb+Hqw9n6E7G
bRZSqrPr73P52PMPNQHOvwZw/lQis0Y0mO5UK37mc9REenbwGKNx7A371+PI
TPCcA+e7NWUN6nDeWPhw/qQ15yKcr8rl288DTWOerOHyuR3OxwLOSdlYMZ8J
ZOcMZ6tsnA+nIdtcuVkl7TfKDi8SppS9mcZmGroqEL0NRhAo4JHpzbDKeMQb
fCDny/HGagarORXHIRdamtuAPLzaPDhH5dtd1thkqN4v8Zeu61Ae/ymsdGMi
WoKz1Zwvi5mzy2TL58uAz27mbGRnNGzztOCdGKgwH5TOFLcGocN5y0GmE53q
FFqB81ch1ZaBidIHniaZV4bML0HleBgqSq/AeHg8Ccu6ATV0K01yyvDn7s1J
GsA5v3+RYk3PnIPybQXnPv4XDMf2aQZtziEHON96mvPKwpmVjeqE4FTNuQzn
yzqc2bOxknwGOI98HgaqnKzHs6/DeVdRhnNuqpngZvtqSvmuRGbZqw35nCcH
ZWu7l1J/nho5c37zg+Gc2cjYLMKZHBTbB5tljQ7n7YY2F6l+sCGc05SZ0JxH
0Ak4Jz6vA+cynyfBWTYOfQFwXkk4X+WhCwOVanBOseuv9AkFmTah6Grj3nED
3M41nDNjAzhHBXQ6hQb/Bv85fAMYXFf+bdx5K6f/GMs43oZ/fsr58/DXDZzl
+/d1Zvmjtcq3O5w3Fz6c0TMp4Pzdg/NVGc4P24JWunY4X9bh/ALgvJJwvuVz
k89BPlksn+lpdKjbq6sPeSXbhMazXwVMMktjtRapBXy79VNNKURnJF4bXL8R
+LJx9KuYW0QzRn7b6rrgacvw/m+9zX3mApozSjG7HheHExk47hpkoDkf5d50
rubswJk1ZyrWoajkeaqmMWlOUC6J8kIa6nBO0IHzUdA+tMN5J5HezLdRyEU4
czrHMCE5jxZPpWWR1qeo4bNyejiUlot358INafbIP/0k2K5OyQGbNW05gPNt
I5xFPUub5tzhvHjk0cKZc6A5H+nGoVfA5zBzXhPOLZpGeU5wNRHOjtuZNcZi
+9AHOOAt9q6/2I0EE2DXb+TvYDirku3XmDYr+5xLZikIBJlzXsJsfFzw2c4V
ZrrK7m1kYmC1TLbtG860NHCW77MMZ8vnNjg3aM4dzsuGA2e1Bpm+6eOvmBWA
uua8DpyrmkZZdkY+F+F8VoHzfal9KPYOPWA4/7U3yTPJZhqcP3MZCMI5I+Ur
CAUSziNvrfcsJFtGtOSzoKtZAKscwtF6LdWS+x8KzvlHGshlON/OhHNNc+5w
XjZ8OKs6/QqcheYs+TwwcE04V33OVTivmuCsOtSNA5hnA8HLRGBGTQ6ozudt
vgE2lrM9g6fVBgdd06jGHFKtJTFod0SkHoRnYnbdPK0W7fNsI9RQZ/6HF44b
OCVvgq2Zz27vo/tAcwZ3d9ecNxFH48qVpQ5Xnubswtkkz3Nkjcs2TaNQh4J8
bpgTjDrU8Uf+nuEM45NGvxPC+dvTUJ53+9d5RSqEM436/xQ4K7FO8e0K4Hxl
cHfDlkuR+qaTBRCXf4TzenbfPl/IF+6l5NZcL6bxmcd5Bc6u5sz63nnXnDcS
COewN2xJc3bddLrDxlQ4t/O5JXlWcH7uGOqiDnUjnG2p4Jg2sPGJ4cwta3b9
3R5mEPSgY3szjd5mGmsD06gWZMa6V1AGpAhQgPOVB+fREj+W/Ge0spo95sPU
EGy6HvJnuGkF/rtvuAxnn88A57sKnAu9Nc67rLGRmALngqxhuzqfzZY1FuQz
eXOCz71qFAnnXMeNcOaDg3DGPhvfnkzyvMOgRm+zSZsFbR5HNX+5lnV1igrd
A2n53UmnFXKZePh+UAO3WbR2zVWljBlwvqvAOeqt0eG8mRBwVmtD+FbnApwv
JJzPJsF5E3wmMyd4GsBZlXLz2Xc0rvd65HUQ5eSZvbUEyXPn8+JBxtt8orzN
0B10IImXZtjBPH7dF3Km+2Jk44XaJDkxqbYCyK0Buy0MuT0yLr6ipHwFO+5W
5TOKJEXNOdI0rrvPebORE4xgbQhxTRdDWjUOZdkZi7hfWGXDhXNBdp4KZ+Rz
wVBnZgaxCZKu4x74zOd4oDzTmL8xnDuflw11+UOHxonXHTTBOXPGK6eCTOMG
8KvgnJ2Wls+Qn4iU2xOEMe+1O2nfVSosnK8oiEmIhotFZTEUC+eBG92tsZnw
4Rybjjw485BGOOvFBOkxWV1wMcGl4ayqBUUd9zCA8TSXtg0yK2L05HkT4S53
gnBOiZwuP6lIGbcAtDBDtnweH7+Qv5jT14CcLpNdOFc0lihtlj+t8BngHMga
Hc47inwbaNcj5vtB3+qcL98oa0hnmobz8ylwnidrtMPZ2urgHGQ+30Z8xtNf
Jc/vu61uY39LtQblKyNPAuZ8g5ESShnuAM73gOy0hCEdPYi/hS9S0kMaw75I
sGlEt/EZlA3lc5YroQxkUA0fpI+uw3nB0HCe0Jsuz2jLEYJwzoY68mTnpeDc
qDy7cAbbhqoWxPW4Rzh74gbCGcWNp1PQvYUPSF7T5tRgk4+/T2ZHkctwHgnm
w3kiQhHpls8rA1Ikqvugk8kvx+cpcP4KcL7ucN5S2LVvBJxLjZ3zPVcNzq9Q
1oj4fLmGoW4Sny2cRz6fST7nUsF89yebiOLMoOLz5yfG503/CVzOAOFMJm0e
dowoZ+EM7HK6xPAwHvdfwajGRSVELm1YvZKvHBE1wuxUOLfz2crOXoWgKg80
S3R1OG8ufDiXuhDU4WzWE8wrvRb4vAicIz4T2DZcOD/yWcP5SJZy86GwcOb/
P1k4b/QDklzV2iWzhbMq7ngcva7OrO1G4wCwIobCsuaz/RUbEzE7A84Rn6tw
1rUzjub8CTTnDucNh+hD7jVXHL4jDefbGM7OnCC2p0PtF/m8UThHybOE8yvJ
ZwHn4XTGNMwsX9WT5w29OJMZV9ZmPzNjGY36+csaOFzQmS8MgYXXKHlBSUxP
vJBFpmqz9BaOTclqzMbLWyRrh/o2g9rjszcniMNbCs6O5sxJ3XmH80ZC9CEv
dL69/xHB2fDZqRNUvUNPm6cF2w0bs5Vn0mtXWThfiRwjTp6x2wY9pnafx1WY
D57Pm4sEsVSprcj88ihchaoA5/E7dbU4pxu5gnPCMqhhLqsVli20ByZ7ybUO
w2craxf4PBfO9wGcpabR4by5mADnoRpFyxpH3pJVaqjbxs4Rn7cGZ+YzVHPb
VbkVn4ueZ8lnvvXufJ4dCU1YqU2PyTPCeUCErAfMZNZSs6szX8gMNoRz4jPC
mZmsWA0ofiFfSvFZ7TQpJF4uXeBzVJnSAOf7AM7XHc7biGlw/tspyr4yC+cr
CedVe9f9083D+dKUCp6GcHYLUrTnOfMZjpuF81uAc19kcFKQqdTm/wsyyyWo
BoJ5k4AwUK88Modwfj4WsVbD8LkgerTK1xGrAzhbW8gacL4P4Hzd4bzx+Ns9
Ph5h302nDRu2PZ2SNVC2LbWniwpS1oTz1OT5udMK6QWkJXhjeBPxebi0QXtb
GivXHv6PZSkP/9/1d/5zBHmV2rgs4AAH5IYoBuRbvIrOrAz5dsl4hV8eujiM
oyfzrzz3tgYF29JbiG9wZanweRzAxSLBWHPOZEYfHayB8nL8dnY9cA4nhuoe
hrPHZxKa8/cj3Z5OuZ1XLpzb24euD+cWz4arbKDnecxMLiB5hm4byXqk+vCb
Faxey7KU3rCuMSyZGc6csDGciXK3LoTzuFV1ZgfOCq2n4yNqLvvY7CtWH5tX
c/nsqSJNfIZPUcmfxyPQDOf7AM5Kc+5w3ljklXPPYR52WgckC+eVC+dCNcri
cG7k83HIZzEtGPD5Oy5ixXBWy79aPh+28rz+1YekmvF51O1TpElAtC+6fecy
cOo6s4YzSc+nyoeV0UjtW1Y/j0Ftib0Gnyv6BhyEZjjfB3CWmjNrGh3OywYu
a64LM+MW5RLOtzIz8bvu49zKduDs8pnk8ihlz7OEM7aqy61Ej7zluUk6Cp5U
z4014azITGPyTKNHkbv/tZH5DqCkehmdKTgrVBbgXNgsq9Xm6hv84lPseUKg
rvJZHodmON8HcL524Jz4vOBYeuLhas56ThAnv3JfWdEjC776lcdn7aZrhPM8
q7PL52ry7Nmeoz6iN0ewPPffm4Rz4jOa87Fu4rAnB5kz835XZcu6I+i4QGrQ
ERSXXsotg+AKy427zxB9/O1HyOXZanVxr2786wWY26tAWaB2WS0vNzM0Z1G+
LU5/WJ3NCs5d1thc5IOMftGoA9KYOUNTLwtnK244t40FONPaTTYmwdmeI5Qn
B3HMq0GOM93fsSxlOIywvBoP3bdjEsjOuoNMoafCOT2fE2Ys3kE+c9O5ARSm
6VzOAB/hPH5T+doK2cIZ3sq5AzKCcyEiPtvxVka0EkDaEO3qz5NkDW/1Q9XM
2YMzQdrc4bxgqIOclY3aqihKcw56yGg4HzW0D3XhPJvPFs6ubePUh/OLIzFt
hPP+IZxVK37FZxr1DTbu8v37rsfCkjHpE5EnZdjMmUcpw3nYH8cnwnkk841H
5iy1PT74IrJ34uCsQrhAb5tLV+F8LEWPgM9VOC8taxTh3GWNZSMdWAfOZk5Q
tQ9FQJn2oSuTOYs5weNi8kxrW52r04KrBj7D+McxH/DZ3AzywUQ+p9H7FlaD
/TaC+sBS6BlkRiAzkxkCzGTkRkBjZe98xVhGsrmDECmKl3Iek7z/zssfoq3A
80ZQr8Fnd0b7VmcXLGtwwqz60V0bq8abzA3WNDqcFwyGRl5CwoWz0z60aqhT
cG411NEaXffbk+cynyWcX8kJF7xN8HpuYGdyw+eXY2X3+0Pnc2OgZY7kylNI
5r93QGceWO3pzMZ4L+CcyJZ+3Y5ANwe+9ECtRlS0r34xDbnLTfJ5Fpzl6tsd
zvsRONOavaPeklW2GsXA2TbZsC0L6tUol9viM3ni86mRnVv4nG8JuREuzqEY
fYOkuY6nCJ8Un5lX1jJ3YleeAjhj8iwXWtKr8wwMl5WqJKUMC+c0MFw4vxsf
VyMq2lfbSlJ6E3yuwVlrznD0oGVo1Mm5w3mL4cO5pX1oPikKHepsNYrfPvS4
Buft8xk9G6amW/N5OBTYcwMPIOjPL6HMjUB/PmwJ2gZJ14pL5uyag5Wnhkc8
nRnIfOPqzKjf2rGnsGnJ7ML5nRycl8FIQz5jLj1ViKbQFN0O56sAzncVOH8C
h3O6vx5l5w7nTQTavXLv0MhTJ5aW0BmL6YCUS7mVaZP5rEbjSg7dZeH8oQbn
lZc8l3tuGD7fiu7BZpo7HVsC8ZlGfx2BxEFPwAidmMwOcPaEv/R0ZsyWESaA
YkfNwGTA3q9ZeTkhV6kQdrylxz/CIx9rQy6a++BxPmnGMOBzVJPiG0ELmrM6
5cXSoqZTaBrJaEHf9fg6nNBwPm+A8/2PCM5eh7ozNSGoSgUjPk+Fc+EEKcA5
4vOxnCX3+KwcpLdH5dVSgM/WXKemCA+sUIU/BWKZZBdQQeZzIWUoqblNZ3bg
TFJJU3AmqSSr9FiNNMXnjzU+F+am3enCuXB+VYOzU749HsasOTunvBWc0/31
r9lBx/c7ux1shxTsgeED3gRnT+uLOtSpCUFbKujyeQacG/lcnUznc6HIZzvP
EvNZefhH8TkR6eD5zFkoKzYo45DpAprH4a8ibcOxZ4tNIktzJKOpuT8cY+kR
lfq6cP4IYy8afu/kfsRnN0mIJA7SrWCiyRHXSlfRnCfBGTWNDudlw4fzeROc
i72dVbXg5DrueXBu4bOrBFJQ1k2mZtDA+UImJN5SsNeCzwTiM/KZPInjACRo
BWcmM2fOqgvogNbzUNYY2TuMwJHMN0AhkTmTpzPj3J8dYwznDzU4q63x9k3x
Gd9MNAnSDGc1OVLxOQOc7ybA+U2H88bj4ZAyn7mUW3wdppSbkqAqdD9cGEVV
Cyo410u5VwGfC3B2T5NyMtOoP5sTwR//8JG9/Bn15095eKOmxJIdtxglMJhx
nrnr8TIt+ELDRP1mLkO82lTUBdRTM3ImIC+U2jWXnmCHlpswv5MDxh1OXwDO
GIURaMdhlD8r8bnAZw/OL6Zoznijd5s1Zz7aUb8j9AyAe//12ODrdYfzcpEu
eRnOvwbKhnU7j002xu+3VMrNp4xyO7ul3KuAz/Pg7PJ5Epyls851Pjs+JcVn
Ilnc/WZA0zNYnxT9CZxPogLwE7Xj4DeM8kUKPpEf+Mzyu7hZjruAkiNlKP7o
hNnelNnr/geA88dgUFkgM5O/tOG6hc/uICzw2Rg2GjXnBjhbE10M55MO5w0E
35JkOGOpIMJZlQoOXyjC+TaAM7dn1O1D3VLuxeFs+RzlLRQ0fJZlKfYscE3+
oG+wxCH5jP2Rno2LD76GLqOfgc9oPEux67EThnrP6EJ52OGz+O24IGD6EV6z
ar3mFJx5yWzHNecqZiv5vSs4o5JsOYzJ8xd48IsH86l8XnmD0OVzAOdGzTmE
83DAoxW3YzjTeNnd9eg7nECDot9kA+H8ycK50D7UXQlIyM6oB24UztF5YW8q
SVpPj0M+63W6DZ/vlP7cyOfXwGeSygZ6oVmL3itK89vj98bvGRHNH5DvGqaQ
WenM3P/w4kjqrmpcncp5NwXnDxLOiskoa3yBVPkLPGL5nF5n0jhceYPQ5XMM
5xbNeSachyMfwPmkw3nROAE4+8mz1wQpbrx/a5ogqTpuwWceZqhstMB5fT4X
5gepaXIwOhe01T/z2dR3E852wVp4KXiShY0cCteK2LsaQgTBPeW+wTQf25gJ
msv9/ZGxhfhXGGOo1YvOPDy0RFtakjqzstC7IvOlN3jwg3w01FXbb8Dn3+Kn
zeOzC2fME577cI56O7stQzl5gMJAaQEtN6NjSQoF5w7nBYNGqfPlmMkMiMY6
IE95hlLBap+NCwPneil3JA9GiG6Bc0F/nqRvWPM/nA6+xHHEy3bHLZLypNg4
CU7Sy0FjJZ1Kp6OMekPEVjTGKwW/yW+/5P5O6JTzK7Lf/MALFh+oEbzYPC27
gMZj7mTL6kaMv038rl0DBma/CsW/wb6F828xouel0HYEzpU1Vt6EoHE4o4/u
PpgNNA5nGmcDCe74NjHknmaoUtns3CjD+esPvNo2lHJjvyynlLva6KBq22iE
c6P+jJmze17YjGU8I0KJw/KZEZ2h9CYnlgR67FtgnUW0YmNCtAX1bFarF1Ev
qy4Q6o3hlUU45aAiO2fOMLSGp/kLZzOZVy6ZGc7pRfirxO+aBwB+FiSqhfNv
cj/9ym/wyGw+l+Hs8plaZQ0ekzWrxuNdMBXg7N3idThvLl5D2WzOZ8YlBYnC
ghQid0lu63kWddxkZm3KTep4oEae5xlwjvSNDyZ5TjtR3kLGYmdOCqebAYFc
L6wIxa65DDfsy0Gj746tHS6xI1C3B7dmwkeURZkMh1lPTtd6fzjdY4sMiQhH
JUMdw5lWViOHoOhPzfcpTTi95heJ2eqWfqv8nA3x+bmTIbyQKZCWNSScb/SE
tXU4u6ufvBHKZxqNr0F8e9sXl18uWC/iswnX43bOJlvHreHsJs8rF85lT90p
TNxQIG5MlZ3LfH7n8bkg/ZFuXmcnyufwmeR0IZ4OeEa8BkorTqawNjaOB1Yz
t3FHpcHq1Sz8059GdxxePtAoyB8q/1NUZLfML/PhzUTCuQB7WS/DmYDMVITz
H97+Hw18bs+fpybP5MDZbRnKfWDa4Hxvak9qcKbRe9PhvGygmD8HzsPMoILz
remzsQr47HR4VnBeNcN5fT5bfYNqUzNwjliXadY3xkMR8pnMRIyiGQrRKfhG
8jWoH59hUxRF/Br06kBQo9GCpKSMV4R0huYqbFgmA09wjqNrmF/OZP6OR4ky
mR04pyccG535FAaMhTO/Afynki8snP9YG85lPi8EZ9uVzpU10rl558P5Xvo0
3kiRM4Az83nXSDucsHAeJgRrpdz5e7z/4cH5VpZyq7VRdDV3Gc6FaUEL2HX4
7OrPNIHPZ5H+DIhW5BHm/+GMwLny8YxgpFhxI4XNnBNjsVnHOsGZs8I+Zs78
Dnk/zRzlS8ybfOkZHnGUDVREr+TRO2M4p0fQwIA6c5Q5k1ceYrVlF85/SFDP
gPOXnw7On3w4p29WwTnxeddIO5xIF7vXMBtI0KGulDybhVG8Um6bPDvVgnh/
OhvOk5g8W3/Gk6Xaf4O0xGEnzdmye+dOFGbH3SedfKLXlL84tkRiC0cOvPes
bunX1UQk4hf/LnNY+HyUORamkvOvBJ0/Sc5WjMDRQ+VYUgu/KXdgEEz5uarF
H9O39G7/kABvF59nGDZOi1a6cdTpxKDUKfReFgYW2oT++uOZ6TlwAhMf7zuc
lws8+15GybPr2dBwdg11VnlejSeahvOkUu5LL3Nels/WXGddHJi2WT4XywEy
nzOiZQ4znCyfRKrpIlpxMu3ziWMF6hmRXuTZP5yMnS/l+k2yOHP9A5VM/qT5
+YOH2V+vYRwwZ5gwE8B51QZnkjUjVTj/Wdv/M4Czy+eCshGpahTDuVC+TUZV
swtUjcc8bONMFHSi+1WY6LiT81uYHd410g4nFJxL04KJz9CRhnhOMLtxpq5d
JeBs+YwwdJXndTSNqv5s+WzPF2veaOCzqghwjHZpNQoCPtvSQuQhG9QtPDle
H4l8GHfs/gl0UH/7i3hZrCcVmXM6ea/h2sFGLMzNRiAAme8kQ1Tnz7xkw+M/
xQpTfOFOwV+WGhJk6kpcSVnB+c9gHx904Wz5XJad3VE3A87j4VJTgboCBQ57
/i50YaCyN0MbOh5v3MkZPe27RtrhhIUzLkUh+iCpasF7Z6rdW5W7ngu5cD5u
gPOlB9Wl+GzF58ugeivw171SEsdIaSVB1/lMRogWPJRZK4FZPeXPkUY9NVwp
g4wINryxN84bHk5/NssNBYC3cHyusPMnCTILWQPhTHFFNr+y0pZdOP/hwfnP
YF/BmWp83iKcX9XKA0FwHts4D19HGc5ScO5w3nTwbM5rOIsVnwnhzMnzvdNn
w8CZ59kFnK2KiJ46V3NewYgtw3nx/Pmd0QMpXlpI9uePPKiiUGWE0q0hlWyx
ew/eBlVda+5ABSTPYfu1eRuTc5f/A3tBUh4eh6t2flA2mJWgYKfcGc5KjJAR
Tngai7IjscuOAQqkDEXUP72NimGf6RK+3VNXnRC05dtYeCJ9dBdqjBlN47sj
OOPQAgcdVq2yrpWYzB26eLmxDucFIx3PBOeTAM6+8owd6kDZkHC+8fisPHWa
z9GcYKOysQ6co/zZPXHIS2yOm/isGvVrI4fT1A4VWsNnjc03Pqjd4Cm8+jPP
5TmLV4exw6TQu7BpQ3aniIWliLKHOfF5HBW6htRtjUXxlbosZaQ/bZNkZLJL
bPW0eXD+EiTPVbdGULuNAtrZDDjnQXU/fo9FtZkT5pMO500GH9LXYx03w3mY
FizA2edzocNznhaUnjpnWrCRz66hbh04f2yDc+Syw8SGSvPpms+4FiHymZTQ
cW8y1XF6nW9qxBPeyBwYrarg0BMPvoEd/t0A4MOJrLwl99m6LAuxbcPPC4Qz
DcqP0/nTwpm8zp+oZkRSBr95hHMjky2iEdTtcP4SKBtVK13c4KUM56sJcP76
Q2sapp8GLhrY4byhwKNKURMkNtJYOHueOiK3VJDz54qnjoqG59Xm4fyxGc58
Bln9+Xnd7+TzWSI6SwH5IIO+ITh5PeauxsbmQNXlMOw7v3Iu9RNXA/8ayRpW
tLlR8jKwRWj1brsMqunM/FVGcFZeuElMbufz4nBumA1cFM6ynwbD+dk/Opw3
Hu/l6qLovyKXz9c5SQv6bCCf3bWrXDiLPqLUzGck54JwbkmkqxM32BDV9ho1
RMonFPwIq27BFI0nl9U9YGZHb4EYYkOcqnAhDtgL7yfXj9yoATB+IpyuGuaw
xp/mAZCOGx5SvmnCbwG/qfRbSsFQc3wWxfzPH//etBXUaTR1lDVniutQ3Iv+
qdScRzjj6VP1bWLzVaeHLQsaRGKxeJyJILANqH62XKC0a6QdTvBV7y3Uefni
hlwhhUgsj5L57IjPN6bJc0ncQNvGDsWNSIWeh2gGjtIJeR5n/KkjR6uWCFCG
+V1Akud3jNlj/RhAjam77FOU34DT2fvmSNwgOA0/4UUcp9xK1v3ht/ARWOfK
y9aAwX9LMbYRzgU+WzhHng2KO2xUhxOFK8KfwbyqC+fYRDeqzUS5aptINNNQ
cCZYNCFhpMN52cBbEhfO0QopRGJ5lOErDmcGLZxDz/MMOM+eGUT+tMO5wGea
1osj87k6XQj4whr578oIQaTNeOKO9d5sXmLsb9AnVr6f/B44c4afXgGc8aYg
N/yUz3ecciTlZfwW8LtrgbNl8gw4Wz4j8Fs8dTQucdUCZzWcanA+q/VwvsWb
rwzn+wqcyaTNCs7vO5wXjc9Q2oNddE5c20aUPN8Dn31bHc55RbY6h88FOK/P
ZwXkKqVbJA58V+6ZxappoRkvkOosuFG9gs3p02tgfifyJalCyP07u5GJ8Tu9
AekYNXP+coV88fijV/jBsWafX9zNli+975SKRX/KicHwnIHiKp8jOFdlDTWi
Wrz0x8Kn4bYJvTpy2iGO656MJYG6ZBvtzdBa5xnUaz+DZeLfyl613MJl10g7
nEh3Iq6ycTJR2bC2OtltI0yeI3GDpifP7eJGAcIz+GxnCQtwRuOuy2evwZ3m
s6FlhrMtbFkzANQ39m5IPvMK3ueZVGyEO051LuLL1qkE1DsvYf4ICXMLnNOT
18mT2/ncKDtTUL5ddgHhFAYMmCqcsSoQ5imKcCYSzQHIg/NbSJg/j821do20
wwmW8d+PpYIIZ4fPsq0NkVi7irTyrFohtSjP0/hs4fyuDc5VPhd+2sjnFBbO
pzA/OIKrxGfyJnpAwhWQlDNxKFALsRpyZlRIbr0nM5Z5hhdNF0K1YDjDE86s
O45rKLAaVE38pa8Yj22jGQPh7GJ5QTgjn9XfmqQ5z4Cz6rJVgzNWBcoVqabD
OfGBi4vfQ6/CnjkvGNj+F0u5sbUCuWsLXsPE7kzbxgK2ug3BuYroFj7zvbmF
M/LZINrXogF3Pp+xsgOefCeR66LY3fKTyYQs/8y3QvJNYuW1Fm244Ehlzin4
AOKxtWQuwxlpaRG9FJyZz/zmW/hMnuaMcL7cIJyh7FQae9aBM43ixq6RdjiR
LnZ84XNbbYjlq3g28NpLnsPlq24DPq88Plda1SGil4WzEgZbsmh7Z1qeKHQT
6VOwc5ged+2iNPvxSgLIjJBKxcrbWFI+w++ON/x07nU2/VTJFx/M91WQL2yh
H0M4vXhI19+DbaKmwXy2msaXQNNQElwkOJ/KylNlmx8PO16ynanAsGQbWwF8
chx0WBX4Etq/pyXS6HE28NuYNnc4Lxh8VAtwfqb61LnKRihu4A1yKXmOCrop
WF7w1CvgXVN2duHckmY3ThRSoHJgdsRI9ArAfdFj5CfCGQWQlUxxr7yk133C
yrwgmrXOuA/G+MWdWTjzE9wv0c76RXCmuBWzO/dnp+ocJpfhPIXPi8D5XYNn
Xg2JkczaJy+nax04Ezl9AHLbcOjEQmNJoG2t3+G80cCjigUpuPAr39dUmjyj
5/kebXVieZSa8qy7IaUBGfF5Hc9GGc4un1PM5jPnRWU+qx53ZT4bSuP1Dg+v
RfGFnJy1T+AXWSGHMdARN76lF0fQdVnJF1HmXIYzybm/MpzJ60oUJsxlODfz
GeGMfF4QziSmAlvgfBXBOZP5XpJZwfncaRBK0taVJgQ7nDcRFs7vAc6vAzjn
Lg3KtoGe53u01aGYWfU8O31EIz43wtnlcxXOls/lLLqdzxQI0YrPjaYOl9Ie
SBWKL8zmqMeSw/rP2fk+fsNK1ojkZRfO6k+rb8eFMz/ZdbhNUDNm8ZmCJkiL
w/l4Gpyv1oXzeYbzs3/4cE433bzi5K6RdjiR1pgjWOyeZEHKa9nFN/P5TcDn
eyd5pmx4bvE865l9JW4cm9SLZJHCu2b9maRRtro1ZtEtrEY6oe8uup/liEXp
COCOWF0N8+vDtbIsKVNw0VHaMhUXk/oCT/vNY3KULbsEzmRup3Ebn12J24Vz
5NNwBwaOBFWvrVZzIO205NPqRm6iwyFJ+5xYkerasTerHnSofOKakh3Oiwev
xfwNDM+V5Nl24C94noVtQ/cRlXzmxEwwweWze9bPg7ObMFf5zPsz+GwTaXtW
2kT6VFo7UrTx+QUCFvaxib19st1/gX/uuCYp46dAyf2dp2Coq57LZ2bdn0G2
XNIuNgBnpWnMg7MdGGvA+cKFM7FPw4OzIDO2oTNTgUhmhDPJtdp3jbTDCT6k
eKiV59lRntFTV/U8+7aNCZ5nTM8iOCPlpsJ5Bp+/SD6nWIfPHBGfT0c+W9ED
w+Mz778w+ziF5wL8Bd/C2L9FRUmZP0V6JmMHj0BZW2Y4/2bgnDCoHBol7WIz
cFaaxp9wyXDhrMaJGhjrw3k8oebDeTipz/2pwA7nbUYZziXbhgvn0PNc9dRV
PM8bgvNsPhe0jhl8dqtXCCSCYy+XtvqGRahyv3jbmQftF2QikpHLkjKNRX+R
dfmDubp9CfjMuEsP/mnsc2sJy2vIzpPg/CUeGFPh/LhZOF8sCOe0KiW32Xkv
xc80V/Xjl3/jjXqF4HLxcDyZz589w7PiM8K5kjwjn3GNPNNJ0nieK4sMPg/g
zHyeB+d1+GwT6RatI5o0RFCvzGdcBdKB4rYVq6dG5JBxjzxvPEX7oeFbYF65
2nIkL6Pe6wPTBew/Ny44W2VDDQzLZPt140HGMe/Zm90ehlc4//74iPE238uF
bN6U7M2sNr82rZsVnDuZF4+/R/sjokkWpFTEjXPpeS6Lz9lTZ/NnbsVvbRtn
Vtxwy1KWyp/Xh7PKpSNRusXXcSlTKTevtrjGI6Pybbt/HO+7v8iXAxfm+D4v
5QfkfXz+Rw/IX6Ra67bER0K6CvPfQ9qF8z8B0f9sxnWDwxk3TJ5b2tC9C6oC
T2XO7Jk0IoeGIbNtqo8N6LxFT8iUBNq++slL0Mm8ucDDmy6Fn+H4hzOD58bz
7LUSNSvA2kWseC25qFXdns4MTuIzEmkenxWrV4aQEU7LW4HDdrMoXpn35tqV
kcwqcy5ky79J0NUrrx9Zyu8whPM/PVZvDM6/AZwtn/l7L8A5tjcvCmdY9CS9
/3SyvzXladak0eG8uSCZPCs+u7Y6v4+oZ6tTfURdPo/5M84MOkulFJJnRDR5
ZYPvinD+ON1WN4/VVJs3LHDbAhz3XXIqDdM+Hj2BvHjnHdXowvfFXJvsYakW
+lG1yadh6UDmfx5N2GYJzkxm273Zfl73umz1K+tytzoz5XlApWZ49rkWB53U
NHASsDAP2OG8tUjHGeH8uWirQz4rOAvxOcFZ9hGN8ucjYavzJwdtWYrl82XA
520qGxGfvwQVFh/le7NwdhPsKNl20Top3AQe/xy+n4/m2KoPqIDM+1a+UE0+
MU0VQA7gzH90GpzLfF4bziSvyArOBFYWNV/gTgJKOF+4cM5k5hWp5Ipjmcxe
X/0Izi6ZEzd2DbBDDj7U1KY8k9tHtGyr8+Gsem4oPpfWsYr4fBnwuQzn7fBZ
JdIfTU4VzRu6AshUMUQ9Xn2CStHxz+H7URcXdRgtnK112dWWlbxMqpwkhvNk
Ms+CM3ndm/kTMZ/5CrUhOI9kngBnQeYinNObL8O5k3nTgYc6cm6QtG08s31E
q7Y6AWfdc2McZm5Nt26IVOiJ5ML5shnOG+WzSqQLorTic1noiPgcsXrqE+zf
wvejPkX5GLpzf662rKSMAbyxe3l4wu/TyVzmc0Dmdjirr3sdOAOZEc4XCOf0
p9vhPDz/zYDldJqr7nPKPtenArcceJPi9hF9C62en0GLV1zURkwufJXJ8/0P
U9N9d+T03HBrun0+F8ofVg3iswV1O59/q234zHZoR6CONjvvtolN/dEv5ppC
0M/THh+lWlh3HDVoy/yHwmm+zTP5h1cV+GfQsZmCehMlQPFwPW2yz6lOGilJ
tqsEht1BifIqgVgPaB10BTgnRCQ475pbTyLQ8xzxOX1fJzZ5RueG5fO9bLjh
8/kGppt1TTcZceMobii6DpwniRuNfHa737Tk1Y2UdlkazTC2P9kqydG7Usek
Cuc/YZ9Gbbll4m9P4EyeQ8Ot1CbjbcbbHPJWca3Z5wScgcwhnHNe9MmYNKR9
DqsCO5z3Kmj0bKiZQdtK9LUUN5yGG+mr/zTy2cJZL5Viuz0L5Tnic3vZ4Cbg
3Mhne9q289nqHm5qrXD6Mdh3mRw9OfrTH82btAekCmeVMPsTfy02ub2Bs+1B
V4Dzu/GnFs4k1jopwXk8U3Jr0JHMGc6ZzPey+xwKGqYB3UvwNmPfZtUdtGsa
WwsaRSSEc6GVaGn51zcAZ/DUEUFN92Pl4AjnOzmXUWjFL/hchTOKz41w/jjR
Vlfls6t1TOVz9D6r0I4S7PIr4Eu5sga+yerRsI09Fd8QfWXLHO1B5mw3FJzb
4ax8jAhn5W0eKBrC+WoanL2FqJKgcWIa0H2OTRodztsMl89uK9ETW9Bd5nN9
nUF3qZRVuay7WtPtTg5W4byI5jx7mwRwu1V5q2L9y9Af3qbwVQBy1bq8DISn
8jkAMnnzgO7Xh3BW06lpQCqXUco0bOsqEpOAuK6NqNTW3ma+V3Vbg0pB45ns
DkqBQ6PDeYeBcC60En0Na3NrPnviBq5jZeDslqWguOHy2a/pbuTzUsnz3vL5
i7zK2P15r6mAHKkWdrKP5HzfsnBOr78dOJPscRTBma96zOdGOB/rdvpVOHMv
/dtMZiw8uQ8dGnY5KvZi4fqtUdrcTXTbDzLK8+dAeWY+P1OLDJqZQcFn3erZ
duO3tmfLZ10zWOUzGfH5p+DzOqBGDqv9GVi2cI5KSGynZZswLwXnBcjcDGf1
icpwVsnzOyNoWDiTI2i8Gke721Rfqc13COfhLCvD2WtA1wjnTubtB8IZW4la
2wbLU6ImpQznT3JmUC2d01AzqMoGC3BeX3xuvOXfKJ/XTKQ/Bvvr5MwKyArO
CUdW1qirGdPhzJeArcHZ1ZknwRmThAKcRz77cB7JfHXkVp0gnL+O5x0uXfSr
uNvlnBkbNbgOjd4ddOdhb14snzF55tkE9jwrPhORkzxrPvN0httwo1LWPWly
UJVU7ITPfwT77nNanrz+5krHLXpyJF/MgfAUeXktMk+0Z5CUmu09Dl8BSU7I
pt91jc0rr5OG7CeThrpYTp2yfe5OlnR9H25I72WVwSc5EyRbgxbgTLI1KMK5
k3m3wYhm8wyKG3ZmMBQ3gm7PdikrV3z2KlOsuS5LHGVEu/nz+oiegWU380RI
2h33yTPwa8lvE+Ayli2KWx1x/w4kXA/O66bNzXB2E2YXzmQc6R/gWGGZPG+c
Mwdl2ryE7sqQ+UaS+c53aHwdz7uYzOzWwKpAJvN7Y2zuZN550KhvuCt040XW
acXvzQxqOHurpdiabg/OE1aDXYTPVHM+L5igTspgZ+fGU5mMkoVl8gRHXIHJ
szLnJaWMgMyNcCZTpr0cnM8iOGcy38tqAr5RZZMGlPG63rkTALK1z/Wced+C
5ORgAnWh4UborLsu8vnelnVX+eyvBou+UNtzA08KmlicUubzUnLBOtufZucP
I42qBLi8kYkJ0nGVwEvY5CbDuaYtWzWjxTJnpYy0sY6RQgH5FFaBlCUnZ+lB
OeCdhU4e/+mVad//YKmZeB7QwDnlzEjmNA/4PiZzh/P+BHnOOtY3XD4LcWMS
n8Olul0+lypTVGW3C+dl+bxvcHb37XPKNI5y4yXh/M+14LxAttygZlThTMWm
c8xnC2fSrY1UJaCA80hm9DZ/P3LLtO89h4apOong/BZczT1t3uegoGyQGhfp
hgUHRU13Td8Y+XwT8Nl31kVt63bL563B+U8JXrVvn9NC48lGuIOAM7VZ5r60
dQRdH85A5plwZjInOBOsQoULUSk4p3fe4byfob4aBefSOlYWzqpmMCwb9Jca
DCpT+B7Qh/M+8HmbcJ4tUzRuy8N5jY02I2uQXEO2CmerM7dkzunBuXAe1eb/
v72zx43jerZ4bUNQ9FfwFqDIsFdAGGDADRBcghJB0BYEgWDiNQgGM+UGFDhU
YMCAohcI/1iAE6d8z1ZP3z5Vder2nebw+xw0jDHVHM70x29qzq2P+a7Z3QVz
MWAedOLuR5+hYbNLiW5zczKnSkCR+X6K8rmaY0XNZzM2KuW84DNvyP+bt91o
5sZxXhzc1nxjNXnjRvm8gZmrHK5QfLXaDq5i7ziK/zgkkEfhTCHMgJyPW2Dy
n4zJIWbOQH47f/S3GMDmOY94TbKmoDGleb7mWaV2MYKqD2cDHzLAuRnOnzWF
6oHIkrmR51iFzDrH51zTfZ7i56GBKZnPZwWf/+fh8vn6TN4QCe8N5//dB85/
3A8451dej2rtw9nWfOaQ0jwIZ0ica/n8ZGyrtSSN1fmACc7miwFtzp17A7lY
H+cELcH5Qch85kY1xwp7biz+Bi0bDHxuy80r0wbfV/5Gp/PGw+LzZixvtimG
nAoaKo/D+Y/7AecU9lcHsANnjJk7VkZwzxqcDVI9WVPQdTjzSsD+oJM1OJ+m
VLrpO7Iqte+/KJxDWh3tudHKBs3cqJRYOUjgTHvWffDf9Xpt63Jx94Pg8wbv
YnOwvQeQKx9jHM5/HBLO7b3vDee/OJzDkenD+VPXZ7bUDhRP1g+sxxFcuguZ
jZactNWZ36ES8BJy53yxdiPzS1i4z5XaF6lRs9YBH5AMyro/+yXdPp9jTTf4
zzx4JouDX8LiYJX8DMFzbL7Rn2kV1gfp4uDtrA8eNk7eiN9rrvQdNEIehfMw
kLPV/Hc6C9RnRkPjlwE3o11mP8DydNEU9MdgNYeZrXQREGu03VI7qwfEvqB0
RGCeDygyPxRZ0bCuA+eJz83ZiHyuRnV/vSoWByOf0+Jg5nNsKzrIZxo8H4TP
1wye942TBed+wGwsn7mCs7Fik46bMQLnmcwrcJ5DlBLOC5kvgczebX7+H+Jm
ZDiLzA9Rlmq6czfRvDKIDTfyqO5yGixfHKyS63Lyc9n2+UHz+W7gPGgv3wmc
85rjGJyt7jJXZc19YlZGx83AlGYKZyDzj8xqZk3nxuC83GWph0aGsxXd5wTn
B6R24nLDDfMNkQzSdZbvVsNw3vHZm8+Zz3AZ57aibmA38tnW/OezlPl8f/h8
Z3AesZdvC87mtftzw3DGgHkQzjY3v6rgbKx7RlgBnK9hJDMumnSbzuF8t9RD
Y/fM7TtpqgcMPTSsmHVi361LkfmBynxaHfrPeMZDWXf74HaLg1VmXTafy5lW
gc9LZ6SZz6PJzwHR5idb5REqdH3Qiv51hzWf+3y+bfvi1sgMz0/gzFD8t09H
oUePAjmcPhvOZw6XU7vS/ChAbG00DOfWETTBeXfvnF9VcDY/HLDqpS84Pw7R
skGaXMcrU1hP0RxC07EpLL+u6vwc8+vC+uAIoq1bQpgR/WvdYnRfRPdD4grR
jwrO+Gyb4NyOSYiW2xHuwLkTLa+azD/772gIZ+Rz+ro3Xb3LCuBM5qIj6NpA
7TZTm5ZpT9FUHnQiLD9ohUZVnbJuo/7GXJkS+OzgXLbl/zZftNHigMt7gTPw
OebXjfB5Q4rdofgsOLsnvAac87GiB7ydkelp21kbT5kLcAYy70Ll+Sp1/fOf
xV6gWGzC+s5drjeda40U2g1oMFAbm4Ji28npjr5rukjXksGqQWhYZ76s+xQy
NzKfs8WxRAJhbIrPf+42R6rqu3l+na31f35buxwdUE/3xfR4ldKb/WeK6HvB
58Nu8HqMqWIyHqL+el9eQdi3XUazMqo52o3Pq3Cer+2itVEgc92uGe+7ZmUE
OKtS+/HJWEPRj4zPVg1M6c9Myfl1ic/B3Og0F/X+cxk/9/mcEb25UOWmLejH
xmd4PRWc27seiZYrOONHatve7RMwB58ZU+aagsk8X7E9OC9khsi50xG0D2fz
i4CfIX6+a65Ih5F1p8E2Ph8Bn0nbuvGZVonP8zU83lyU5Ne98GmoHT7TEHqb
xXELS4SPis9jcKb28iCcKZYbnN+xdcAMZ7yKaMpcgLMPJNCdc01BHZm/+kVA
1hG0FefiIIzOIqAqtR+lrOgpinzGlQi0wvozrazyn7n5HOu7E5zPgvmc+bw6
f7Dicx/Ov8L36z6cxecVOP+1Dmd6HAbhXJ2+5l9Nf+utBzIWnxpzM4DGWJcd
rIwP0Doj+cx4I2D3DFZsQvvO5RptzdR+9Mont0reMJ+5Ef3n1fxn5LNDNK3v
pil2pLko7QL9Iq0PDmZxhHToay4UVqzu8LmDpsOw+obASznMNkpmFHK4Oqq5
Ivsf4YnDE7pamh3y568DZ0dm9Jmrvkap2CSQOcDZoNgkjG0VmR+lrF4czAMH
cXHQ+Ru0PuVyLz7/tsbn4z6fsVClD+eM6Bvi84ZEjj6iD8nn67P6r2hZXAfO
OUjOQO5UZPfh3M41hfP0gc66gOZk5rP2gr3P/CHPN1ku9QLOy/0ClYDYdO4l
dDdqiKZwFpkfq6y7OBgqU3BxcOHzXNwdxqYclM85uc7xOXSxW4Xz2UCi3Z3w
uY/og/H5+rH0X57GNw/nT/6xQUV2BWf8CM5wnv4VzTFmNQ/Beb6Amc+MZP79
qoJzC3VyR9AMZ/M96O4aIdINytLiYOPzBWzobxA4h85IWADlgwfr+c+0/8b7
kLkB90iZwrEK5zNvQe/FZ4roA/L57yuHssPz+SBwrp72xuD8KS0BZDiHJYaQ
JjdtLWB+wXvmh7EmLmUOrtU0SvvrFXEz2HCThuI8eSp3BLXaahaZn4Ista0L
K4PBfz6Cz/d/K7vz4mBdnMLWB7+w+m6a/FyNiI0Wx3QT0V5JHQu6kwhd5ULT
QHobqzcnRR9sAXHPLfzdwc8aqmBf4JHsZMrlNGY8rTmHua39hfF/CGdP5rN2
+VE4L2QO+cz94SaFz3zKOoKKzE9cxsyNwOfgbxA+dzqLJj5nc2NgeEpV4t2z
oPt8Hk+Erpom2eEWCkcWDY0F0gcLqveHc/iM6L/m/8IPO9kXGc4Zy6s1Jm9Z
gUkgc4azWZxpAhMiYr7c/GDNzYApFatwttQRVIuAEvIZ24qGzI03cyO7amwK
4fOw+bwnn48PyOfVROhbSOQYN6UDnw9peuwP5/AZUX2OtDc4Duf2PFWmXGgu
Z3W7DMy3pHCeqduZBui6DcCFWsJ5t1uePFUsAiKZm9ucfeaJzILzk5Kl5I2P
BZ9p/nOw0Yj/nPhsyd9IcO7w2VnQfT5P2sDnDOeOET1pM5/3XTSkDLxlOBtT
9bIH4YxLfp8ShHM+xlm3uVzwmUMSZuEzv4erzs00gaZGrHVGzs3wY6fabdIm
T1GfObjNppRmKfE5zLTq83kxn7P//GqtPgX6i5qZL/H+rd0p5sqyyEr6voUq
Iy409Z8P2CD6T8DUKqspt8fxeM2t84fCiwzsRQi3jzDKZGovB/siJ8vRaJm6
GSlJvn24Hwc4JzKXcLZO4hwbO5UXAc37zBdzMWAms+D8lDVde6Ez/0e4Zqj/
fIT+RpXC0Y2iUws7vkRYtODAWd48fu4j+oxtltI5Kj5f347+70BcvepLbwMs
1b5PS/0ZWk4Sjsyf8JI+DdgX6C3bWnO5dq7BxwiNjI5hCx/0cdrUfEEufN49
ADdjubah2MQsjp3q+MwGo7Q/aviUlGQ+f+Of/9KxsGF9sPEZo2jHZ1wcGWhh
N98Ocf7gfHd0QugVPk+3bR/OZx4C+/J5g91xKN/j9rfqdebPpulohC8amcO0
0K+dlBwkY2lJs7NycznfDQBdsveFm4Gd813yp4WAOaXMBSujcjOCldFutNAO
VGSWmizl1zU4Uz6/rPhcpXCcX+UWdv/+nIzw/s1vuRHHax88ZyOal3uPzCWk
dkeVF70hQXovaI94INvAvtcz4MvIG76XYFkgnKcH4XBle/ltCpjpeh/CeT77
pPMnjEIjcJ5/Mc7OnoMEn5mflv9CVgZiOczRPmI+s/m+RghnkVkKqiq7L1j8
/LLicyfF7vwqtLBLI1TwW2Tgc8fioIkcnM82MJewY3RUfK4SDFYRPQ7n6/O5
MooPAudP3YxlS8XXlb1M+2NkOP+Q6v5orwxbFv4inC0lZsQJrTWcdz/pwnna
Z+o4d5R85imE/uhDILUDlSpVnTcuGJ9fpuYbz2H4YDk/5fwq+M8Ln13/5xxC
9y2OUT6HEPoW+PzJu6zb+DxugAw62PvCObyMKunik3+/gcy/piO2zV5uVtXP
LE0OemWEiuyl+g/I/D6bzAhnfBfB1qhS5pDMz+ch2kdz/Jx95jB5SnCWsiwl
100XDPWfDRYHjwr/ebGgz5m/EabEfr3CKYTzzfJbyrXDXhzb+Wx109FVI3oD
nzO19vU3rslnuor3yTO2w9tPKSrOQTKmXrRjMv2EZsflPhhW28vYsMh40d8x
y5R7/YwHzME6+5IHZ2Nixu5qrLPmss+Mo1qr/vmaPCWNi/K5U59yXT7nKm83
JTbEz6u9Rl+nljXH1Vph6FE2YkdPz3mWqr9Xa8A7CR6NZlU+XmZ45/Eg3oML
0beOKzi3F5zfSIbzuysXIb9LDkY7tjlIxoW/1orZ52O4cmwgc5wwBdeMg7NN
MbOHcyMzwtks9s2wIjcDb42qfz6GQIKztKrM59BZdAOfc//nfy9p6j87Pmd/
I/LZlhCalxNancvxwoNlcLkQf2WQz/3QetX3CHzuP94A585jupnXJ/amMpzf
efuC5i1TOP8AcDZY+EuZzC0r45haGc+W5nLvCZkBzrvLZiZzm2ky8Zm0aH4V
yfwSwmYcov2x8Jm1DigNqsNnmvxsLP+Z59dlp65aH5zzN9ISYagU6JUTTpFz
n89YuTCeznFWtOnYt4alE06PsLoTYK/Cea+tQ+NxONNo+W06sBnObefgLTc4
z1dIzGF+5mb/ufF/MDjb2Rq7KxDJPEfOCGdHZmgEinBu90UF50ZmrQNK48p8
Rv858DmE0M12i3xuvaA9op0F/Tt8neRVKiPlhCTXzveF7tV9B0qvFrAgZyio
362Z1SG7rGL1pMrQbtuvxeP8w8HPCJttZIpf3CrLgjoYNDUud/tMTD4OmXLz
yY32csphRitjKk39fmm1YACvvctls+9Wxu4PnZPEjJzPfOqt5ul3m8k83VAq
A5S2abqcxv1nymfDFqONzyyE5iUqzn+u+FzVEu6RC51jaUt2dObzzz6K7gfS
40H1aoBNiW0QZv+a8EuZXD1P5j99YfjKs6Wcc5XbwckRMh7hgW6fy3x229nL
OY35dSLzh2RlfAtwtikw9nDeXZznEDyfuEZzVYtm7IveWQEUmaVtynzu+BuZ
z8+xxBtSjFb4DF8kKZ9nzK7Weu+Ry0H5bN0edz8zPud+ShhJjvB50ADpGNeD
6kTOHTjnFOVf0tjrarEv5GbkaDn4GEW3T9q8KMLZLFZkeyvjW4CzBYcNyXzp
jDgrVgBfFk2N3hQ+s8gsXVMVn2nzjcDn56yFHR0R6/jcvL5mAHo++3b9vNYb
KE34PO/Q43O/boUaHZlIk96xWLri87hBnfm8+V/3gvMv6X87lnIjcztEHTi3
/UOLjNzt0yy3YqZZGXn5OE4AXC6zPMSnBQy4SjK5c0UXUEvFJm8Kn1lklq6v
zOfgb+CIqzfz/BQcoRKTN068xQGN7HKViplvZOcXCqtEDl8C1jeiV7zoFz6Q
q2LpbQkefQPkHdAvewi/DEO+2jpPm19P9cpzwTXSePrfylLO630+SMbz0k4Z
nke3EAxY9gnMqV1GWOzbXWzJZ162Ewib645G2DejFWijzyw3Qzq4Mp9Dft1H
gHPjM/rPlM9mrMr7kvDZMItjHz7Pd2vPiLYxryPEdat8DqCmpsegATLyeAOW
+08bXs8qkC0VXK/CGbPjmIOxnJT5NB3787h8+NrOYX6f4Tz/7pcA593P25V2
CSlzKfnT1b16MlM422w1I5nlZkg3JPNDzSii37Asu+ZvhNjDNeKA/nUU0au5
djOoI6JH+nJsszsaqymiaSz9ds0DGcn3oNu+cB7c6OsMfM5fFpprEeCMB41W
XhcOxo9wpmKobMvnb7SXfTm2q8jmc0xa8PwK/Lfz1JQAZmdPP8l9My6UMifd
rmwghQMtjrY+gmGG0UZJJzGEdjeLNwMXRPOmo6Svnb+R6ZhCnCTLvY6R2Ss5
qF41QPAxZfVZHbheZzurH1sSZW/YOpYFHH9yMEOTT+ZgYLlf1R4/ZMqRor8F
y7lVPhZlnyzR8j/b8/+4AKNqmz/9awiYlTIn3Zoyn3MJIVocLb8o8znGzynR
buFz1S6J8dmc1xHHYAGiN/C519s/UxqR1TdAqFlNIZnRvXnrPHMVDI/D+UUy
kwvXwmUvA8OP06nJ0XKeXYKZcg7OZrHor2r+uYuZT64QzuH40Lb5VQtQkVm6
NQ3y+Y23oDOfib9R8blvcXg+131H3ZhCK/PuztDlmPf80Qd4nM/Z9Ph5wKCm
BgjNcEAboU/XEVV/gr6MM/aBQuHcnv/FSlJcgHMnO24p92uRM4XzfLK+BThb
IPNXP6YnN/8EMk9X5nNoMTcpj2elBYAis3TLMuAzzgvGfE6bi6ROwZoLfLaG
6KIRtMsv9XDu85khum9ERz6neocfqddBTenVqvARg3qQ1dexNfba6AcKbtMB
/yGZ8x0444dFlR33LFZhEzjPO7hWzEujjKIie/e5n5t/MjIjnEMxoKX+zGgy
i8zSLavxOaxHT5T+7KNo9OhooUpzOSifOwuFS1Dk0jkWVsNtWxrR1su7cyOx
ACPHGdSdJv8NU7kPXqda/Na26u/SV1itjfqmysuiXsiISx3kyuy4wl5ekjGW
P40n/WtKk+tnyqXOn2gyH0E40Za5w0yTds1PQTL6zHd9m0pPVJnPNi8RZpcj
85nPUnm1wmd3x0GuncV0u9W1Qmp0vGdWZ4yoAUc9U7rfB8/SGuId8rlaxOxn
JlsZFe8+pyic4QMOI2SSHQcnhcDZllD5izvpmcwhU+7yKsAZydwmTE2XJV6r
9v3L4PRPbQWwkXn6X60ASvdEgc85hQNLVAKfy1lXr4C3bFBs5jNJtBtaKxwZ
JttxPEI9ODGlqe8RGvtQVvcD2huCc17EpEkX1MlhcG75yXmx7zjB+TXAuTlO
7eyQQmyXJgcnffdXfEqGK8f2cN5dZr5dRguec9v89kamqxrhLDJL90otYAh8
Di0FAp/Np/E/D404cN18Tz7v7s16rbDPZ4/os8Lo6CRIj/KZGtSoHNDeApxp
/lt2M/aCMxyfY79xb9lI6vKH4ESFAkDeirkqx75MJvMrTuYJztNu2PzTICup
kXmyNURm6b7JmAXdgoqLlMXRLvjQyy6kcJBawlBOmHPtyrpv50JbnRRdF4CH
jXsdRjLxOLQzvWkGdSXqYL9Ye7z65AVyaVryj+mdxkNhLgcj+slTVAx74in4
ku3l+IFbdci/9D6GHyy1DDE5WRY7XvqYoZozdQGRs9wM6aHI9uRzRnTF55jI
QWtVGJ8NjY6hjDuSFD3v9pqBOgTSLhOvIFhv9TA87keqHcCuihKYfkYwOz3S
mBkXeBxeV3CedwiV1w3OX6KJEU5lqMLOmXIphzkkyzUzzfxXuRYwv4HLta2h
TP8kN0N6QNrA5zepl91efOZzr3y5yoLooYy7ntcBtKF8LmPp+RdXVg/z41Uz
4YWPjSvnZNCRoJ8RyU6PXS/g3bnPKX+4Yu84i4t97/0pCB0Ia28Ze8rNcLaw
8BeMMg/nQGYcmR0CiRA8W+ppcNe3oCSVynw2WNG+AMuO8vl5bsRxEi2OhdL9
RI7kRVd8Tg06OJ/XEqSPC196QRb8Fb562Dc9+nwe2W3ELqafERWQzS3w9eGM
TK5qSZZMDNiZLPwtZPb2cnSYc7b8XKCNV9SUw5zJjD7zm9SZuaXPKWaWHorM
f9HDKsJOIw5LVSo5C7rfdJQ05bhkRjR60XzF8AuLoj/UCdL4VZ0uIK4a1Mce
cdu2vjmct+pvHectveCYB+6NC/J1Y/5dkq6cmbzjMOuKv2AZT25IvZhbfbqA
OaUxY8x8WnTLx+q/kDXXrvPp8V3fdpI0JLx0Wwjd4fObLp+taDpK+Vz2TaLp
HPvxuUyQNhcNZj5XBjV3P+YnHAEphTM1hysIxz9RvJjw4qtU8Ognz0Aug+Rk
Ln3r2Ms7BwNX/UJHrHO4GFIrOYRzu66w7af5XkahLhsTM9oVLixLD1SWWiba
Wq336bMlnmmIfk7nqtB0Dlq3chmNDgT1dyxwuwMWpJAn1PfgEWNaCMseCIlU
vUtAjJHrq/hbecvhcWh8kYusQ1JizIh75kaThKMdQ+UdottXntyiMBWVBO8i
zC7ByBnhnCuyQ/NPSyUnd317SdK1ZMzl6NR650SO0I7DmNexu099xhTPuyva
3BkNp+fG0R5rVbEhbyUNv/jewzybITQbhJSTs5B1cAf6tNULeA8P0CWm745b
x6GZJ+zv0uFCB4zdPq2+r9kXLRPjFWfy7hdPon1h4GBgppx9DwyCj9GuTCx9
DY2MxGfpEYjy2epa74nPR7A0kxfTo9EBpYUVnx2iB9cNXWN/V2wI2ImmdAqq
Y26e53Mnm5pWKdKfj+zwunjQh/PypcCSmFmR4YxH7Js/mATOuz1xmW8+Zcvz
XKYvSu3sz9+qMpbDJFaD0pILv1qNETJ+9UMfQ3CWHocyn2mtN+Wz+f4zpKkd
8Jkj2rscllPvWszWMgECOpAnJMeDmtLZay1XyixmgBDfoMBsRVq6Q/W0HM4M
xfntrMDZlu8aeAB5IYnRHIyct3zpTq474wBng26fYarUacrHMFb3h2QOo0wE
Z+nRaLqYKZ+xEYf5RDv8+vmSLRdSPscGHcBnN/i+4LPrNlkvHaIp7SEW+EzD
aZKhNwDtTpQ7uMM6hBONw9Z5d/RofInRcmobuDvUoetyzo4rfAxnNbNC7PCx
3uzlo7nXXBjP2hb+OkOmBGfpkSkgumUiTfdCbseRm3Ic+b520w/RYMyBdMfo
WG78XMaC36N7OXhVvkdcWCyc6sq1jgkhNyfPWPra8JV/8Y/z9wg/sA8/4Px0
Esup6b63526fIjtu968n7qS/TNfJEXT7NH9dtfGXn1OmHF6iVVbGtOft30SS
dHOywuWgFgfy+dTXCLwsEE34XOTd8aSOohjcoWaNzwmAFZ9XVxWzg51/Pr5z
fvA+wTm/tt8SkHO1CHynwCI+Nstvh+Wv6VAjk0OQfJ7yc36KVditEBsbyrUW
GSFNLucwT8+MpSX9NGbBWXqUsmRxhPXBHEKfptWcI2ZEW1gu7BvRvtmd5Viu
aHy34IiA+kveClB/SKzOfK5YnfcZ2bm/5wf22oiNPL+RON6atInLlvIE6gTn
3Q65sWcKlbO9HIpKaLfPic95HutH8DGw7m+VvYKz9Fg1Xduh3aj5cWy06ejp
szKXo92kkc/9AvBz9m264HPwpR2ou3yuPeo+nzse76F2pnCOr3N+qdVbg/ee
j09IlsOGGN3GnmXqsreXJ6G93H6ILTLC2h9eY+hsjFeXiM/SI1ZDdEi0w5uF
Nk3CIcih+2jP6FgrMCwrDWvTwyWAeYDXBgiJqD0G+5Z19n7zD+nO+KCM7YtP
HJdfsYNtylKOT0IP2u/pozA09kz2cuUtm0/mwSqSzORwXWFW57YWRoKz9OiF
iM4V31XTpFN/h/a96Mzn3V1f83klQbpreti6QZ3cgN3/9qAd/wRH7sLkweex
mFaR8ivau8hlIyFIDl1bA5BzwXXR2HPZh6Uu2+wt52FS6C03Mn/0aXI5WW5b
l4wNvyJJD1F0iRD53BCNfM4LhdSLznwOXkdkRUI0oQ01PSpWE4M6p093XJGA
3yGG487+qagpER6ngNnDefkraFkEp4JFy0u5X5Udl+2LE2dYoZGF9nK7HnDV
7w3kalYFJtsYKzhLT0TGhhJOQj4HRIeFwknZi96xgvE5Js3SLZnSkTyMz/jF
31G6jKX7rnXH8r3mzvQ1EDfDvX36fhmc3W9dulZyvLEn64xhdepyO+n5YriY
W+WHdi6YxnwdwIrP0hORpRRTWq5CK1YyqCujwwYCaZodXfLk8mrdnf69iKip
U0193c3b+JPUkf/yars2cv4Is/aRl5qfuH1O3BmhnTFCgtykU7/klxvKfZw5
bN5ePkjDT8FZejqarnbKZ7zjqMuBfD5dy+hYsMACaULpOqImlO64H12nenkq
7+tei9X4JP5B9dfNLL5m1tzevVN/HByWM5zbdJufYpDc4Dw9A8bJ1MGYTIww
TyqkZWLHrcN2yBecpaepdrOj14Ggvkheh0HFAebdWdGJNIIaEV3hujY9wkZY
N2BW7/jZ/+EGOHeeqmtQZLMiYvzSR864lkpdi1fJUoaMuNwVP9sXqw5G++Fn
iJzRKDv4VXrAJ5SkByRLdkcrHMBvryHvjhaAtxu86hrNi8HpwKwT8lV91QOx
bIOs+iHUQxjfefUXkav9j5gQCVeB8auI8RAY97OUqYOR7YvG5HAN5NGrNzpP
qgNnYzr4C5Cku9V0YSOcP7NSr88+ig7VK51mSjSQ5nz+ac2gflUTjFmyjth9
nF56nA7uHH6R/mv/hVEm53eambzmWuCRpxnL5ouvqz5ywcEIVdg3Ok9q9ZmF
ZekpCBEdmtV8THl3GFw1ODc+nyZEty/RAdSRz8mjdjgKfKbViGiG+BYflSKT
Q7BNoU0f1xC20JbzMr3I8I5S306DXAt36Dyc8Z/wyLcFgmkHbOyJCXLms+Mu
/GVgfvrqLYBx9U8IztLTUebz51SEG+zoic/YjBRNS+RzZUovnKmT8eJK4jmL
pSmog58wjNPlzw3ss+z8O/tbl/WHyFq1iPs5nd934rDcXKOQsTzt8NIvGYSa
o5Adh00+m728VxX2QS5IwVmSpAehJ4UjwVmSpIeiJ4UjwVmSpIeip4ajzvsV
nCVJuj96ajgSnCVJehB6ajgSnCVJehB6ajja5jk/qUMkSdJ90FODc0eDcFaA
LUnSLUicaaqom3+ogyZJ0k1LnGmicB7EtSRJ0mElzvxf0fgIRfe/k5cqSdIT
kTizQTpokiTdtMSZDdJBkyTppiXObJAOmiRJNy1xZoN00CRJummJM/uqs1Ao
SZJ0KAkykiRJ91CdVLF+OpkkSZJ0c+qAV1iWJEm6KwnOkiRJ91CCsyRJ0sOS
4CxJknQPJThLkiTdQwnOkiRJ91CCsyRJ0j2U4CxJknQP1YGziC1JknRXGoSz
qgglSZJuUxVyww8FZ0mSpNsURS79ye2+LkmSpCcqWxPd8w5fsCRJkoSqoC1J
kiTdBwnOkiRJ91OCsyRJ0j0RBsyCsyRJ0j2RDGdJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkqSb1v8DHpZB0g==
    "], {{0, 480.}, {479., 0}}, {
    0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{509.75, Automatic},
  ImageSizeRaw->{479., 480.},
  PlotRange->{{0, 479.}, {0, 480.}}]], "Input",ExpressionUUID->"2ed4258e-f7e2-\
4a65-8289-8010d9f3a3b3"],

Cell["\<\
O ponto de Lagrange denotado por L2, que est\[AAcute] localizado na parte \
exterior da \[OAcute]rbita terrestre ao longo da reta que une a Terra e o \
Sol, \[EAcute] exatamente o ponto em que o Telesc\[OAcute]pio James Webb ser\
\[AAcute] instalado.\
\>", "Text",
 CellChangeTimes->{{3.844604809383939*^9, 
  3.844604861016399*^9}},ExpressionUUID->"ef11aa7c-ee20-42a9-9755-\
a817d0704ecd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["b)", "Section",
 CellChangeTimes->{{3.844606300510857*^9, 
  3.844606300766478*^9}},ExpressionUUID->"96f40ebb-c773-4c58-a9a7-\
cc7202360d34"],

Cell["\<\
Vamos primeiramente definir novamente a equa\[CCedilla]\[ATilde]o do \
potencial, mas deste vez abrindo as normas e deixando expl\[IAcute]cito os \
par\[AHat]metros x e y (foi feito um teste com o potencial V da forma \
definida anteriormente e a fun\[CCedilla]\[ATilde]o Solve demorava muito para \
ser computada ou dava erro): \
\>", "Text",
 CellChangeTimes->{{3.844607030954071*^9, 3.844607096606061*^9}, {
  3.84460805769665*^9, 
  3.844608058392527*^9}},ExpressionUUID->"e61c0cb3-df5d-49de-b28a-\
cc382e742e3c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"V2", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "G"}], "*", 
    RowBox[{"M1", "/", 
     RowBox[{"(", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"M2", "*", 
            RowBox[{"R", "/", 
             RowBox[{"(", 
              RowBox[{"M1", "+", "M2"}], ")"}]}]}], "+", "x"}], ")"}], "^", 
         "2"}], "+", 
        RowBox[{"y", "^", "2"}]}], "]"}], ")"}]}]}], "-", " ", 
   RowBox[{"G", "*", 
    RowBox[{"M2", "/", 
     RowBox[{"(", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "M1"}], "*", 
            RowBox[{"R", "/", 
             RowBox[{"(", 
              RowBox[{"M1", "+", "M2"}], ")"}]}]}], "+", "x"}], ")"}], "^", 
         "2"}], "+", 
        RowBox[{"y", "^", "2"}]}], "]"}], ")"}]}]}], " ", "-", "  ", 
   RowBox[{"G", "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"M1", "+", "M2"}], ")"}], "/", 
     RowBox[{"R", "^", "3"}]}], "*", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "+", 
       RowBox[{"y", "^", "2"}]}], ")"}], "/", "2"}]}]}]}]], "Input",
 CellChangeTimes->{{3.844606651900118*^9, 3.8446067886193113`*^9}, {
  3.8446068895593643`*^9, 3.844606891973824*^9}, {3.8446070246301117`*^9, 
  3.844607025820413*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"75b5759c-635a-497a-b436-224d491a354d"],

Cell["\<\
Agora vamos definir a for\[CCedilla]a efetiva como sendo - o gradiente do \
potencial:\
\>", "Text",
 CellChangeTimes->{{3.8446071016063023`*^9, 
  3.8446071135992403`*^9}},ExpressionUUID->"19fb645f-6d97-4f4e-972d-\
5b884c9c304c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fef", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{"V2", "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "/.", "pars"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.844606902192275*^9, 3.844606914797614*^9}, {
   3.844607117803083*^9, 3.8446071181530313`*^9}, 3.844608644048088*^9},
 CellLabel->"In[81]:=",ExpressionUUID->"710bc459-7650-472c-a83f-93ba21dbc753"],

Cell["\<\
Agora vamos encontrar para quais pontos temos a for\[CCedilla]a efetiva como \
0:\
\>", "Text",
 CellChangeTimes->{{3.8446071221596746`*^9, 
  3.8446071531777267`*^9}},ExpressionUUID->"5583e3b8-5507-44de-b20e-\
45fac8f281e0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Fef", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "==", "0"}], ",", 
      RowBox[{
       RowBox[{"Fef", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "==", "0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.844606917370214*^9, 3.844606927509877*^9}, {
   3.844607509518808*^9, 3.844607549917534*^9}, {3.844607653893441*^9, 
   3.844607654132669*^9}, {3.844607729818383*^9, 3.844607742278335*^9}, 
   3.844607909066832*^9},
 CellLabel->"In[62]:=",ExpressionUUID->"265bfee8-a59b-4d43-abee-5ba450289c0e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      InterpretationBox[
       TemplateBox[{"Root", 
         InterpretationBox[
          StyleBox[
           TemplateBox[{"\"1.27\"", 
             DynamicBox[
              FEPrivate`FrontEndResource[
              "FEExpressions", "NumericalApproximationElider"]]}, 
            "RowDefault"], ShowStringCharacters -> False], 
          1.27104869073988124839047486602794378996`15.954589770191003, 
          Editable -> False], 
         TagBox[
          RowBox[{"Root", "[", 
            RowBox[{
              RowBox[{
                RowBox[{
                  RowBox[{"-", "325"}], "+", 
                  RowBox[{"766", " ", "#1"}], "-", 
                  RowBox[{"505", " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                  RowBox[{"25", " ", 
                    SuperscriptBox["#1", "3"]}], "-", 
                  RowBox[{"750", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                  RowBox[{"625", " ", 
                    SuperscriptBox["#1", "5"]}]}], "&"}], ",", "1"}], "]"}], 
          Short[#, 7]& ], 1.2710486907398812`},
        "NumericalApproximation"],
       Root[-325 + 766 # - 505 #^2 + 25 #^3 - 750 #^4 + 625 #^5& , 1, 0]]}], 
     ",", 
     RowBox[{"y", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      InterpretationBox[
       TemplateBox[{"Root", 
         InterpretationBox[
          StyleBox[
           TemplateBox[{"\"0.438\"", 
             DynamicBox[
              FEPrivate`FrontEndResource[
              "FEExpressions", "NumericalApproximationElider"]]}, 
            "RowDefault"], ShowStringCharacters -> False], 
          0.438075958538366005967645833152346313`15.954589770191003, Editable -> 
          False], 
         TagBox[
          RowBox[{"Root", "[", 
            RowBox[{
              RowBox[{
                RowBox[{
                  RowBox[{"-", "315"}], "+", 
                  RowBox[{"866", " ", "#1"}], "-", 
                  RowBox[{"255", " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                  RowBox[{"25", " ", 
                    SuperscriptBox["#1", "3"]}], "-", 
                  RowBox[{"750", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                  RowBox[{"625", " ", 
                    SuperscriptBox["#1", "5"]}]}], "&"}], ",", "1"}], "]"}], 
          Short[#, 7]& ], 0.438075958538366},
        "NumericalApproximation"],
       Root[-315 + 866 # - 255 #^2 + 25 #^3 - 750 #^4 + 625 #^5& , 1, 0]]}], 
     ",", 
     RowBox[{"y", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      InterpretationBox[
       TemplateBox[{"Root", 
         InterpretationBox[
          StyleBox[
           TemplateBox[{"\"-1.08\"", 
             DynamicBox[
              FEPrivate`FrontEndResource[
              "FEExpressions", "NumericalApproximationElider"]]}, 
            "RowDefault"], ShowStringCharacters -> 
           False], -1.08283946420224341800064848939655348659`15.\
954589770191003, Editable -> False], 
         TagBox[
          RowBox[{"Root", "[", 
            RowBox[{
              RowBox[{
                RowBox[{"325", "-", 
                  RowBox[{"734", " ", "#1"}], "+", 
                  RowBox[{"745", " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                  RowBox[{"25", " ", 
                    SuperscriptBox["#1", "3"]}], "-", 
                  RowBox[{"750", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                  RowBox[{"625", " ", 
                    SuperscriptBox["#1", "5"]}]}], "&"}], ",", "1"}], "]"}], 
          Short[#, 7]& ], -1.0828394642022434`},
        "NumericalApproximation"],
       Root[325 - 734 # + 745 #^2 + 25 #^3 - 750 #^4 + 625 #^5& , 1, 0]]}], 
     ",", 
     RowBox[{"y", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      FractionBox["3", "10"]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        SqrtBox["3"], "2"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      FractionBox["3", "10"]}], ",", 
     RowBox[{"y", "\[Rule]", 
      FractionBox[
       SqrtBox["3"], "2"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.84460716612176*^9, {3.8446075313794107`*^9, 3.844607550825053*^9}, 
   3.844607655268242*^9, {3.8446077311164103`*^9, 3.844607743118835*^9}, 
   3.844607910542232*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"5ab23b29-ea19-44f4-b42c-7328531e1d8d"]
}, Open  ]],

Cell["\<\
Vemos ent\[ATilde]o que s\[ATilde]o exatamente os 5 pontos de Lagrange que \
enunciamos anteriormente. Vamos agora fazer um Plot duplo, juntando o gr\
\[AAcute]fico das curvas de n\[IAcute]vel do potencial com o gr\[AAcute]fico \
da lista dos pontos de Lagrange. Temos ent\[ATilde]o:\
\>", "Text",
 CellChangeTimes->{{3.844607914035849*^9, 3.844607917482682*^9}, {
  3.8446080640966997`*^9, 
  3.844608138972301*^9}},ExpressionUUID->"2e7cc61d-ccbd-4eaa-9e2a-\
eb2c9b167a3d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"P1", " ", "=", " ", 
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"V2", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "/.", "pars"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1.75"}], ",", "1.75"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "1.75"}], ",", "1.75"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Evaluate", "[", "optam", "]"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*StyleBox[\"x\",FontSlant->\"Italic\"]\) (R)\>\"", ",", 
        "\"\<\!\(\*StyleBox[\"y\",FontSlant->\"Italic\"]\) (R)\>\"", ",", 
        "\"\<\!\(\*StyleBox[\"V\",FontSlant->\"Italic\"]\) (GM1/R)\>\""}], 
       "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.84460787122121*^9, 3.844607878292397*^9}, {
  3.8446082753211193`*^9, 3.8446083817120113`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"8e8c57fb-194b-458e-890f-da73345f924c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"P2", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        InterpretationBox[
         TemplateBox[{"Root", 
           InterpretationBox[
            StyleBox[
             TemplateBox[{"\"1.27\"", 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEExpressions", "NumericalApproximationElider"], 
                ImageSizeCache -> {11.94140625, {1., 2.}}]}, "RowDefault"], 
             ShowStringCharacters -> False], 
            1.27104869073988124839047486602794378996`15.954589770191003, 
            Editable -> False], 
           TagBox[
            RowBox[{"Root", "[", 
              RowBox[{
                RowBox[{
                  RowBox[{
                    RowBox[{"-", "325"}], "+", 
                    RowBox[{"766", " ", "#1"}], "-", 
                    RowBox[{"505", " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                    RowBox[{"25", " ", 
                    SuperscriptBox["#1", "3"]}], "-", 
                    RowBox[{"750", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                    RowBox[{"625", " ", 
                    SuperscriptBox["#1", "5"]}]}], "&"}], ",", "1"}], "]"}], 
            Short[#, 7]& ], 1.2710486907398812`},
          "NumericalApproximation"],
         Root[-325 + 766 # - 505 #^2 + 25 #^3 - 750 #^4 + 625 #^5& , 1, 0]], 
        ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        InterpretationBox[
         TemplateBox[{"Root", 
           InterpretationBox[
            StyleBox[
             TemplateBox[{"\"0.438\"", 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEExpressions", "NumericalApproximationElider"], 
                ImageSizeCache -> {11.94140625, {1., 2.}}]}, "RowDefault"], 
             ShowStringCharacters -> False], 
            0.438075958538366005967645833152346313`15.954589770191003, 
            Editable -> False], 
           TagBox[
            RowBox[{"Root", "[", 
              RowBox[{
                RowBox[{
                  RowBox[{
                    RowBox[{"-", "315"}], "+", 
                    RowBox[{"866", " ", "#1"}], "-", 
                    RowBox[{"255", " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                    RowBox[{"25", " ", 
                    SuperscriptBox["#1", "3"]}], "-", 
                    RowBox[{"750", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                    RowBox[{"625", " ", 
                    SuperscriptBox["#1", "5"]}]}], "&"}], ",", "1"}], "]"}], 
            Short[#, 7]& ], 0.438075958538366},
          "NumericalApproximation"],
         Root[-315 + 866 # - 255 #^2 + 25 #^3 - 750 #^4 + 625 #^5& , 1, 0]], 
        ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        InterpretationBox[
         TemplateBox[{"Root", 
           InterpretationBox[
            StyleBox[
             TemplateBox[{"\"-1.08\"", 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEExpressions", "NumericalApproximationElider"], 
                ImageSizeCache -> {11.94140625, {1., 2.}}]}, "RowDefault"], 
             ShowStringCharacters -> 
             False], -1.08283946420224341800064848939655348659`15.\
954589770191003, Editable -> False], 
           TagBox[
            RowBox[{"Root", "[", 
              RowBox[{
                RowBox[{
                  RowBox[{"325", "-", 
                    RowBox[{"734", " ", "#1"}], "+", 
                    RowBox[{"745", " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                    RowBox[{"25", " ", 
                    SuperscriptBox["#1", "3"]}], "-", 
                    RowBox[{"750", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                    RowBox[{"625", " ", 
                    SuperscriptBox["#1", "5"]}]}], "&"}], ",", "1"}], "]"}], 
            Short[#, 7]& ], -1.0828394642022434`},
          "NumericalApproximation"],
         Root[325 - 734 # + 745 #^2 + 25 #^3 - 750 #^4 + 625 #^5& , 1, 0]], 
        ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        FractionBox["3", "10"], ",", 
        RowBox[{"-", 
         FractionBox[
          SqrtBox["3"], "2"]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        FractionBox["3", "10"], ",", 
        FractionBox[
         SqrtBox["3"], "2"]}], "}"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.844607660103423*^9, 3.8446076904774837`*^9}, {
  3.8446077455099783`*^9, 3.844607777106811*^9}, {3.844607819038802*^9, 
  3.844607835478868*^9}, {3.844607887395173*^9, 3.844607890624551*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"5dd1182e-67f6-4630-9153-00a3726bd581"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"P1", ",", "P2"}], "]"}]], "Input",
 CellChangeTimes->{{3.844607893896596*^9, 3.8446078976828737`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"fdff1081-4476-4326-8369-850d8d564093"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      GraphicsComplexBox[CompressedData["
1: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
/WK7Ahjj7M7OjaXymG7gtySKF7nF+KGd4GfCvO4BXVi/s52K9HbCkJ8wag9w
OuEMys92IfsBUtzFE915Hma7mvU6+814/mG/rjdj4kv2UwA7CKe4wTzP8LqM
283zE/SgjTDr5STKl0I4l9Jnu8GcntdDzDdsB9jU/x1GE06i92KvE5/yfBhL
9bldt1I97toRS+95XuZ1Gq+XeP6MdfM+ieLTKD7dDeZ1LY8rrxtTqH9sVzBG
uzBPQ29LPGGxn2lcMA8yX+NBvDelxzhlU7zYv+Z9FtFB9CfV66B4B/WT9Sro
gXmK/cG8ruBzdnjPflv2M7LexoP07Ff0pvSyn0N0YT+kk/KznmK/i6xTKN5G
8bJvQHKXRJjXSw7CmO/SCIN+PD8B2wnnUL5s9MuEWYSdhPEAy/qZ6IPHRpjX
sZkUn0P1oH3g9yzCTsLe1C6Ekp+w0JfknOd1Xh8A2wjHExb+pvLYL+kkOvA8
y35B9kMAi/1IclhE6cUeIyz7mOAHwpmUXvbHDc4jnEv95HNWcr6I5ILbxese
0FnOZRHm/TBOB/mS+YP6D/mCfmV/hcxHBkdTf2RfjrD48ake5PtffhJ3fiyO
d1A9SYTZXxPrpl3s92E9mUL1go54RP4oP+sJlivgHDc4hOhgIzoABxIWfQi6
8HsaX3/C3tROjHsstQvxaRSfThjtSKHyUqh+9quin7AHMD6iLyG/jGk8ZD5Q
1vxiPxBOov4J/xL9eJ+DMfuJeJ/BSe3xpf7Bnoc+At/lcjtIPiEH7MdG/Q7q
TxLFo35eF2YSRn45P6OtGPVkU/uhT2MJg875VA/ag/HD/rycpyCcS3wk6RWl
V9b04i8nvsEDLOdjDAb9+Hyo+F8I4wHOI3qkU75owiGEZZ4megZS/6VeZcUF
hKV+Ghfep5TxUFaM/HZqB9v94g8lvQB64j2fQ5HxofKeOdeHkOiQQTiFcCzh
MMK+jIkvwwjHEkaY4ybMIJxC2J0ezHbTTy5X5J34K53yc73u6MTlMN28qd3R
9P6RoY+XtoYByhoP/AydIT803mKPUIj0vB4WPUsYfJRB+d2dI2S9yGEBYdaD
YYR9GVM57ujA/eR2czuAYb9xmESY/aV8TgTxcQb7kHyzn/d/7dtzeq6H7Une
J+N1FrCD8jNfo74UwnzOnvexeZ85mtKjnb6E2c+VQjidyklzgwOpfn96H0L5
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
Bfqc5RvrbJZX0B9hNGE+Vx9NGPoU8zHO0QPzd8HI7hJ5o+8NiT2EcYf9CTtM
zq9ZscyPVwjDfkQ7MF+AXphPoD/4vADKAf3knBDhR1QP7BVa93m6ee/yP+C9
onzKkk/mz7OEwR+Yj8CfsPMw/6A/OF/C/4UDf0Nfg7+BSR+L/oV/Cut13o8E
P2P+hvxBHjEvYz6OIQw+TLT2SzDsYWCUL9/tJQz+QnrzuPw/1vERjP6hPgf1
J1CXbje1Yokqt3XVnonvFJVMUEOrhH4zzWOzbhdVpWfpXYHas82VrxMP31IN
QmqNVKvC9eDdn17/vd4lTViVir2VqHctMeX7SjtXD7G9fCX4IsdLuuWr6ixt
9tktxrqhbca1Ru1tenG1147Nyjmgf2wYWv+VujZ94NSgo623e+vmEY//Tfxs
r574dzvPuT9d07Wn/n6z0uRdyoQ6p89n37Rsn6h6jDqe2jTnOMcrild3xvTZ
+uHYu3pn+PaOI23XuX5F9XN6dXtHmybD/GzW8XlC37EPn7t2sBXONYdox8cr
R+zuCP0k2MQ71O43io84HXFYbRy5fsjis+A/bxnH+vnNpg5cc0UPuJa9Y3wz
jKO/7jIs4vvRy6B3fHX1Ucti127fo9ASKk+377f+3Lhfk91hrk9RfSr794yl
549KfUrdcIQHn7bpmO/fbDNk8DzmJ3V60uEdzTolqE0fVxwyuO92xrrL433B
NxclqbZJX60aO/aY9Cuu8qNZt3bf1jual/t42BcOVef4srDE60cYK6QvOaje
e98dv62oPOX9e5c+fU8u1/WcJ1a9seeyqv9v63np5aabevw4nvlXU3odmzJn
Wf6wbaS/vXTzd7ofWNbpqv6r9k6fzW+f1n7l+tpuv3JTVQ0r1el69ZM6Y8W0
B+vHue7pTfnopVEXxl9XE2csHDrT67gpJ0BR+YrKVyfXPbg59rnT+n5A2ncf
FbupqXxN5WsqXzcqd3BJ2N144Y+nT4Iakryt+I4DqzRh5k+9+O/pD/c1B797
K5JHRfF6ZOiU3q9HxquDN1d2GJgz3pTno8P7f+DvuzuA46FvVUb7jWObVTrB
WG2pusI37kGCKir3fWHQq4c1YfXB5va/zb4SrL9uOzvrhUU3NWHMF9rjtUrv
LCp9i7Fu0mPzxTFByapFTFbdgAoHGJv0KapkvfTBQ9psV2Nbb2tT7X3M114q
LqN6WJWPQ4TehDFfqJm25snb3ziqCXP5msrXJesF/9ujT4o6Omv+Mb1iji5W
vuv47o1TVOTMczm9Q9dxvKJ41bTc2gNfVgjRo975YMi5+gG6Xa+/Zr4xKEX4
geLV8SW+3wb+kKSG/FEYNf3wMU1YLQl+GF/u3U1qaOkunaf94qOXdhi6as+k
zSr21YEjk2wndTkPtfP70ztFv1B6RelNOpuu4XF71K2xR/S0ku3mvb4UduOT
8tddOuazcbfQI2f2kbP1q+xR9ZzNynRfskBRvOrY7mD9ijXu63LFTh0ZOucs
l6+ofDVxYd8Go1slq2Xfbhjd+85hte1qyIBx7Wer3z7/KbtC0wuasLqcO+9h
2/VX9dPwtuiJ+Tm7T77S5ra+9eamqu8pCdXgqwPrLRjkr3e22H138i7MDwH6
+MxK2ZM33VZNhvQ8NODzC/rmdu9ee47e4vIVla+ofE3l6d9yXt3Q9PRZfWlO
7uG4rTdF/q42X9hxuVeAahzyS4+crYF648By375++pY+sajD9LEtg/SYt+bl
2Sbe0qdiX9+U8/UO0Vug6+LgqpODhp80OELPce4M8z9wQZf7JGN2uTL3dZdS
117p2vSsbrAhb9erT+j/+ZKqw89NO6N3VpoWdzxjtxq98fXRdZot1M4rzpIt
wncr+6KoV8YfWabr//5RrdRvL+iQWf62chtu6XKVupXKS79owlt6y28hz08b
4q+/mvt+4Zztt/WRgW33tt1ww4RP+m9feOWNrTZp5+76L2f0PmrThSvntm87
+k+1c9BnP326y6bX/zz6/b8XrFJjfr1WfZIN55jy9A/lGzy8UNwhuMXwmhPr
nXN9J2xu5JJKrw/EOgL3Rov0ml2LLvZrBns2S786a9nw9j6ue5+3st7a/ubV
XN1bPco9eYj//5enM4/0aJa4JlMfP98jrdxh1O86t3Hm4Qe9X3jdtQ5cfXpM
xU1LXfc47Wvvlau2Qf7np4d0rTTW++MkvXDtwy+VL9YvDr2rVardf0GuYNQ/
/MbgS8sPus6RfzU3pnSPD+P1+81fP/T9bw5ph4lXf4d4HZxQF+vhQN12TqeB
IztEavvWviXbzp0m7w90L/wh8BT/b8+uw1fU6ZbY8pauWazEh0H/oFzXk9S2
S7sfBoKfHSrjQO4/m3YE6CO3X7r91h4pX1H5itor9cY2KPPcxbeDpN+/Hito
qodKvLpdYvLFar/YFdFLEb0UjQ/4QN0ddj7h4n+JUv7fjkHqh55ORePN/KaI
36S9SSMXvjhpUZa0b/77HT91BGQp4kep//mwxgeXNEH6PB36TYVZX0TmqaxX
DoXX6gY+K5L2/fRn4R9Fkt+h6h9M+ON+9Twp90XHoF0l4vLUuAeRST3G5mmE
ldMv3+1SzKEX5UWP3v6knnPn/U+Ne7Je2uL1Vi1/lacHzdmT1vGG04RZemBM
k5yVN4N0aN7CNiMnZenO83Z3r3QKoVPfW9dy86/9HTo5YMPtM/Wc+nxEwx7R
ax+pT2oHHa76vUOfqezdr2V2nv612fA9E5Oi9PxXz81d2sxhQrv+ZfBXnTuM
fKTm7/A6dXa9XX/89ot9P4kJlDDhbmvPMavs2n52fcmlB5brUh4zy1/3+k57
PH/w3vQdt5WuHltuX4VbEvYet+yj1oGPTJigjixaHVfKO1eNeKvBjdeGJyi/
ktOik4sXqnmv5PjdK5mm/jv/10tVbkUq30Zbn5t3NFNterCubYs7uSbMVOEn
TnhViUKYq3y+ap6/elCasjX6Z3q3+oUqd3y/GqUbpmiETXs3bH4qxEe9d/3y
u2sqx+iMyi89770iXbdcee+ROhyuf7697Is1PVJ04qZaRxtuDNM79wW3enWd
r26wd3X0r0fv6Yihjo3er5xTzSv+9l5Kh3v6woppXrVrxaiZYaX0sVPhuljV
0rmbuqWoEpPr26Y1vKD/rZhSc/u+dJ33lfeCpQdD1apxvbZsGpii6z70+qTN
oTBF5avt+kTB3OrndeKhA7/X+OueovoU1afalMi86VQx2oSK+sf9VzMn9XPc
OxCr2125W7r8nnR9ytbwfJu9sWro2IoPq/XP0JUcr73YauY/hk9j9dDrQ976
ux70B9bLsfriH8O7V4q4JXoo79c5N7pm3tNTezX78cvDtyR9lV1VYxq1Dpd0
eF8/avLuEfGB+n2bd+JXIel6Z7WpRzyGXRD9NWLr0QZdr5/W9c6Veb3q3657
QA3++Dnh46jzZF871Ifb2sxoUues3v3iuO/n14De8NVBy0/0HZCUr6b/0O2b
7gd89X7vuS2npuSrSy8NWbvi6nm9d9tnda5dTdebW62fs3z6Wem36Z+i9rvW
b0/bL/VU3ZHVpfVpYKe613DBZ9/0vKCoPWJ/RsbU7PjiiwGK2qOovQr08Jjc
M6Jt+zBF46GI3kivar/3ReMBP4Sr99+LmtvUM1/t2zCnYrBHqFp73HeLf+d8
5VX38ZQHsRFS/unGh6fOmx6rDr9S+6OQLmhvLPOLmt2hYnfnwxh9ccuCd/Me
pSvb2cWO+Ife+lbyX2P/LZOtxtbxm+J96bCa98nCkh9XyRZ6NbhwqfKSTNe9
y2rN0j6am5mlR6zscrj0RP6vQYoa4jw/NqJjmuSv239eZMWsTEX5Ea+Gllm/
6FqPLB4PTfRmfhI+ivzjzuTdPWMV8b/a/mLZD/LrR+sur1cZnvFFiG6anF6r
VIs0te2LJW+39z2sy7+9ZVDE/jjlPXvaxtWfX1N1jjZO7HwyVX3dpOWQ2JrX
lIfzyrz6v8WrYtUnOneWvq/2V8l9XCk0Tj8No/RHtb1LnP3ojv6nXNhzkf/E
6UWX1rddODRJvzWv2YxKp2w6t+V7dTxrpOnXFh4+9N/ZO/qPW8Mu1iiZpp/f
eGZOh7Ih+nHb/icjkvbo6oPe2LP9ok3X+3dQ8rDu/vqNmfuzD74bol+aV9gz
7qBNv142d/P1Ydd04l+3PtvV+bBqkPbNmMMTD3D79ZpqbWcvXB6lJiZGNfGv
s0e/Ehmxa8C1KLXglboXuh4/rHd/saFGvzfSlNd3E/7s1d9fU3+5PkX1KSpf
UfkqvfuDvr0bxitn9fcvJlU+oFK3+iX2nZamPgg6/u2FrrsV0V8RfRTRR92P
iZnSo8EdbUL1x/G2w77Uierxyj86dZhlU03fbxFw+vskNWrA+LU/37apCr06
/tbD55ouTB77dcoy+Amj9aG+r0Z5+GFfNl7Nr9ns2v35Z3Xbunee+7lblPBR
6TZlP+j8AH5Mb01YNQlLGF0vxKm/fqFwaPe5e8X+WLXxxzqlWt9Qx8o3T//9
JTnnpKg+5ic9N2L+qX/bHlRbTnxzUC+5qsfO+OtQsW+uqtolHnkVfXxYD1lV
97/31lxVY/vvLNo89CBjdev67SaN+4eopXtmff3LgCf0Ht/xSkB8iP776oMN
6xbGKeJP1g864PKlx80C43XTVq2fu94oSi1tGLhgZHicfhq6/jNXMD5z46GV
MZror4n+uudLkXGtFtxVT8MHT8rp+8M7xeL1fxVujj6VekjvyprqjPGI1612
3J79dklvjlcUz/1jeimSFzVp2sIprW5FSEjjz/xh4tOU41HLwTM+fKidkXW7
fV0f6wr4rzw87j78Prvs1qva+3rs5tLdv5P4xhEjO3/+L+YN1/1dU57qmTRj
dexbV9XK3zbXzr8SpXOLKr5efG6+up/51ecvlw/VdatN2PbfyCTdp3V05/9u
2FRcwzLOQFuqfhomCh96VunxT+LDWO27cmDQj+/w/56ceut27+5zhl5X1H5F
7VX7sjND9iU7df/khD0D70WpVtNbr5h7z6kXlJwXntUrWu0Y0WNu6f5J+mmY
pkat23Rk8KwHevDOXfsHDM9UL5VZ9uad/jnqjco1m+zcl6JPnozNG9wgX0VE
Lo/58bhNPzzUq9Qnwwp00e9zP3k16aI+0e2vqtXGFGivjtPeq9b2FGNF6UUO
69916Jeq4vxfoP76VJflk3fF6dhrk+sX/yJP+PdpGKJn/L5q1YYDrvXQisJz
hw+cu69tZYqNSN0G/75N7y9Vc4fHWezHBOpDrzuX658LhJ5+wxO7lznsuqdS
rHtw2+2F+YKvrz1yyPY95m/4g6V+ReWrpIm9qj1qgv0ZuxrdfbZH3EzM9yFS
7vJeNf6ruChEddq/5MIPpRagXNWyWdjiOm/L939MmKRt5T4fGL03Ta2/1Guq
95Ac/TQs0IUnmhTVvRymderLM7s2LtDljnefP/hCqD67fMywPT0L9LFtjd68
N+6K/iWrdkzBzQJda4fXLz/f8NYHs1ft7pJZoOt4df9tywpv9W/tIY7LOQV6
fNOrW148dEUtjm/RNOpuge7cr06bDT+GqkdJx52VRhbotWN6HVb/hal33+qX
clsV6L7xnuc/2BSt6k1q91Wlnvl6Wu89OZ8MLDBhjt4a3jTvZrFUHTSmclG8
Z44m+0MPWRg73DfvgN54P6+o5avZusbJke1mDMvRHcbe8Cw4naLHvH6k045Q
p64T/s/k432i9TcLmqjtZ/L1b8GNi497LVx/OLBtsZ9TtujKzcK+mnDxrl42
fuCJYonHtK3W6OX6crDu/tG0wjaTovXo0+H3H607qscWjVq3dl20rtZy/A+/
fLdTz37um7dGHkpTX/ZqN2Zbyipd2e/DxDaLtuj8Hkfnem+4oWqPySh1PyRf
r/K+VmtM33uK2qfmz184JcQjVcIE+0HVYHa+CdPV+hpxuYcysiU8FTO7ZNkp
0fpB+oXiJVvnKxo/ReOlaHwUjYci+qsSL8w7pTelmzCf9YvuvvTVmu06xql1
M6Y9+vfBcdX6+V8mFf55Q6X/XrNW+2pRrL9UzgTP8k0axevCFu3mr6uYrs8O
Gtp5ztgHulGFNa9tGZKp11+dsvV23zBd+dbXFV9OztTtTy55N/zT67rSiw3v
P38yS4d3mljea+EVfabL4udWBmXphbvqfPvRW/uV3+n4ju++DXkX/4BODXlv
9F+joe/Sdc/sY7NqPn72OzVjevV5P2Kbax/x33I+E+eNcJ0H/OeXa4sHRETr
8X/br93og/WATfctuW/Du7HQI/6ibx50abtkQ+odTfKqD+90PG+fFC7pSV5F
L1Ttc+NS0Mog/eXg1y7fGXSB5odY1XjoC502H/LTQ+fVjYjagHb6atIvYr88
/2nree/4amn3kN1H121864LeWufchdVx8Av76hVh3ZNG97osOK1g7AdN7/M9
mBT10rHnH9eKPqk7FVwadS0O/m1v7czf07F3tmv/i9IrileUX717sukrp/yg
rzw8dnyzvf61C/mq7hu1Rn5W9pZuVtajz+on+vRivav/ndzZm/uviL6K+qeo
f1Kvobcieivqv6wLDP0VtUdReyXfx3VLLeh1KFr9++/GR68fyVcln/+rvfdH
sPOE32QdZPx/quG8D1+r9r7rO0PFK5TPK7kozYRJLE+q5N7OfeevjVKP9w4N
Pd0kU8W/uDYxsEa0ynw+YLLj1UzVPrzf+e8OP/u/Nr/0dt8/+iNZncq88dzM
ponKlj9yllrvVMdqvxoSVvu6/qxwRlzHM1mK5E+RvlVdy//yw4wO+9WXPY+V
j62araaVCKkU3s1f9Z4ZZ5uTk6VO7VpWavnlqyq3abn2R/KwXhN/qypaH/R9
h33BSn+XFR64N0sdnOKzwHPEKTOe8r1o3W9J+uQ+3eJ03Qo/zzqfnC/8SVhR
ei5P0jXa/HW57a9lqz6/9otouRH84Tpv/MkRn9Ej5mWoklFHz1caDn7AelTk
SZF+UGQ/sD3M/hv9XqdPD/ccH63DT/v08F4So2NqNWpYaWusunGhTNUZkTv0
INvANre2p6jSCwr3Xl23Ut8r2aRG9L5LCuGDwV/WWZt2UdXaseXe969dVjWH
/FdDTUpQU1Y8N6V4k4tq457BhQsvpahJO0enNil7Qy0dX/2LnCfyZ6+mu7/e
NFLdvlLTY17XVLV5USePsqsi1ZlipXeO3R+pa84s2O+/J1Z3rtvUp9+WB3pb
+cpD9wbG6m56p8fE4DS95vfuxWK3B2kqT1N5erbtYfWm/SL1C6d0+1G7/XSz
AYOif6ofqY9v+C2iRsuNek1d56gW7zzBn8/69FKNLZrarz/741jlK19GKfuJ
cXtav7dSV1kyo2nlc06V3WKDfeKppXrV9qzkiB5OdfTE8Xa9y53RBya92vDV
CU51rVXJqOdeO8n5Vb+6q2MmLY5Xv9S7PHH6rWWK6K1oPldEf0X1K6pfUf2K
6KX+ftin156hySqt3eCvDnR+wPRWRG/V847HwJrVg9W3X/zb+4y+ZPgpTl3L
WLzqjO2wJqwubNmeX2kj9AfuBzvVl+1Tuq4dfkz7HK67pHjydh07oszVnodj
9YXjFd5+eUao/uPHBm0rFQTon0qW/SrYcVqdLD6v0Q+Tb+qg515rPGDWP2pw
9ZpX6o2/pKk9+nGFBaf3nHDtd1L9iupX+a8ltQob+UiVTHvj8nvr7aqqR//u
eXGhuqzn3neLJsax/tTOCnMje6yA3sQ8F6La7GidsGdcpN69o+fP9RuEiVwa
+dUDhv4XFpgYrb74PL3MF6tkXa/IHuDx0GXHtx3e6PY9lbHkwubAD2zMr4r4
VRH9FNFLET3V40EJNx53dqqCw7fWFC6KVQH+06bsbe5Uo8aWemXf8jiVVWPY
gugn8RXPdkpsNTFGXUj4sc/ksa7/qZ2J6Zy171Ocg/fwaHbnZMLcC3nqh53j
bpeeHaU/3V/tuybz89SEXRebrEuO1kdbNng4Jz+P6JevKgw9N9y56aE+XWeP
ffljrP8K9OPbjrsvyfkr1//ArkyM+uCSxr0ou35cNjz03h6cj3oyjnkjfjzp
98R+j/7qHZ8U+S6Y2AP7Er5Y99LtQk32pf5o3ujNFxqkqn86HL9tX/3ELq7g
LJn7VY56Ghbo/r/crLZgUIF6Gsr3cbVzQfM+o0Zn655/z0zcJv9/RHyGntPx
pbVnTru+S2f8hcivAuzfFFuxMluPeDFrQotY+X+PJntbf7j9+zZpKRnKhDos
qsLpi7/zOfcCbS+e5fHqbeAs/WXZbj9O3pyuV3R3LPp2v3zPVtN6WRdNeGNU
4Igo/a/PS01HHcnQR3y32w90wzhlsr9U6Gn8pahPTZxXPWLasXT9b42tnatc
cP3Pi9YTOu+f28d/7ij/e9JLKqx8yXu16/9dKXXeutpwnuv/XEtfvZubujRP
5KrjrmY36pVBO+L1g/jPh29uJOtVsbsbnuk4ZOXnUZrsGV247cUOG94H/QK1
o3GTT3dU2abafBe/e+W3EXqoDlq133lFHXzo6Dpgyh2hs/FX6OQvwttOvYfz
lwG6xCm1tvNeuy4f++/wynuu64bffT1g/RGc4/Tw2D++cMyG5E2qwtjNiyY9
uKFnDrwxpfpZjLeHB7VHbby77ceBf2/Xn89dUO7u2CBF7TH58lS11LQ/34yN
U+RfUH2TXu32/dx8/TTEOckiXar3/PT+PZIU0VutWPtwy7iurv9vEf0hR2pV
zQ41PC471d6QRlPej8zQJlSfvZ8bE5GSrU2oaP0j64wzj6amp36WpYg/1P4D
M6/si3j2/1o/D95ZfLAtU9F6XNF6XM2eNaFL01Xp+mmYr0ie2N8gfJfTYY73
m14FivSP8J3RNwp8kt+gV9fu2wtk3H7PXvzdiQLgQDVjwqg7i70LFOkfoet7
QYsPX9lXoH7p98VXn7TGeqRI6Gz0E9urmuxvffDob6mZL+eqId9nRyS8maQr
2o5s+PpcvFrUNrhpfN3tmuwLvXFw5wUjUzMUwmpfDQ6aOixCL2l0wHG2YZye
/s3h4ctnhOuLPXbdbt4+TttCpjdaU/qEGjHy1cqL2sbojg9X317xHs7Rue7n
ze23uZZ62/V/p25V6z6/arz8D0JdqN9+/tYx4Tr1vfLTbO3jVETPOjk+syN0
/Y8fpX4dEqt2/13jndYDI/SUtMLKU1rE6ehTj360R/nptlP/ajLhxzhd8q3I
xh/3uaiXrF795a7tEbpagwbnenx2WZO9qauUzp4wrOs5Wv8lqW6l33/u9EIf
wdPfKFkr5uB5wUkn7CtefHxJt13y+ql+4UkqbeoG/x3XcT5N1q+K1tuK2qOo
ftXlzdgtRTmX1ZIP/Tvkp55R1B5F7VGpu/pdT41MUkc396l7ctol9TCgbd1z
F6HP5PuGusfk8um935P/QYH+0u+Pv/iplvfMUNUv//FM24xjet8sD/tfdtwf
kfFQ6vWgqOU3o9XMd7deqv1PuCL7n/lDEX+Y8gr1z+d/+rh0pwL9Q7XU12t3
LZD3JlSLIj8aP7GL63v1Pf9un/nw7XR95YvdeTlfndRXs5KqFysfpy969xjX
4pGPrhSaWCahapyu/uC7f9fMuG/CO8J3PbbfqXN/8V39ju/bBW9cjlAm1Knp
awa8Heb6L3yJBfVe3JaHezC+ukmkGnH/jQQ1smyxyHd6n9RTrn8a1+F8uvDt
nKrb2/45+b5+GkK/Sn1qVZneb4zMc6i+zTv2Xxl1Sdnj13/6T4lENWvEyqjl
iZcUla8ev1ViYd3Z8p0DEyaojqueb73x0wsqavIbM3p/9EjNvtM/q9MDP0Xz
j/CRkSf10c+fJL+Tdln32BjY6u9pcapW/dX11824qHMnRxxbNzxOBZ38889j
u+1qy7gyZX7oHa5K1vNOP9Q/SmXs21zFq1+4ov0N8BPsV0X2q+qywXv01ffz
VfUJF/dWPWRTLf6Z9GfYu7lq6bVKmT2OJCrSP8wPivhB1fggpWyVzvyfVV/V
4M2NGQ3LZWvfoudXxPzI37VKUh/WnPRDwkdOdXPm+J9+beXyG1B5Uo/hN1X2
dHz7Y9NjdNyCD6eveSFIlz7/7rr33ojRFaZ3/7BnPdx3EnnSSz/cs39vr1AJ
W/Xu8Oeyvnf1lYNnp47dH6ozwqpGl38OYTDzj/5sT6sKl3c49aKVe7/tPfS0
frvdb6knTqZrlTduS8dyy3WZpKpzapxK11van5v9wTu7mF9Vavu/S9h/cOpR
r3St79HzkrpSe+FL0zo7dUDQpn3vBVxWh2rtGvlycLqeWrVlg2+X3lIXW3t0
WXA/XWe8+a/eUeuackz1P7JnwSn9Z1T3FW9sdP3P6Z0So+JO/3VfU7zIyboW
v/l99G2Qfr0wZdH3cy7rX/94sWVAmyBN63W9P6X4yfcLHWrTevunW999ok9j
0rb2fyFReVT6teKBD310zS/f2rR3mV039fvxUt9my1XizOv5u/dE62qPe7Z8
u9kqRetvReUpKo/HT9H4KRoPtTLkwgfr/R7op2E401MT/TTRj8dP0fgpGj/R
v69VvT644ItIHXligUe7IwF63P1OHtWf4NgZtVdM+vSGLtv+p+adh0bqWl+3
73x+xyU9rudDW/UGkXrdS/ZfZozx05+XGH+mbfNITfKrSX718Pf3jQh+7dn/
J4X3zB224Gd/7TNh3KZLH7jGleYfme8mzSpdft53N3Wl4ee9hp54Qv+ZL8xY
9O5NHem1/fHifonq19nLcz7uc1P7Lojp/3KLZPVco8UDG9sD9P5TR74bfiZJ
9Xqz2cjfy93UpA816UNN+k2n3vh+6U+VV2g9/YXwnY3vqh6jWv434u6TeeDL
ysXH7A1U29592OHmpXS9YP30V5q94vquiNk/VDQ/KPIfqDWZo3YPfzlBPw2x
/2vTubqWrVixOH3v+rl9HqWwLo/TNL9qao+m9mCdoZr+WCakwUPckwhRRz4d
Nue/Msf08Vsvjbxxkv/HJPKl2s9bX87795t6+NkjObvaBanOfbZMLX7iuq61
J/BssSFBiuRPdQr4PGPZYT+p52nop0fvOrC6Vs4dRfUrql/0pxlvNXfK7VEV
myar8tFttg0LDFAbR9Wb8dXZJDV/2IDSf5S9yfysiF8V8avq067mzbkDI9VB
/eDD33aHq2GZC9bsvvrAhOEcryle1usNu4cMmfedy2/e853JM6JytujS/cb2
aPSK654ExSuKN6FD/XYv7fzAVy+JXi55evKZtXWD1YPUGQPbTTxg3gez/0OT
/0O3mNXiQp8zx4RfaL2naD2nlnZtvfC70w514W7Z2yMr3FQPhw6Y/XnvRDV9
0hdlPux0U615rqj4z8WD9dMwUpG+UKQvmH8V8a+M17Jq320IXfQk3nreUtZ7
n7Vasj2rcb7O67otccgU+IPz9M30JeGtP86XdLtajklYOBX3gbJELl7asyS+
0adZ+njPQeX6hsv6DH4ErM+gX7C/K+sos17Ub9UtCrs4Duty13/K6j/oOKaL
uqHHbrxwuOW8/8+5+RPFZ8+ukKAa1E7PTN9xQw+q+c3tuRPk/xS6+vwm9U8c
xfoO530fqdI9ZqRfVnZF/gKVVvFE+TXTxF+CdRn8JYr8I1h/wn+jNgfENP4n
GP+Fcf2fJ+XciL8jCzMV+X9UmS+br2jUHH4prO+K1Hdd/+r4XdN8FZ1T8FPv
OTfUp5/M2p5cLUp//+n1vwfXDFARyyZuXV0qStp5Ovbt+f+tiNK0nw764Xy2
ml6xbrOzics12lW889S4iJgQ/d/QDovKLY7T5N/UHv3XX8hekK6L9fvhhXuN
IjTNn5rWB5rWJ/pmC4eXrVmcbhrjNXviPT9F6zVF6ylVb1Wt+gee2EsD903o
2a3EXUX2lRp9eNTgcT1S9eoea3YsPZykvpwVXtStTKp+GiarOscvFczcVqAR
fpn/882CjYUmzNf7evt/UvsT2JW451qov5ja8J/65/N188INpwbsKFAm1LRf
pWm/SpO9rcne1nPOHrR9/CXGCevCKO0c8vyb3d4BfqKX3nqr1EtZMXqP3955
o++k6261B7Tp988V/Y3jpwWl5j77/x2zPtDrkqr2f+yXrscOqHGwnvdR1fax
bzPff2J1blbxex7jrqutAT18Pv8R9QSoFj9kNhqvI/T44Piv7L/fVLT+UZvW
bU4932mxalJ8RangMvcVtV9R+5neqn5gud37tuSbUOisQpfmPCjdpVCX+HR0
SJ/LuD9cyOdbuT98/lYRfRT5B1Rfj45TPyudoJ+GaLdNv/B2m25tL0Voml81
za967KVlr7w8NFnb/qz1diUf+T6RLtrRZcaKLuF6QF6N9z86Bn9zhD7gvX9r
43NJUs/TMFmPKiy+eOr4+7p2t2Hpdz5L12PuzG/lHRapfau+eW96YZBuFx1f
Z/bzkZr0vSZ/Op/P1iQfusrdSe3fVrAjXP8DenFeTHhaJvTkE7266v2irc3j
1QvXanzicPlDxf5fdHFljxtDbqti64fO7nwzXpUYNbFM5WY3FOlXmT/HlvR1
nvgnQC37t2h7jW7p+myJl8dMvROpRudvPLhlp1Pfyfh4WIfuMer+ss0bDvyY
q5+GmEf8dJ+bjdZ4Z91TZ7utWP71tusqcsdn17x7Y99E/BOQD73g3NhHqX1t
+oOqS7bue0v+h6nIH61of0HR/oKark8vWewRrp+Gd/XXZ175tuXOByYM4vnC
1CPzhcjRutm/Nh48AfSW8xRCT3O+S2XMGTGy/QPXf7HJ/6jJH6rJH6sfbuxW
bFRinv7Eb9TjRg2i9YTq8ztc+tWus/KGXb0xezfzkypYVFnP+ThQPw0jVdfn
9tcf8XKh+rFw186PElLV4m9u+yZWtqlh7wUs6ZSfqWg/Q9H+hWrW48OXPwtO
UXFh8VPvry5UtN+hfl/rOPx13CWtPs8K8864p8gfKHqre3pI1LTkB/pK5ugl
nh1wjh77QilqYK/kyIq7Huh5H3sOKr0B6/dI/clX3cpMmHBC6Gz4W0VU3XPV
Xg3n4XzVX2tbXOyXd03vbzN64MqP4F8L0I0W7Z1w7m/wO75X6dReEx9umz3f
Vz+KnjmldH+bxI/5Vjf7stpRGUfw+zezBz/4ctpxvbz5qKmpLRJEzko0nnr7
3iOHYKpPUX0mXYROaXZjzO+3cP4iTG86WW7K1pPX1bvNP983s/Y94bP4OqXm
HCoBOQhWRA+x4w091PwfR+/o/ALoFyB0yJx189ziaq7/E5n1viL6K6K/0N2c
T+TxVDSeXD/TV9F5LH1u97Qma3K36Uo/j4vP+N3G59E06SP9uF/3P5sOiVcv
778e32DFdb21yprZe96M17WvT2i5dv0W1bj1i718u+SrNq/c1//aIrQzZvVr
fw3JV3rJkM7Vx4bzfRpF9o3Ivblvp2h/S73ao97HJbzlf6RiZ6VMbD5w4B8Z
Qi9zfwvrF9xf0KC/Oc+vr6151HVaCNaXgXrztrJVZt/l/0SF6IZTlgw6mBKs
163OS2g8Mpb4M15F339dbamwQ0/ZOv2H3v9Ar3tpVf/HuPIR/F9iSa8oXlF+
Re0T+pj7L2pa2fqVfq4J+viov4/U+CwsCP4F+U6ZDl14cuPjsvCHSH9kPjH3
YxTJlyL5Ugk9P3pv6qdoH8pPUL9tuv1BsV/2Cu65+PbJ0htcesPc/xG+DF0z
cfDX74So+Y5WS0p3StOdJm+8Ordmod5c+ZUrn5RP1Ycn5m2I/LlQXx1fGBMV
lmnCXP24S8Pf7IEIMzXdN9ET6/rbZpUu1LF9lp4qXjFNL108btiG2oX6YXT1
TlePpWr/n5efP1vlvJ64cXujRvPu6Ws1P/H+utcx3ePXRysSkkP1n0u2V2lV
a7nO63J9S5Oa/09Z3x3P5Rc9rr1LQokG7UGloelUor0TbU0VKe1SUimjSakP
SYpKKETIOqiQvffmbY+3vUo/35/nPn7f8/vrvO77ed733ufce88+56bgNut+
q9Z7B6KrdZDbGct4zJy5ZPCxD4HoveFxb+tTSTTfAcavG9Wa1rcaCn2qBkzv
qIKB/keyvYMaOSiEFQFTRmvkMdgI199n/CybWQaBibpHLkq0wnar8qAr+2ux
G5bi0TfH/Gqs4+HrVsUDLZvykeTHocf6MKWwpWUczKf/Z+vL8i15OTJnI6o6
d2agmu7x2/p92H7OxMVFIO7gwPZbOpZZrPvotauWnIda7H24/xT/5nj+98Vv
vDOHiLH7aPj15eWEO4Yup6sXJ2GNwVbVhpmu3HiJOFz57POgRcmwpDVge3um
O5L9y/Mpbv9i8vGTKx0msHxxZnf5CRuVpnRezA+l/dH9ysvv3P7k29z+pd8L
5Ht5PHkrV4fqRbD6Z/z4QL6Pp+8qFWFZ0QUhQPALJD8TzJLzOi7tTcTcwQNv
HznF9Fd+vYCsF88PTovkXz7qlIYyPqN1mvN4exSPp9xzBQGfmpl9jJ8PxSfY
jFdKsA8UwM09i79GvTRCraVjdrWnCqB144C7G/JsUKnNMCPFphSyijuOa+iE
gqbv6MA9XfuqGxbDQN9dxbOj87F1rYt00vxi+hzJcxTVvFr1aVE2TnQXpu88
E0z7x4xHqZ5bRwnhl56X3U2bYGxrfHgs2rQEvENCs0uiH9H5ApkvkP/DuTnf
PvQ3q8XgwGSbsZNj8bfuw8kLXtVi9qbYM3OexWB9cd2fgoxA/HH/h5GJGS9f
svxkTH1tb/VjH+PrBWixbO/Lmik34YqXQs7GpcWoeF4jRN45D8MjDvTzcQqi
4wEZD+a/0Mp8pV7Fr0s3rMavy0f8qhlfSfNVkciDSOgHknxXJPQG0y7vLarL
TkPv16lXl7c0oGfgO/mjrxLhjNvJqPQPjahy7VL45A2p4PZWLvbymUYk+bRI
6BmuH3Mv5efMcpjyMPT0ESshkvxcJPIvlnR+urVFU4hRf3f+s3Xv0pPDrmwL
kBbiyPOih0wiBFjuPuhp5ah8TDg8amLaNOav5vMbcaGO3bf/VvsSeuSL652m
r3rYGIc7G3qNCxwrxFc2I8rKUiLQcImh+myIgMUogzNfHMKl821HgmgEzDsx
/sIAwzf0OZDnQOQBIPnQQPQDIPFTHGyDP+Oa/Dfb5IF1yJ9NCREtOP9um/U7
i1I4O+dfiG07y08vAcK/gPAvIPnbQPghkPxvIPwTyPoDySen/BgIPwZLcXmn
6W8Y7MlD4fLjccC9plcb3Pj4YQ5vNdCaNOOe7rVKtNt3aeg3s2byvAVOFNXE
F21genwEjP6ccWmWQwGW/ucaGfaN0UsREZL/R+kB//8mh+9TNRMSodPuhNXn
278JPU7GQ4cbHn90zYErAZlBURLMz8jXd8VVU9tffO6XA2S+QObLtSNwv1mv
qbXTknFL8qHinb7hmCERPyx1UjKeHrbhZpN5ON9vtsZmxS8SHnzbYYBD8cb5
rB9fnFB58MPJbcxu6Av/fV9jLG/K2kzeEuDpshFz+uaGAekPyHhA+odwuQrt
seqsP+avKMJTxwZnyRxMpN8DjyNqLL//+8C9nwrXh+w2vBbG7Hbt6OJ9I0go
28FB/nfI01byd4psR7Jf2Powezgahz1UKbZM52A8iu3Ruda4muXfsvOdi8sl
Bi/K3czki2z0Kxr+e+yQJJTQ1/HQUWbyQiJOr731sfwvX6caHfpum/bSgfcD
cTATfUasmvxQLxntxn38UqXqCSfDP80ySGDjZcO62XeX7N+UiWYLi9y9+jE/
bSaaim2LuBPL9mOXPptVPl1JNQlEdD86ZIsH4jG3d3ZWT5NAf/Wle58Cv2OY
m1q/ua9KIfl2ZMqtqZ5YZ7w/u3NhCVxOlx43aFsQ7Q+Kgy1sXwuK0KLP2vOX
X8QB6R9I/0DmD6R/IOMDiVeFEtPI8CvhLA6SxQG04A/bQr/XMW0gMXpWQMzr
DuyGbZAaPsv22lsGO0BjwImApV3r2g078IH3GRPvye3QDTswZ0fwkTnzK6Eb
1tL3wem19vIjSrw/lNdXms615bW9/QVPApL+m99ZgDeKX4fZ1iHMUZmiYbs9
Hw2kZn4vfPgVDizCzb3k81Fyc3/LppfedH8j2d9M/0KX+0stP/oXoJR06lNx
2zxUXOQqO2NxHL+/jm259CCpPBI6hRLhYbeYfBQNRF4B9n61lOdDqd+Z8OC+
qPGofex7MuHalfRa9+l5aGI6TXRrWjoIE38cNm7LxW6YDsR/BWR+cNj7XOjw
Xsze5o6qrbsmTciNw0k3nC1G1CbBulu/o9I+BeP+ldJjxV2SwFwl/Gt96Q/8
9fbonraGJNCboLhhbFlc136XmjKsMQ0IfWLzZ/sdyH4HpStNflmTSvD2K//r
OdX6UKdhJTtkXAlW9VKPeXXQFgi/haIZBh37ipn9pRBmpSVLTT7azp8X0oYB
S/5e0/rO2an/n3qWxsdFF+UFd6D+JJ8VKWo1MP67hbH6+TwcfPD56op38SAR
MP1esupvHC77KVHhJJPTIjHujuMj85VsH4mIkP+DsuHFxcWN6fB0wrjhS1Zw
8nXXuGqq8/+eDegA5Q/r9fL8Wd1nxt9KYPZZvV6zOxgfsUffJKOGyN3ZQPLr
gdhTeH6TZD16zjwbARbErLZJvVTH77PuceowLi4j11UlC8l+QbJfsDCvyeGk
XiGK/fsyQfWCJ5inBc1+c7QQ3VQG2fQv8oKN6wdHnIhg9WEZ3efzU5Dkp6BA
7axmWHIBB4tQ+fDPz0ukXUBcLdvG06MILTdJ3bqo8haUdIb7RlQW4dz1p2vU
fhfjqqzdasWZESC1vMF+mV86zr9asurKxd9gtUI9SN4sHbthPDi5K4sOPqWO
b+7kVcqnhMOG2Son54+7hFsbDio+cMkCMj6Pb85/D2S/o49+wOGK+GDohiy+
ohSWmGxtvn0vij/3HH9Hwt+RzAcDnQeWyTz5iu+cOx7o+8bC6W3JK0Yk+ODC
6RV2JmVxQORVIPIqkPUEsp6g9s/t0ODVrfCw8xCKG/fUoU85effTktcZaJ4b
snJCLbPDZiB5DuQ5SJfsvro2PBwbHiar7JdJBzJ/JPPH8E0Gvn+XR+CxDyuy
Dcenw9y1eaP2/4zCk/tFmxPGpYOetuW524vZPmd2wkR8e/2iQUufXMr/kawf
HpY8P21tZzq+KX+U7tsrBfs1ZF+9EVQJd6/pLVfO68Aza/8JBmwrx6zHnVEj
7HOxUKVi6D4lRzT2OWInfo3xc3tc41+mYDY2gdYHwuywLD3Zp0xvZec8EV09
wgXj38RDwQ3PbU7S/P0fUDro2euhLS2gWJXxs2RkCZzabzJp6+cOSPIdvtZu
byUUDhuv8vdPCdT1f/LW0LDnXmUu3hEmKRZ0vNnM7F11MPXBSqcNOQ0c7Il7
5uLnwfvKcQOrJ438+zKXz7SMca7E4f7eBkNTOqCPR4nOyF55uMq1be+aYIbn
Yuxt4bQ1vbTH7/2fYmBOWt82JPo/ahnKGmWXCzH4z2qR70nMn1beJZ+KaS+a
lId62RER7b977ski+cMUf/z6cvij/weS7wzi8Rv9cnXbcOvKOeXXPRlfSEdz
96BaxeVMXgjG0U+un9ySzbfBxHL6+yuFrJ0O2gMuHbi6uR0yLJ4sipnK4myZ
HlcJB1Ycvj8oL4Bvq/30U5ul/QPJ+0Dehx0S41a8XV0J3s4Phhg0hUL/2OkX
st5UwujFDtFnbrF8f96fj4S+4yL1TwoakzqgG7ZjzrxpBtNUWZwi75+GWW+m
RUwMaUP9rMD1Ix2FWORt8ExuXRE2n9prduNkOgf5+/KwYVjcOXPzbAwUGvnP
m12A1wp6XTmqmYr6KJzxUjkCfQ+1Pt84IR13XHz60uV3OjqUTZyj8ew3Ev8w
Ev8D3z/nr0Dir+D1JC7fH+Ut+8RnqufjSQsZo9QvX7Fwu1jgxi55avgTy7ID
9YjEfoxTF4jbOP5l+ywY+x+1C92SEwzdMIJfX87fA8TfA+OOOswIUSjAZWFq
O+8cYPHMBThJvkx3znvW5uNdKP+HhNUagYFd+kQ3bAcSL8CtGx8vACQ+hufb
nPzA1pH5v4H4v2n8By+HcPIALkrrr3lRrp2DPXELG3Pl1MpUOvCLmqp0eDCT
W/6/9/nzIdVgM7H5FTuHhThS6tL9d97JuHqDSpRgL8N3j96ysJfMrpl9EjHZ
YtmAh+0pOFvvZ+uFfonon15+8uv7ZA4m4rTfbkqz/Xvqe7+Mr5b74sz8p8zf
UA1++v521zwiYX+Soqno+Wo4uzlq4uoIJs9U4LvABOG9wzmoG+8ZttyV5bnn
oqvLMPtfvlE4c2bbnNdd+uz0nZLjzj9+D8cj36nEerD9yMvLSORlOj6GLWtJ
l3di8rk9fBAddvPOf4Xo0KQwJ/3KB3i4U/j02rNCDF/cb4S10icg+RJAvo/n
BwpPZnXsfZAEL5TPqK1xS8TTIZbf/bcxfzCPTzjpqXN6WCl/HxkQ/MFoKb/f
Sl3tF3oHj93d5AW/UPXGvwAhavzZ97MljvklE2HWsnKttyt+QoZ7VrORXjWo
LKryXmH/AEmbX4cjNv0/1Nuze0h9cd+nv/eWDkgCgV3wvH+/yX1zPfozEPzD
/qdSnpH6D6C/9TwXGZ9fOGbu+mF+ryzwb8buINPo39x3PMW68l6Fpv/9xiyj
9RYFBxLAp9czuR/+7L6/BAitP1/6sS0cE8c4r8hscsboa1bnzFaz+EJ33GpS
FejSHAPTjk8xmCvH7Oax0Bnn6X//LsMXJ88YCbHlWZjBDtFiIPPh5YpTva0e
9TdtgJlB0mXem9PxsmibqmVVA0TWLusT45uJDR2xK+d/YXlG5dAonpmrJs/o
aR1OHiipIaFVACpJ/efojmDyVgG/Dzj/Amh1Hr864QvTo5g/sAQGu+jMUCiq
gwMzPL7J/inF7TrTptT2asUZL2+aTNwgQKuoIBXR94wf8/wNjU1zv6fMSkTZ
d1f0msx79BiO32HfbTpnxXtHosgLsfOB2PXcfKz4xkdfcFuyvebpxh49h+OH
+P7S8/UjKr/AZ4dN1zVb2rFa6b+x8u9/Q+821/17o9j7PL9EmcA4a6e9ibC2
9sJU5xfteK7gvn3l13xY9yRgjvmHNqy4ffVv9b4WnP1neL/J68rxpGnrpyky
LRgvWrdz4+IKJPoYEn6OZUYpz8G1ENtl3G3qTayQ1NNCi0HnznTerIEx1iJp
JXkfcU/47iN1PjUQOmPL6Y997tD6gFS+ofgGgm8QX+frcKIzH5uzJn2J7qLb
BJ9A8AUEH7x+w8lPQPADpD4mLJGpSHx7UQAywy+Vb/NrBa/+y+ynPCnGbliI
02+/2nrmcU9dr24owLIzpj8P7WTtTNQctUFaISALUyaf26A4vxqd1+c/P3Yi
FcVdlv5Y9oDef12NF+b3aRySy+h7DVYs+vDAaUKPPYrzJ+HUmjFadXI9caPc
+BA74vkKFddwVMyfMenmVwE+77VVqvxZIPe8BDcun7ZWbI47esesj9FJZ/P/
/+yJKPb3y50KjW9gZqixqsklFL8GWuufr2B07Sd2fsgIfmZUCKMiFNsOd7B4
9CJ4P0ui3cKWxb8VQmuD8rCIEi8st81qVFHouX9EYDKi0eN4NUyBG/ZP5P0R
tY94j7GugrYVozx/RTA7Rw04xJj3rn/qhSmzrhv89K/m/2+bGCdq2V7Jtzn8
gdZ+3cjpyq748LVd0tCL1XCkqtH2hL0/PL1lJ6Jzuwru/mnoqzmE3WvCvw8E
H0C+n5crk28/2Ov4HRn9AzfnS/nixWGgubrPpCU/ePwAwQ8wfFxxHlipLPMN
xqmqhB+fyeMDtAf3OixxqhiOp3YYOO8LA7GHgRJvo4r4/mY+Wr3Ctme9gaw3
bGyu2yP8yuzOwfz3vZJJFHyYwepc8vgEgk8g+xP+/DI2cTzI3x/D5s/kESDy
CKyau3Td7q/M/1GEZaf/td3/UgUyalOMVh00xrW37z75o8vGe4ow6cNOY5cq
vn1SIe/r/Ps/+O9dvHz37bJNoRwMA1IPFWRKt4WKmTB99yd6OdsdTBfNQ2vn
0NVbc0Pw+xVxr4P98/B87fSTgUNDMfniGquJT5j8ao/asj8qlWfl8u2kaxtG
ZKjmYsJFu0SVy/rUP4ebW7bem6Yj5PcboW9AvhfI9wH5fiD9wRfFPQa5a4SQ
N/PZt9LNAUDq44Jek5dzv/kJaDl4o3p7dDx4FYx+OmlMPG4aX3Y2uzQJltbL
bjtul4DdMAlWPkn3nrOVyT+ML6fi94ffXqrbxqDFroaQu5rJmLtb6kbrljgM
DumzzHhZCt6+O+DywCuxuLW3/IEAz0B8vnLj6FrdJOj95WcF9PVHo+Qt/YTK
SUDoPb+/hJHZ/rfuRgDBN5DxgYwPZHzQNHdQTRPLRw/xtQ++TEmHYZXVa+bL
lIN0apbZicXZdL2oPs2Ny9dPRlLfCgk/wRdSF87FrsuDE2EytvMTmZyfDQEy
R0wzRNvR1GnW5O/GtbAmWcJyf2gT3k+tKbb6ztaP1ZOpgdRJojmXtzejdIOC
7ovEBg4yOaQBhSUZm2r969FDYsRdj+mV0A1rkeTDodPRUU+fubXw38HwGCqW
cmKFJfNTuKO0rsmLTV1yh8neiYLFBnw+BJXXKP8Hwv8hcFiScU1uMp79seCt
vxKzUzTAl5fzOyvT60H5q5V7dlkjdkPm5+Lrp8OUy8nq8+NZHFULzFhw0GpN
JsNLM4+ny/LHf39Jagb40MfTMZrJ/4w/Z+NfJ6mBd/+0AakXB0S+AlIvDog8
BaReHBD5CUi9OCD2KKovIKn/iUR/QHIekZxHLFac/WzligrIPWl3okMiCB8v
vZ28/UsFnEse5Pi4S4LZLdi58uSwCvg6803v1Tq+OFlzR+XOeQGQ/fGzuGts
F1+xc2/bPT6Ag16genz19fb/yXc+3Swp+YfRzUqAa4vGBOz+ATZlcbKnxH+i
55AxZ6Oa0qj+gMS+hcSehUQ+ZvIDk4/RSHFRtE7CJYhMn+umqpGMM/SrcmeI
ZnAwBYh/DYh/jeuX96/x8vyqeikR1YoffLtS4dA2ywW+fNs6PyC47GZQFz31
etY0uwyK2uU9Zmz6AZ/DR/+c968cvo4/JBrehQ/ifwTib+LxUHN9bHj2/+On
5NogfTpH4otbPuo6XdLwDWL3SfP18IHkv0CBbF3UeTE+n497vwC1Z97d2Xkx
ArZ9eqoQaS7Ef6ebJA/sZPXT+HhPJP4XJP4aJP4aXFIbcVTWkPF1e4xUSnvU
ZhsIz89+kW5Y4oKqfgezLKcEweUHq9dnerF7anh88m0On3ybwz+KiI3pFXmw
DP6ehRa3QYGo+Ln5kpFXGVic+ubWxzEQA14esl6QUA5FgX8iHc2CcFx/8yUi
wnKQjHOb33nLFzckL2mWUywHzwPztpTpBeH48v13tjzLx6O+v04emv0AMl1E
1vW5ko8nVjfdinriBLPio8reXstHr96BD8fbfISYx/IqTV36hvMm2wVuocZA
4r95esH5d4H4d6l8AARfsLJQTEIvPAhasxK+jDe7AO9Nf7RomwSBldzwvDfj
bIDgEwg+geAHCH6A4AcIPoDgi6c3FpNsfxs4pkHGowvPwkfE47TzD3UXC9Mg
wSt+7333BOyGaeCmYJa9f3sSdsM0eFcTrrTYMBEPjlwcEX47DcTsJDvmCYRo
WHO4vG/sdZiT63FgQqEQEx5c0U0z+Y/uRyjakf734YMc/PXevUNqdDiHtxw8
n302b7Ih0y9y0fz9ztZUh1/4oY+Z3Poihu8wJOcRyXnEzSkFL7XKHuHuupUd
AV30YY1F1e3LI3/iQZ9BuKaF2V/CcNl1g7fLxJMheVzf9j2ZQrypegODvRzB
Nz3CSCKK6adcfEOwEN2C5Z7vdfwK40YM35gh+Q2X3Fj+eb0fi09wwunG0caL
nBLgz0x9VZu8nvvlCX6Q4AeJ/sf4MLt/AWtjEjbWClh/IiJuUQsbKxWykMHr
lY+Vaowz8b64fsRIgyxKz5HQcyT0nPILIPwBCP+g9cXhzpP0M5nij8B4mcXs
PaOzcPu6untHHz+Fe+KHFpcMzEJiH2J6A4ruM8xye5EEzpvvrLO6nY3dMBNv
tq0VG9vjr+b3h+W4acrrFrF2Cbh5rfEeW/QbV27bVLpKlMVTRiKxJ/LyEicv
0ngOYPuNi+eAeA3FcerA5K0i1Hr3oLNPj7+bp4ONceesR66LwqGpo9NfOD9D
Nv4Nx70JPwSMDkbz+8OiekXDbP9oUFffFBA9UIjOzv9dtR5ZAncvpKt6WLH4
zlJq70Ni70NSjxvJ/kUyPyDzAzbOzE951wY+igISPw9k/kjmj5FG5ul/tNs4
yOex4CP7k5EvM1vQYVBVf/fDQg721Jni6uWgxOnBVb5BLN+xS36+lyAW97gC
jUJPmmmvZf1VoFecY3+H86zN18/hzwFXP4dfR65+DpL6OJjSaVd7vUv/6YY9
eZxy58OPzOx6//bQSYOeNDL9pQNN7+X17fxVD92QnccGWB+kV2Rn3dWe+af8
1tom6IZM/m+CMf9+dhwx6sAKoz+vZixnsAmJPItEfsU0ybkDovl4MvZ7HVq0
v982374RZ5zN1PevSIfIV5ezvyxtxKR5V/eejOfzSXn9YcPq0Qf9Ohq69BJV
qQHCRuiGzbjW7862qXlMzm7B4KGpcqPKm6Eb9sjRSycOSDkV14jqzYEH+3m0
crAeh4qFFgy7wuMBWwrVU/asbeLXlft+POgpr7JAS4jKX3x+LPBohW5YjweG
avlfusriDxtwoOeBYerr26Ebdp2DPdND/l7qqavErQNMstj/6bxkDcKWsO9f
fTvQ0PbhheP6lWiTqXDd/ngrLvx2oHFlVDGel3AZcHAam18JVlUFKs1ew9d1
4/envK6YU55LAb6xz41rhFZYsSrwTfktln/B18NCEv+IRB9Gkp/Gn3Mu/wvj
qjxnTJv0CGKUX51XTIxB8TuPLq55aMb1F4umN67LrdtthYs102++cmb05ylu
6ftaf6ROPJD5A5k/EP81k1eZ/xXm2arumjc5GoZqj1QfOqgASHwwVMs9tfss
KYSpfnmhjonMXi0EDdW+Q5NvFsBU695XTHxq+fevnxLTqbNowsbEyamFk2qB
rD+vb3HrD9Gbn36v/8f0mgog6w1kvdm5Y+sNRJ/l9zlXjw40+/h2PrzLnxNQ
2Cx763tWHXbDBiDnidczuPMEZP+zc8H2PxD6xuOfo29wrleUWvaeWvQ1Oj6p
xrWnDl3xyMwdkueaQOd1cMDnR/y5AELfGF4YfQOi7/N44er7AdH/gdAnXn/m
6BOcsZQ8rru8g4NNUGChJPtFpQm7YQe/Xk9mQ0DolQ4g9RJ5/SNHJXd0smsb
EHsFe87qJcL+v+Zfys60cLANXJ0ORG4t5vHGwQgQqCYPedHSiLuuv2o8lV7D
48HCzft78NJa6IblWHX4nOGxUT14IvWD8JjZp63mWi0QIbbzjXhIGYoN/FCr
/JDP/wex3E6/R5djoUa2l+p5sxhQLIm4F/yLjz9Cki+Oe8zbdgYNreYgw8NP
zKxYc2xhUxqSfEYk9kJaz5b7P2+/xeqqm1IjVP2Ag0jsrehzoWbc/mNFMGWe
mukTvVAk8QNI4geQ2F+58Xj7K27u52DkcrwSjs8c02+/vD8dn8k1zH4OZHwg
9m4g/UHAgq0mX57z/gTuPd6fwLVTMWXBqSfaF1KB1Edi/aLfwvq8UwppYBl3
PKn0ox9KP5w6pP9ulo9VgllnJHNxeh0OftJ2vmyYAO+F31jSeL+n7tbx+a4R
seOacPmjLLHZGR6Q7CsfYtnVXuy24MaliCAY9m2509VRTTj81yrPS0HMrtCA
r+/fkxmaV89DUr8eSb4UEv8ip7/z/kXudz6eANtr+zxtsi/GChyxMvVuJJJ8
e16u5fI90fxL6+Xh4Z9AVePGMpOiAJyRcC/47vwPZH3tIeTA1SeCG6H0fSDv
A3mfa/P1TUByarSa5rda2PvfXOnDKaGQ/Xru2Im5jN6z99Nh8hPrIZsks+l6
AFkP7jkffwAk/gBI/Aqw37n4FSDxKmx8Fq/Cz5+73wKc70kYm6m7wD7NVf9p
fiviv5erl0D1t27Yo7+h+sT42Vqrq2Fnv94xvacyedkXTXVeYbV5DvRRum0/
V/8bhmyeOH3T/hyoyZ5yJn6iJ/4y9S6OUmLxRgLYpu08CXQzgdQnhO97nEX3
fBTA400uuZs9WD5UKegfXTLgx7YsaIhM+S5nVgIlVi4XVMWYHFeKmXLLDV6I
FWD7GYMcpegS7G9pLBcxvwCnSbZlt+mXcJDZfRJxW/pDM4/3AhywImDF2Z+J
eLNA9nDEawFulPfaluVfw7831ikldbleDS7c5vL5WnYiirnHDv42hD1Ppt+P
5PuRfD/qlI884MvbP3yxtM8GH0WdHLQZMT0n0vUbviuar9vol4PX9eduVRD3
QM3r8x3T3rB7me1xi1hqmrfCV7Cd7Op25oAjKhtKVLiYFcBEGaeDq45/xHHV
xiP1vfh7eHCik1abmr+Q//+EpWkvp7sJoVSltF1M8B4XLlW77u0gBN3vi33m
mrnQ8YCMB2Q8IONRfwaQ/QJkPkDmA2Q+QNYDyHoAWQ8g8TVA4muAxLsw+Y/F
J1D/Bfe8EnYuatNaPSkHmoa89Ql+UgESZYFPDfPZ82g0O/Vx3aM3Aoyb5Pdg
9M5IbDStKfz1XIC3bppO/TOSjfMTWk7Pb9kxJBGqU07UvJf8CZfX5NWP9xLA
5ux+pwYe8sPR9cJvwmpmzw3AFPXgZc6aBbDkkoTw8cz7tA17bR4+NCwvhtny
r14N8XJH0gYSX03HAzIef95KpbTOhq/LQnLeMLd0UM0/dcZHcjHw0VZLqUN1
2LhIef2JGzl4NP/7iqEX6/CC4ZhBcXNYvEcq/thtcyV1bg5qJSw79lEzhYM5
uDtv9UT988noPDEw7/GjHJSJ8rDQsWHn9Cee/e/0spUnCjDgsHO1iPUvHPJC
yk44pQBTPlqbrDgZTvGLBL8o5zrUrNdHltfpi+0BSQ0KxWHQdO1j6YGIbzjh
5g5R94vM3yciorVw0bSiwe9w1xKpVw5BKaCi9MnxqVMyv18nOV6Z4GOWDGNl
Azt8Nzvy/DrC+pT9B2MB6DrnBw6QTMFF6sLcPg8YXnl6A4Te8PNaLXk/ZqqU
AEh9TiD1c8Dx7WY9oxHpHOTjExm/QbJfkexXWu+D5vtT+gSEPgGhTxQ/SPBD
1x/I+gNZf66fTIgf6WW8UDqLni8g5wteaif9qFEz4d4Lw/HHj0iO+I/Jzcn4
qP6xqIJJG0Qt/Bm4tiiFl2O5+Dgg8XE0PwJJfgT3Hh+PBWT/A9n/cGKjSUe5
F+OnRRC0cqnn5UghGty+eKL6eSHc99T+8+9oHo4fVSIiMq0Bdqe9DmrYyOws
EfgyKmTcit3tuN6hbuToLb9wg9ShK6P12XN3bC2QjZqr144mE8Z/HVrkTZ8D
eU77B9I/RKa93HU0qRSeu835FPYhC9/0nvjx7YZSCG1Hj4DTWbju1yy7tzJl
cO6S04+AsCy8faRtvbRaHfYxF0w7MyYPagPVRm2bUYc5Bo+m2u/Ih4em9xaE
jK7D8prGFzfj84H4o7h1asZHm1XaPGqqUcPVQm1vO++nxRPR+jGa1iyfic8v
RNEWDZn0NxVI8uno+0De5/UpLh+RtfHr8iUx88IbUdXw41lj/WBUEh1yPq6u
S0/eOcbp4lFD+L9gPJtXMS7b1TLRSFCHJN+X6RMs3xc7oTLWcmcx9g4Wn3fG
tSf+iMv3Q6e3c2+rXyqGQ9dWdHyaGYYHBz+3k/9WDNdnbLvunRyGw8X6HpWP
8IG25ptbyqWD+XXdcODNg86dnqjab17k282feTqyZENp6sjOSvi9fanPY6EP
aLUPUe64Ugl/Ew8JM9ATgkNKC6tMuvBSH1L2X7An3Dhx8UbyriqYHL1fZv+e
b6BhUbJvlJsA/c0X5NlcDYQObeVwiBTgzOChYb2+fAcyPpDxYYa25MMBxoWg
tsRTa/nEAJC40WtSmiAE+h0Kjrh0rRB+HTgv4qP//+hRk99b31rL7NoszuYn
HEle1ek9uxCIvgvkPmMg+i/fj92u7YenSjXAHgn1Ppmx1RyshDZ3cf2T21h/
lXT9wSwxW2fhvBjcbmPweeqHRiD7gerjsGhFhsjRz7HwcZq0lmtKI5i8UxP3
jMyHNdsnme85zuIfk0HjsXzIzeeNoDxaM9WwOR7mtZ/aoBXaCP3zY9b7KabC
P5OHZ7ZfaIS++YG+q4pSoNfVOXrxV/l6AWy/MfrI4tWAnEf4MX7lz7dGLC/F
HkvzJrjeuFoMP9taBsya8BhvmYvf+HitSz5w17spGvUU1Sb0e3U6thj2Nm53
/1TiitkqxYZnd1Xz/++c/W/5QO1qUNMaq9U6/hkWTqw4A/uqYb7MmsBq7Ve8
HICrDHSO/irGLxZ5nZLz8jAt4uytB/8V40FrpfMXXmbjfRtZJcV3gegX0ijh
kp2N5f2TNFzP+6NLbZ/9b87wcZ+c3lMAk+zMry8zdMSh8cmJjwKFENPv5Ony
sMdI4m/o/4H8n+IDCD6A4AMIPoDgAwg+gOADyHxhomfIOrngSlh54q7FGiPG
33h8AcEXkPoDUK6fqWznngiJRV43lx8OgXe6I7O2T2JygxeSNo9Hg4nP2k/Z
FeOcB/Eeql4PUH51uGSCXjGuManqPVTaAsNelb2ZdqUYpc38XcRmf0ZLX/+Z
IYnFePXI1pbSjgKUvRwqpyUajJ0pYxv7+xZgm4ZOvHR+KJJ8ViTzw4ioud8G
f0uGP1elPux+ex/kqr/N2+eSDJnyb4s3bbCCoR8sR2XKpWG766JmSz0BTOo0
tC30jccao2CPxw4C+Kt3JWrv2gS85eN//HNXm9APJPQDCf1gciOjH6j4OTJh
vHgSdMM8zPzQ/+Viv2R+HbjzxOQNNFYv8io9XokDXcJOxUUx/ZOvVwekXh2Q
enWMrrB6dRB1Z72Vt30NdkMWt1GD4wYPi2t2LofUXLFRy84w/aWc7hf8OFv2
fvl0Pv4NyHkCcp6A4B8J/nm9dYT6WE20EoBi9rFlcfdjcZhSRqzn2y75VcvQ
sfRODAq08yXVuuStrdZj4netYvqaAD4dq5BeuU4IbotmRdw6W0z9fbBug/Dd
2bVCePo8XzXvcRFkDd1upCQvBB+pdyJn9xbCEA9/6fKFQqh8bRoh3yX/2Ps8
X6u7hq2HO5I2vS8eST4Y3lu48tpyrzaomfFv7PA5Ceh2QhA972MbBNhYzQ+3
5fIZjNogbvC7r3vvpeLCinuhamqVHOypa/BduXWVuE4V3Ei6ZtN+n61vNaj3
Ojtq+Ce2vjzfwIPmb6Y/t2X/r4BzrVJ1rm+Y/M23QSKzo2/o51Z+fxa8yPBa
39IKyombXuiOzMdLcvPmSt9rhco1R7QWDS7CsOdKWRXtrTB2Z66uS2UePnj9
4f2WsW38fgXtX2sXnm7hIPNztGLqEcnbe3JbkdTHQ5IPzstPXD44/3sfdd9k
e2zG5oCndR7hbfx7SSFuQ36tbuJgBzaOcMuYtJH5D9j9QLw9nGs3o/2rlfqB
zu34cuaLiD8vmdzEntdh3ocEj+OdbXhlddOQ1oB6DrZi9RWfilEuDfx3dcMG
rGmV1Bhpztr1ePSg85srG9vwSXX2y/cn6vnvZevp1W8FhqQ3Y8BR252j71by
30Py95DEt7FzzOLbkNjn2bxgUJnmx36CViT2evyemGSuHM/i6Hh8w7YXT0cu
TWnDWwNFl6q+befxxPCiHnb56TrzJiTxeDx+uXg81JRLhYxiBhtRMr72icCZ
rXePX9TR16FAGNbI91MQMfzp24wm1J4w53JydE+/xB/Dy90tvyYUvJJvxqxP
WzZ9yK7jYAMS/wjbB6ApLnN00MJGPNR5dq+yTo+f5PqEYfliDsxfxX8v1L+4
teLOgyYMGbpz5YP5bfy6MjyOWqZ2aOq6+q79Fr5Efks7B3n/Ju4avvxq7soa
vGL8uhXz2/h9RfxbOPDE+B2/nzfhyOjljpYzanHExgCJ4pomLDhlkqwkx+gu
f98BkvxQJPmgbD+yeEt86D9502mLJpC6sv6/ZDkWh9AMc5UsNM6mV+PS9XeX
NTQwv1QNkvxVHn8pB4JKQ/+VI/H/4QbTlXu3T2nH6bK9T6laxfP79KKbzeP0
2ckoUan3cnFvtp/4+0RZvg+SfB9e7+PqqSCpp4I4sVjMRTIWOIjEH0TnA2Q+
QOYDxJ4DxJ4DxJ4DJJ4WiP8aCL7ZPoPjBneu+55kfIjHPxD8g8P+Kf+WZjF6
WgfEX8/93ooNX7csLH/ZAMR/D2S/8uee269g+35dYbYhX8+be56KwbKv/fIm
NoLVehXpF9V1HGzg55E48+Oj0T8b4XL4+tnGWazfBiDxAGx+kP9fmth42wYg
8QGQKog2fjqPfR8/PzhxSHaZpVo9jx+Fgbc0ZQVNsH1kQadYCh/3y68nxw+A
8AMg8Rnc+38wuXerXsKiRigVNJVM0+mJ6yD0jnufp3f8unDx2LDe0fbCZr8K
mLwj9vvUAy0gUymw/32Tr5/O89vBlrGZalaM7lbBxONrltv/bQad9Lp8vVam
17UAiecAti6xjdKOUuEtQOI7QM4tXLZM0MTjiX3HVcHA+8sKmnm8Tp+tuUBl
XxsMXL/mlpVBD54JvWPfy+gdrPx9aeTc020cbIGN76zsgwtayfe1QVm6dVR9
Hvu+dthha7Vu/o9mUFxqbL0iqo2fLzcO47dA+C2QeCIg8UM8XeP4Mdfm4+mB
xP/AiFnym8UleL8Vv3/nnlMUyg1vB8L/+Hly/A9I/A/cy30yZpQGw/8fHt9c
PBCPx5Xvoj51fG2HYtkB906+a+LxGlM7O3yBZjO8ytvz+JQ7s/dkopfAWrbf
EgEOq/uk9upvFl4f4LJfsZcAGz+7yq75lI7tu1NF3+0SIIm/RlKPAXtP1p0t
+9UTRAZJbzStSkcbs+WT+9mxOFCWD+YLg8TL9pp3vb9JoW+69kgnfh69jOMu
KhaGgkio9lIpfWZ/DIaYo6Nb+71KxdKdtwzeX2D3D6firKE6R7dFMH2Gr/cH
ExfKew7LZG3ef4avb4de3r6R5UP9xK+DBxrkXRJg+MyJVTfTQrDqr/tngRGf
r4M7mvd8s05yBwaJfRz0bpq69ToSDlP61dr/WeYBxF4Owni512FVv2DiQb9f
56cyf0EFVOjqXnD58wOePw99caeK1Stk/u0wHK448O7y4ekw7HKSor/wK97N
8YpWCEgFgh8g+AGCHyD4Yd/F8EPXH8h60/OH5Pwx+YOdP8Zv2flDcv6oPsHL
n5w+gUSfQKJPcJDXJ/BfkOlgmdhcCJ7zrreJZwOS+tJsvzF/AXq/UfR7MTII
B7l+nx6zQoCWlz9f1YhswSnVe+u+PC/Ffi5uI+pMs6Bj1zbh8Css/jMJhtsm
gZI7osF45YL23yUgeX+AgXh6MHj4XB5fwNcZDYX68giHiadreTz/X2BUC2EK
EzotHX4AOR9Azge/r7jzAeR88PvSf+rN2Y36ApgVWnjIQz0EH7i3auiqM7tG
AZi+XvDUdEcGqHWe1365Ix8u9Bk7L2FvBlgMkPRv+lwAsiNmX67clwFE34cl
a/ua/DDg749lcg5A8RSXkZ/zgNgDYOazQzN+dO3TbpgNJJ4GSPwMRItN0007
24ocBImp8lF553vg4JF/1g69Fwyyd/6ZvhVtQoejVadXC/j7pvnz/fyyZmRl
/yYMulmvL8PPR0RkfovKjoeTOqAbtgOxzwCxz4DNpXqx8VNYfl8irqq5J3fj
VhHeyR6i2trJ5Ec+vgTtHIUuc7roSjfsqUvBxbcjiW9HEt+OJL4dSXw77psg
rrnlBWLagH4vnglyYNhmkQnnZG1xTseIzrIV2firdMvAQBf+/gwOPsXesrsW
OdZm0f/zdO7N/vh+NgoJeKlhlMGLxBD0bzNbsbE8Hk0VljVWjA3FgJOF98zr
41Hh6Ydt35+H4eh1O532b/ifuu7/K58AST4B3r45Srkq+ysMrHolPFx6H4fL
BmipeH6FcIMRN+sVrWj+IpD8RSD/B/J/uj5A1gfCNkkfVbCMh6MfHs0bvT6f
2meQ2GdQ8bTBgw4tIY+XMb5uNaLKQlwBd8yvjgjDtIK0vUtBiD7DMTWx7Rd+
GHlKOvdGj9+x+zwLQG/kEJWj433pcyDP4cfwQXYFrjUweNnkq/c9w+C257JR
cxSZXYTLpzGqgYxHVTINM1jdwlo4q259RPLxL5B46lD6OZe9z/hONI5/LlB/
eSgXJ7k+2+5xKQ5rZyzSmKaai1X57aGpHhF4+dzNw5WazA7G0wMk9AAJPcBt
TXcGPB5SgCtThoxfrBCBn521Cmf+ZHGtkUj4GZL4Hu49IaQpPFh/ZGsIkngf
JPSRwydPH5HgCwm+kOALCb6Q4IvSe+533t4LxN4LxN4LxN5L420wYLfuwdcR
SVC71+PaJTkflLC4KTGhF6NHLN87GndkLX1++2ACeGpv2ilyMhYz53+YIbIg
AYJM+78YsvY3vvX/s+D6/gQeL9x5BXJegZxXIOeVyQOofudGrqZjGpD5AZkf
ByvhU+aEC/kiMeDxqL6/6t9KUP69sLhycDSYXBz80mlrBUgnztj/Trnrud/0
qbqL03CralrGs/BsyNv9c1VgcSp2Q2bPzYWwjwnrdvplwG6pR26jr+ZxMIM+
R/IcR77wXpU8/iMYvz8j+i38N74ozhx3O971f6+/iBO4nAi5c+Amy7ewh0ee
oativkWh4bOyGPUNLD4tEnc5LA3wGhYBWx9VCBMX2ePCXuczVVPYOXOiz4E8
h4unfj4sneiGiee1hxdJJ1L7LhL7LvZfvPRyzodC7CMzzl9vZz2qri0sPc3n
jzN7TREuOhe849di1i7EN216r1pN6lHw/sCyE9KcXd6onuIDCD74eXL4YPub
4QMIPjhYDjb3MqKt1sXAe2PTNeNcy0G3OqfafCurf8LTFyD0BIh+APuKH1se
GR6G5Wr792l30cF0iZV/Wi63Y/GlfqL/Al/jctcg17dd7etXZ56MnPUWrRXw
j8P8dlz+oP/Y/COxoJt30O1/7mU92tF8/cD0SKovcfjh9SUk+i6TH5k+i0Sf
ZXhn+icS/ZN7zutLSPQlJPot9z6v3yKxTyCxR/D9c/YDJPYDJPYHXp7m7A9I
7C+4XrFkVmTQa36duuFT0MvaeN7CMYadB9x0N2fXFLEEeLhv1s645Xbc7wlA
8hl4OV4rau8Pyy8lQPIbgNgTgdgPebxw8QhA4hF4PHD54UDssUDssfy6cfZY
vn/OHgvEHgsk3hYink28Ft6QBfWT1+XW/WH2okx40Dph0YbprD/eXgvEng7E
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
       "], {{{
          EdgeForm[], 
          RGBColor[0.148, 0.33, 0.54], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJw1lnus12Mcx59OuvxOxy/P7/zuvxZJbbYIQzVxIscR/mpjzMawYTaFLEYp
Vi7dS3M9tlxKitwOdaKykcsSdTqWckm6YiiKmhqvd+/HH9993t/n+3k+z/v5
XL/9bhw7ekxdCKFblxC6ImdlQngA0M77pp4hdHQLYRIK+8EDe4SQ7R7C2V0t
30MnWw6hCTwtH0IL65PR7Y2dLXXeW0Wn8/gQ3ukVwnxsf9XTe6W3pxDCanTO
YW8n60e6e8+HJfYfF8KSRuvpPNlcAb4YvAHcDm4Gfw+ei91LwCs5656MefQB
L8+G8ElDCFfCezrrE1lfzvpK7J9Rjw3k/BjCBGxMRk7ivY3zB8HnK94Pw2Ee
Ms8dH0f/Vtan8AyD5zi4T024P983831+vTnqrLkJ58rGN+fNbWq979S1bNzC
+r0Fn7W60XfRWfL5EHAlYz+/A7cM3Nais4/vRfz1EPd6Azu3obO7iM2c+T8I
5zU8Lyh2yNl8n1fv2A7iKWccl80F6/SFw+MZ+1acj8W/zr59kf1tcHsU+SL+
PBu9Iue2s/dnbDzBmZfC6Vp0fmftevh8Drdm+IzkOR87r6MzkWc8+ofQGZ50
hnLuj9H4M2RHvXNOd5+KXis278NG74JzI4v8seR7P1IN4c3o2L4RnVPKT/lq
YMF4APKV6BjNiM4t2dHdXyk4bx+DwxWVEHaQn5cjf4bDSDjc1MNcOlMNKG/3
p9wdUsPf5PQ5Need+GIyPM8Zt8F5QXSuyZfK1baSfTi30ffRvSaCFyj/wWfy
fWE0fim6HlQXWwuOjWLUCt5YsJ157N1Ub07KJeWf7qjcPIqtj1gfDL6q0XyW
Fh0bxWgs8gLez2JfJ/xzRcdR8Xy60RzEaxX4AHgheD02R3He5yX7S35T3Vd5
n0c+1JAf47uF+LCIPJ0928iVah9ihf5efDWUs+4v278TkIdYP5m9T3H+7XnX
ToH1SWXn92TkPzXX8BHk3+j0Q//JovNU+bqji3uA+spOcBkec8ClxEu1pJ6g
GAkrTq0p50/M+31Lip3Ol03FbEXGNlUDym/551zFOm+fXwGH5rzz4zJwiTsv
4u5l5H6er8EXIjfy7WrsdCDH5G23CW7r4LCWhnYT/imUXJ9F5CH07gUfRn7I
0wL+qOg6UY2otpbz3sT6KMWZZzi81yLb0TkJX42F5w9wXqV6LjkPlA+nsnd7
3v1kDjZ21lzPu5AXwXULnEciI3tmoJNDbsu7V8wuuifMSj75hhw9iXO3Il8t
GU9ptM+aU+9Qv2nPeI/63+bUD++Cxw7wnWX3MOGrenivZoTiqPrbyfo1rN9d
Nh5X9jzQXOjKmXs4+2X0d0fHra2X80G9Wz2wAx+/n3L4lKp7akfqq+q7m1If
/n+eCQ+omMMpyP4V2zwZWeNZDK4iV5c8L07LuQ5Vj6pvzRz1d9l5tOrYKYaz
kw80T09rcA7IP8fWEh5RMr5FOZLiqzirL6gel3KXS0v2R0vJvW1ImguqbdX4
PalHDkq9XTHUHNK8682eaeAsso5nNPr/su8O9lwHPq/mvBN/zc08OjPBjSX3
sempLjRjNGt2If/iGQ8+WHRPUW/Zh39aGz1bNWOVgxdkHN/DxGk8/JYiZ6I3
DF/MQI7j7P7k4cq8+5H60lrWh4O34vOLK7YxMs1x9RL13jOw9Tu2hrL+W/Rc
1HzcoHOjZ8T70fPqsgb38ycqtrMtZ38rHvL/Hs56CQ67a46P/leUj/2y5ibe
2xuso9m3JOW8cn9WdD9cEl3nqvc1rFcqzs8vKva1fD4CjjOjZ+Iu5BjOOxGb
K7h736yxcus15LKs73hnzXNT87Op5ngpbgfTf4v+X1T3fRNP9V3tvyF4nmmu
jWDfT1Wfq5m8vmKstYdjmsvILjn7fzq4XTHJ+tsD0fb+QYY+Xj8PDsflHPdn
WV8czfdPzWLW150QwvHI7jlzbmX9keheujL6Xeu/IHumHqvv9TnbkT3FU3YO
pH8j/SOtK7l3bkt33Bk9d+rY93S0n5/Rv0/0nP0V+UfN/hwM5wFVr+v/Qn1B
tjXrlqb8/Esco3OvBzZ/iu7n3cBzovUbcv6v0hxZpP+r6L7UiTwS7f9eOc9y
1e8HyH+TD+XLpqJ7smb1cxXn5y/oH4jO7Qx4R7qX7rc4xUVz+63oenobOb3i
/B/IPfYmnuI7JTpPlyHvqDmP70K2pbgeja4r3bG54v8bzUH1xvboWlmB/DK6
3gPnvxvdf5Yjv42u8e+Qn0bfZTvyP3p1yos=
             "]], 
            PolygonBox[CompressedData["
1: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
UVPLn1PA30bPsmZ6Kvg/ePKvkw==
             "]], 
            PolygonBox[CompressedData["
1:eJwlkL1LQmEUxh+j7MOWq5kEQfUfRE5C4CASrU3NjQ5J9C8EJRUYmCbUImr0
MToVZMWtllsmDRKRlODiGC5t/l7e4Qfnee45zznvXdhIr20OSZqCEdgJSfMT
0pcjfUJuVvIi0ireDzoPPnpC09Iz9Q30fFIQ7cLKuHTr2G+mpwspvAbag33y
5lhWYlkd/QJRejL4Z9RVx35rhaUK9IelLN4jlNFZ+j6ov2GRm065ZYm8c/Qv
uGNSnLxtemN+6QLvAbbQB8y+Ur/BOjc16fvDf0Lfwx27iuS947noPajhNdG7
zBbQlxA3uXiJGf5RgNsd22/mrsI2p4I+MRnMJdnjcVcHfQ2j9PwHpWPqNizz
Djdi32feeQSxSemQ/AH1GUTm
             "]]}]}, {
          EdgeForm[], 
          RGBColor[
          0.4818678960420985, 0.4730526152224627, 0.5358028981733352], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJxFmXecVdURxy+6b9ldeLC8dl/ZaABREYwRURQQLKGooMREQFSExYYoCCgo
GBFUxBaxoX6ixtgjiBUrEXsvWCAaPxhNNMYYMFiiAkJ+3/zGj3/cN3PPnTNn
zpyp53VunXLo5K2SJDlBP1sLFtIk+bwhSU4sJcnUYpK0ET5dcLtckhzWmCSv
azwRzVnCewq+oW9HiWalYF7frhX+jOCkdknyWjZJGuuTpK2+rRccpPGPakly
hxa6S/gfNb6b6M9vSZLWTkkyW894PbMCr7VJkmla9xyt1VZrzWtOkgkan9v8
I92qTJLconUWdUiSzVpjdcbjzN1Kc87W3K0Fd2pKkq/bJ8kUiT9e+DF6fiXa
vTRvhfCLNPe6BsMJkm+Vxq6rt6w3anyh8JOFXyz6meKzVu/rSoZflZPkgKoY
S46hgg9J5sVat7fWzWjuB6I/TfJsI7rrxHdbwQWFJNlbc08Rj76aNyHkuVD0
d2tcyyTLxWNFyPOE8OdChhX5JNlQlyT/kC531Zx7Nb6N6KfqvYsmThN8XGvv
Lp4rBP8sPY8X3wtarNfW0M9G0b0nPkvE7yHJ005rTNHYRaJbq3U+lmzb6b0i
/ttVrF/0/rbW7Ck4RufwcBt/B1+U8XO48PmCo9vKroS/X2c4MfAzpY8n9H2S
8KGS70mte0Bqnj06eT78jgj+x9UbZx30M76DdXSt5D5D719of7mwPWywjca/
lvyviOckvf9H4zXhk4V/Kfzqku0Vu91f+3pO3wZIV88LPt3gM+ZcF0gPvfW+
WLS36NlV+K1F+wY+UhL98diA8BMErxT9rdrTuXnreELoeaK+rRNNTvR31Cz/
7YJzpfPvNb6n8OGiWS38O8FLKl6LNddp39/Xmw823pz1ObSGr4B3lC77il6k
yXrNXSz9/kfwBcnSq8G6uFm8dhF+k+DoisdvE95Jc/cUTgzYQ3a5RHroU7Ze
e+pZr7m/Lxq/QfAlzZ0l/ldoL1dp7lc64zWa+3Wd+X8l+uE5+9kOOdvBF6J5
Xe+fVayfnQVbNfaZnprek7znTdPeBzd577wfpvU+FE1/8clJps7Cu2qsXG/8
QemkSXjXkKGt8C7Cn0ysF3TVRevP0Nhpet7Q+N7S9VqNDxCcnbNfLtG6iyTT
Y7LD/bSvezS3G2tpbn29ZcgITtacNcJ31rz2+ERb6237oum3E9zS1vpfVuez
7a337iIaqLnrtO4+gqcXHRdmCm7OWcdfCl+tvWclQ6o5vcqOD8SJ9TXz2UU0
fZin8Xaa012yjtb7Kxo/WHGnTvyHV+0rY8Jfxlath6MErxSfEbKhqyJOsM7p
olkr2g2CFeli67LtrVk87xTcCC49LG9yfID+8hbHc+L6FyXjifRXKJtPe413
LHputujYif8Tu9J6nx9nh90RMztkfCa5Bu+ZmL4lYtpwrbtG+hxEzNb3Avaw
lSE65Py6iHaHBsesBUXH0amSpSX1Wl0k23vt7Nu99b67xvcTHKXxT7VuEuMn
16zbh6XzuTXnhnmCQ5tMz1r7pI5H52ruKTXr49GCdc448epnRZ8X5zZK46P1
tKv399ER015Kvaedy5Z9lvAbJfe3qfFvBIcRj6TzM0XztPC+Gn9WcG/ZzHjt
Z43G9xA+QvhKfLbFMXa2YL7sNY+XbKcWrKM2mjsybz3+RTKOanQeJK93Ef0N
wjsjj54/CN++bJ0xjn7yWqubZLxC49drfg99+1Rwg+afJZqf61x6aa1HRXOZ
ZOhZth/j39j1403WVw+N3yx8vmiHC/+T8McKzr3kYnJSTvCFJuc5bA8abH6o
eI3Vum8WrT/4EGu2aG9zhW8W3ETeF75RcJ+ca5G/l+3b+PgmncswjffQ+ATJ
+bfUNcHZotlJ9ny/+F8j+FKDeZKr+on+PMH3RHNywXbVEnkDv8WX5unbl8I7
ivbqTOCCdYIzZMNH1jl+EbuKon29YN+4QPLMKdtusd/ZZcfFbfOOkb3bOfc/
oPFdhe8o/qMaLD82c5743KQ1uuv7cxXXJ89WfL7QU0PsHLH3Msn8TMXyzCfW
lc0HfWDT2OjA1P5PHBgmPTxYtgw7iSateB8lwWF6PtL43RqfJXyNxvulrluo
Z1gXHUIzQPie4nOXxvcSHNjRcsJrkN6XaXyo4AjxeUpjmyq2hR4drT9qLHLy
l4JH6HlVY0dyphXH2n0FN5Zte59L5rHCV4pmnOBJWfvLAn3bVPZ5ri85ZhG7
tpSdH2ZEnCfOLQ97I5YR0w4U/XzZSoNy7qLUddSsyMFj9RzdyfGTc+edmEaO
GBvjc+SX44Sf1ewHemiB44KGurY1cjq5h3fy1xsZzycOE9d7Ro3EPMaZS21M
rUCd0L/o2mtLzTVIa9TMzKG+oiYfGTixCNgz8JeLtq2q9jpJejuuo3VzTWqf
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
zZFL+P+Hfok90t/Pix6f/yEnxn+R/wMSF7Xg
             "]], 
            PolygonBox[CompressedData["
1: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
F/5/d5m/gQ==
             "]], 
            
            PolygonBox[{{6202, 2734, 6204, 5176, 5177}, {6139, 2688, 6141, 
             5167, 5168}, {6180, 6179, 5252, 2721, 6183}, {6186, 2722, 5253, 
             6179, 6180}, {5168, 5167, 6185, 2722, 6184}, {6201, 2733, 5257, 
             6158, 6159}, {6159, 6158, 5258, 2734, 6203}, {5177, 5176, 6239, 
             2768, 6238}}]}]}, {
          EdgeForm[], 
          RGBColor[
          0.7858706516169804, 0.5798906443382359, 0.3570920131069508], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJxFmgm0VNWVhi/w3vNVFfUe1Hjr1lN5ihMRRUk0GhTQdgYcGCQa53ZMOwEm
itoGFYwrzpoookZFBnFiUDRiAAdwxCHEjlPsJHS3CtrOimK0/49/u3qtuuuc
OveM++yz97//c7uPP/OwM3omSfJgryTRL1nTniSdmyTJB61JckCb/5M/uZYk
lyntU0mScXq+VP7eapKsV/peu/+foDqntyTJZJUnaZJcnFcfXUnyj6b7OVrv
L1fZ68r/Q/UP1/8xqr9XOUkOqXicCWr7mt6/pWeN/h+aS5I3ov64msvHKl3c
SJKG2m6qtu3qM6/naw17aM39H6J0F/W5TO2+rSfJHso/q/wTKt+8d5L8SXXu
1MLP0xpfafe7Iar3kMZbojSn5wz1f4T6H646L6nOfqr/cea2e6q/vzRdPkT5
4ep3d72/U2lT9Ve2+/+wmvODVedMpfdrnJvV73jVeb7d80Mmd2rcwSq7pu61
jNC4ywtJUlC+Vf2c1ZEk5/dRH0of0zO1j2W9QM+Oqnd84rJpemaonz92OE/d
kVGf8lGqO1T5RarfV/mSHm1RskOr/2+q/GbITOMWlf9OaaJyiSz5jfZ0U717
QWu6KnX5lanrUo86Y1o9H/Z1Z6WD9VyYuGxQzPPZeEd5vZQk/ZQu1L73U9nm
eobofxdz0bO98kNa/X+g8v0jT3mb0rqeTvX3asXr66nFzNTEK7EW0mrB6xtZ
9NonK/+zVs/hKyl9d8FjM+7m3+f1vlbyOLma+6jEuOhLp/ZrssYrKN+Rsx6N
TF0+TfWvqFsvv1ZZXf9P1Dg3KF1ftowuke50aM4XKf+c8lvp3ZPq+121a1P5
2Sp/XOVb1rxXM6R3AzTWZHRG691T/RzK/uv93sqPVX6h8sOVH618u8a9S+MP
Qg81t8+qbvup0kskh2XK36cxelcsj3vU/85q3yJde1V1+mseM7SWU+teP+tu
Sh5vli3L+5rW5+Wh059prDmdtiE9i8730Dye0PvDNf5i1WnTGAfr/0D10ap+
L1b/myhdrf/dej9HfY5R3Rmqc53m8UrZujhL5S0162lVc7hH5W+o79M0z2/0
fNRD50fpug6XIwtsyF0F243+qr+typZo/B8ov5Pyq5TfVnbu83af17s1/8+U
z5Rfqufbdp/HdVrLd5xx5Rc0rC9t6mOi5vOFyico7ad369tZuOX9RfT5hdZ2
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
OnELGAXZDIh4fHTdugG+m6n8+/i8Ltvm/nA3bdZB5so83wi95KwRlxCfELNQ
jxTM1xbcBjhkcc68FZwV8tist/0UWLhflONbl4Xf4dyv6nRMPKDTeXDRkuC4
/tmwPB4Kf4edWhP5UwLDg+WX5D02526g+thez8M5n0nKGRdfx7j4d3z40sif
GnnOBjp1b5zxZ7UfI9R2f8l1RGb9PiQzf0Hs/vOqeQ3szdCyMdTckPkrqvdL
1X9V6Wl1z3kz1VlRc2wHzzes3f2naj8ltS4elNnGMAfwHrp5T+SZE3nw2z4a
e5J055TgGg/JmYekPrYCfd6tyzLdVWm/TnN0cD37aqyZqj+nZM5lVs7+Cft6
U/RzdfBC8EPTcy4nBpwmPV6o/NNquzAfMUOr8Rp5Ygdi5zk52/yHSy6bXTUf
QFuwA+eZGB/7Bm/6WnCnm9Yduz+q+rNznhv8JP7i9pztO+d/ZvCQ07S2fSWQ
6XXHTftGnDKpYds7UWlX2b4XLhb9GhD6dpr+F6STT5aMx/Fl6B58T5J3G/T3
wdA30hmRxw7ND1u0Xd1zm12yX8c3rar6TC/KGTdwfhmLM3x73jHjI632jzvl
7Cs5R+wdGB4OY1jwGNieM4rGCTynFx0rndzp8tXK3960TYOLelY6dKbK+wbe
Ax/vFOf35qL1b2Jg5TfV9qPM5R9mwWu2msMcTKxH7BMcOfEzsTNjnhnjvg0X
o/wv1HbXijmUtZnjODA9cRRxAjh9iPprqTg2mJ7ZH4Dl8SPgb+zZEyp/K3Ws
99fU7fGN4OG5FZ/zg1KfX84XOPxI9fvv+v+Ryv+c+UwfXzVvfWPRc3o/c36d
0mVNxyJwlgMrtvVwVNgB/CTzuLTmGJ9YHzwyJs4p82FdxCmkrBPsBbfDHQA6
TOy5JNYOh0PMA4Y/KNpSv1l2f3+Tvjxf8/kdVfX+z4vz2wK3l7OPeD11nLtU
89+zbtv2tNJVqePoeZnjuXmBE26SnC6Ks5yPOwLuCuBNWM8jVes5GAV8AnYb
F3bgv6vmTDdX3yeq3wrxT+ZYnPiZOBl+j/iQ2Kd/yXjtZa3jMOah+uPgMFP3
uU3J76izrfI944xxviaUPD5cCPs0MRd3DQXniafAZYzLeXk8s+9bkRkjzc/b
lnQGxgCHwLU8EnzL4RXf/eS15xdWzYOv1Fy+yow9Nij9pOY9Olbz/Udq/7RG
6SVl45d3ZCfeb/j836N5Dta7eep/V6XvqfwOnet3G+YO4emYMzwptm153e3A
ZtiO/qnP/4DUsRE2EVnOKDuue0T1T657H75UWbXLPO+7WsetmTHsd2XLFdtN
vW6to1/RPnhU0TwF9cBXYKuNdxDtttfYarDqirx946VN+/tfNX3vsfFOpNV4
BfsFNlndx/1yZv635n3/Wep4FNyDf8YmYI+wTejUit62v49kxp+PKr0i9f3L
Hep7n8x8xH5KfwaHqzrHKj1dT5fyZ2fGdvjj36bGL8iZ/ZiR+j5oXtPxLXEu
/DoxErHS7dz1NDy3bxq+C4Q3Wsk4qTnB3VKvmbVfrPTapnHsb5X2I/6Bj1V+
aNU4elTJcSO8J7Zs65L3hf25NfW9y21Kd9YzV233bLrupKh/WbQlxrs6NR90
jdJrU3M116W+R+oK+9sj+Bu4m+PjbF8fHEJncCDs85FF8xuzKtb5A1Tn/Krf
wwcTYzI2424fdy0D4eEz2zruHG7JvL83K90vNa7dX+n9Ta+L9W0Tets/ZN83
4s/nm45hn1Y6LDVeHx426aCwp3ObXiNrPTnsyYmxz12ho7OblsnVoSPc1eHP
sKHwcfgA7vPghOGGfxL7yH4uz2xz31R+t4p91O5hL/ET+L5Gao41S62rp4c/
hUOES4TbfiPaYGtHlo2Xrq2bY4VTfbZhTpyYtKH6acX+cxx8WNPcwlLum2Jt
6PIN4L9WAnbbDmzBT5TuV7YdnFo3RzUy9hHZgOHAe5y7ofEOX4Z9xDauDmwJ
xlwfdzfc4dybmRd7KTU3j76hsw9k1pP7MnPicFVTiCnqrvdO3fEonAjxbI+K
58zcX4y9xM8MLxl7dpbc30Y+VPWezuyv8dtPhn3GTqP7zAH9+2fYW+zu9Kqx
5Jd185jEr6NV/kXZd2o/bTp2IZbkng68eEVwLxvLovz5VschxCBw8fjrJRXH
JRdEOZw6MSU2gvjmi03chlgTTmTju4q5rn414+TuTscV2Dd4N/hu4l7m8Jzq
HpjZP5cD87cVzZ0SqxHjEOvsm1lWyOzQzHWeU/2DM8fHubJ9Er5pfMXrwm8i
C+5mL4j4iro9o/zRnOMv7nDHZh5zXNX3urtE+YOp7fgi0i6v5SrJeWTJPh6e
5vySscUv1HZqyT4R30jMROxErDStan1ozbyegRFPvZgZO76QOS4H94Pv52Y+
p3dljrnhDfC/+dR14HTR2SOCX50Z3xvw3QHnrF/IHG4DncVmMh5zYp+JleGe
wEJgIvxZNbgJxmpovo+Fr8HnENduE3vH2SXfO3hH7nGITb6POYlz0VnsFdiM
7ya2DzlgP7ET4G1imu/iXrC75jPCWUFn8QXcd9wVdnxm6nPF+VpXNx5l3S9l
9iX4lAElxxnsC1jo5rDDt2U+q5yxBZnPM+f65dS6iw6jG/B9zHeZ6oyv2v9P
4IxXbT9OyLwf7MvszHwiOPYl0pIx7I+4H4BD1lrm4ovKxi3c92781kF1Tsqs
6+j8cco/XHVssrhqPUZH98+sf+gh7cEmg+Lbkpkhk/lNc0/E2bsrnVc1HwaH
/Xjc+Q6Oeyh0BqxCbNQS99rsN/tOOXwfvN8PU/vtkcEhEyODK5jTn8v2Ld8Q
u3eZz+3R5XtfsNoHme+buXdeXbUPw5c9C+cZfg6scX1gAzACnPPk+L5lfcOc
ys3qY3Hqb0geSn2fzZ3fGtX/r8DSYGrurbm/Xqv8CVXv43El8+Zwl/AIEwMP
L8CuV73eC1R2TsnnaWv1P6NqO813EA99P24zzjxnX/l3q+bg3lN6atX8Dd8x
LQ0/tVxp78w4raB0Vtk+AG7y6MBj4DL6htOE14bnZ67YbjDguPhe4pjMWGXj
9xFqtwX8v6pdovJByl+cmT8gJiEegVNaF/zSOZnr/7XsMft+j3sK9qHEoeAp
vnvgbhR7Pjfy8O7IjTl9U3eM8GHNPEBnxAJnZdYBdIE4HNyO3uBXV8f3Rec2
vJbfV8z5cVcI7wc3xTzherAH2AVs0XWZsQSYgrv+96MO8dZr8T1Ya8N1hwYu
uz3ikZ1S27FBqTkN+AzuZi6rm3uYVres+oWc58a9MP6LuwTK4cIHBZfP+Rob
XBCcELbpdyGfazK3vTYzv4ftYE5bBL4F5z5X91mdVrFu4o+4K9+xbv5lkNJt
U8degyrmb/CD+OQfRRxEPIRvRr7I9syaOaCzauY/wC68I0bpDt14puR3v9aa
cqnP9OiKOXH0cG0j7pz7mM+BB5qVd7yDz26GTOA94T/5joN94yxvvI8rWJ/g
svkGjr07oOa7iLfD/hOfjAm7DZc0NvJgZ/SHmHmf1OW3VWx/2LshwZntHvLf
IfXcLqtYroeHHJDllyHPXnGnmaua08F+Ev8fE/Efc+ZbD3iWSWHzGG9I8GTD
w88Wws/D4YyP75C4n+mWXbsZXr1kH7I6cCP6RTk6hj9l/8FF3Hvhp7EjYyv+
LqJv7Cd7Bc4EyxAj4gexVXyzgt/h2wG+42FdFwdvCX8JdwF2xWfgDweHPO+J
cvDQpzVzIp/VzPmzl+gouoWObagbdzA/5sb3BMz3kprvrNgz+vyubn7gY5X/
oG4ebnvuzYJ/gIfAH6Jz8NK1mvWWewy+QeEu4Hnuhko+tz1UNiuzT8Q3dqWW
G3JdW7Z/fCj4dTg8/NbrJWOy4XVzzMgKO/lyZg4BLqGQmuvvnZon6444vTt4
1S3qxlZPhpw3iTsUsB190h+c9i6p94RvRU/J7N/x8/hs5sYcZ+Q9Z/Z8s9R6
Bp8KN3ZGfP+GvZwRdeC9PgjbBS+KHesVdu+DuI87u2K7P6BpznVs7Cvf0y2L
Ptlb4hb2ne/RXo9v0jgHnIfFca/M/fKUzPeHb8c5Oqxm/nd0Le4ZWu2r4Eq4
lwQTHhBcAZzBYam5i5cr/u4HG38dcXxqfZwjmRyZeky+RxsVvD38/dDUfNGe
qe+014SesW8rYu/QKeIsOJyjU8eSxJT/B63wvOU=
             "]], 
            PolygonBox[CompressedData["
1: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
             "]]}]}, {
          EdgeForm[], 
          RGBColor[
          0.9303312152063677, 0.6958280380159193, 0.38402676713973993`], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJxFnAeU1EXWxZth8nTPDJ3732NaEQU/RVFMGFBBVzBhQAUTiAkRFUVRUXEB
ETDvou6aFQUxgNk154B5FVDMCTGsmCPId3/c59lzaKq6usKr9MJ9r2at4cft
NbomlUqt35BKdVb6TFsqtWNTKnWqvh9QTqVebE6lvq6mUpdXUqn+6VTqMqXp
Yio1ozGVmqXfS8pfrXxZ6cu1qdTx6uyUTqnUN2p/dp3aq8+PklRqeiaV+lDp
l/XOz9Nv36uvW9Xnd0q/KaRSF+i3l/OpVD6bSjW3aAz1/05O5er/DLXdULS8
rjFGaYyb9VtX1Zmj9Au120XlyzRWJ9ExSfVrlA6ouP4s9XGG5vRTayp1oCY5
RmOfoc/dqn+j6u4seo7S93czrrO36L9E3zeqNf2fai7d9b2l1r//HHX6q/5O
+vxDdS5Qncf0mabPeNE5QHW/UfmB9Z7XkRp3kdIJ6ucple8lem7Rd00htYXq
b67Pf9TmZv1+sj6PqLxD6a2qo+VPravfTony/TTmMo0zTt/7iP5c0PaMyp7V
Z3Xl+3bR3NS2j+rvqrKrlG8TDQfXmd7J+sxT+dUqL6n80aD/duXPK3vc85XO
F13PN5vWpNY0sv7/0JrWaO9GaI0rWutrRMcOIvQY9TFbdUeq/z+0Tr/rM1b5
m1Q2K8pHNvj7UOXf1b4fqbY/qI8D1OcRyr9TcLvl+hytOtclnntz3n3frM/J
Kp/bYLqhubfq9NBizhXN/1E/U9TPWyXtnc5zrdZipGhuUNkAzWWc9m6l6v6k
335VP7Vp16ljnjp7vVV3Z82rnPc5eFF976XvT2rug5TeqzGf0+f/RMdi9fGb
9uOEWvdDn9fXOv058i9rr/dU3wX1taVo2EP5GspF32TRMlFjPqz8Jiq/WrR3
b9easn+io4fySReX9Wp2nfFq87HGL9a5n+ej/ofKX6mx1lGdE2u9rl2Vn638
c6LlF9V7VumnmvvnSrdV/+dpjn01j521/k2ax0cNPk/0l0SfXTp0ZlX+Ry7W
KdaKeewec5mvvvsq/5jym3Y4f5fmlSjdXp/HuUui7XuNvYvGvaHk33qr7k06
N4dqr2+set8OUf62et8l9vcczXegfttCfWwgGn6o816yjweobvdGn61/tPv8
j2vwWkObktQ5je7/dtX5CPqavbbPi4YWpQ/qvB2qtoe0ey+XtHmOnJ0/NO4j
oru/6m7U4Xt6Zdb3gPxMpV+o3pexnqzrF5E/usPlV6htvtm/HaPy0+P8fCji
Pmry/ae/w3W2OusMXa457qHfrxG95c6+10/rc33M5fbgCc2q25T2unze4jVn
vzorf27Um6ayszXGJ/A8lS1XP4O1bnWipb7Nd3O41uZ8/XaX6l+o3z+o953a
TOd+mdLlmu9U/b6B+lhTn646K7fo+4u6axmdn7nKPyOCjs2aL66m8jnq5x3m
pO+baX376/sPqnODaHtT5Xvqs576uVNtuyttVT/zlJ+vMf8qel9t9P5P05r0
1hynKj1M/Zytsp2UXqk2XVXvX0q3UrpC5Zvps6G+36u2PYvm338LGQRPPFT5
vys/Ve1L9K90E413A2dBtG+g773UxxGif1TBfR6jtEXr9JPWYZLabs49VD/t
6m+2+jhO+WP0Waw93lTpBznTsSLWOd3m9pcov4Zomqk2byjtpXFXatxX1P9r
Gm+B1vw/Ze9Jgz7faby76rxOP6e8xsgPZAfrtDDyo7R3/TLm6wcWvHcrtJbP
1rsMPt8Qez1BNAxTOlyf3fVbY5vPAfM6T22r6vd8pYO1R3fEeGeq/1tjvIVl
y/Q29V+f9pnmPA9Tm++Zr9ZwRc5zZK4H57xuNUovr/o8L1bbfTT3RtG8t9Jt
tZ7b6LN1xjJuUuxXUd8/UZ/r6vvmcX7uUZ+7qO+JIQeRffQDvzpUZ2Ca0jdU
ntG9e0Z0p5Wm1PdKzbEAb65aT1iufg6tWF+ZKdqGww+j/cai72n1e1DZOtBT
IU+5f89EfudGy9556n625rC/aJiltKt+OzVoe1b9ppXvm5in3RZ3NtHY1+n7
/WXzp+aMedRfRN9a+myp9dpedZ5VnY10pjqUv1759g7ztWeCDzS1ef9YX3SK
qaFXvKv65yn/vvq/tGq5v0hz+ovKZ6mfJxhXfZwV+kCdfrtZ5Q9DXNnlXyNv
9X2C8o/p96PanKf+YNExUfknVT5CtH/b4P0oqu0MzSdR2llreZbKd1S9S2pd
Hz6GLKqEPNpU9DyocXsrPUPrPyljvelj7ddH7eYRPWo9lwUi7Vv1ebHyPZFl
iefbJW+ejcyjT/S4/qHL1WvthqisUel8fR8mGqbo/D+jNe7W6P63Kbn89Irv
UP/Q5T7QHC5Sm1Lechy5jp6gqqnOtd6vJS3m1UfXWK4iX3uGnEXGvoUurfsw
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
85YrvJX5f5LZYno=
             "]], 
            PolygonBox[CompressedData["
1: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
DwOvmHEuSTmmChnvMe015Yx6Qv+10L6KfKypehtT9pXkEy+k71Xw3xByjucW
6JOTrqWqZlCzyHtEe0U+Seuoc+zKtetOKwR+g1Yn5DdtPP1tSrhW+Rl43Zhr
vqr9qsbbVL4W34pCzqkqt3pb1L7WRdqT9P0C8uVCzvElgafQupSwzPMJ52iV
q1Wf6ls1HNVyFKOeiXgNtBbyuTeovqh6UMhvht6OLeCNQo4BJsVdI1WtVD7B
xahzdMrVaQ3m6/5OO9enmHdL1DV41eKlc2PCMapiVdVwl6Yd4yrW1R2ku0gx
lmIt1eDWp13TVG1Td1I75HfEHfsV8a2P4tdC+2I9+bY+4phIsZFqkqpNKien
3Fxt6BOSrtGrVq8czSzoJ5J+i1TDPZBwzUi1o5n0l1A9Cv1BnnNG70R8h+gu
UU5upWqNyD8Udo1LtS7lWJVrVQ1EtZDVMduqGq1qtctonYDfYM6ms7c6Z5x7
Vs66C3CjjGsv6rMxcHbCvpJizB9jrpGpVqYc1Hcx5ziV67zIHPeJOwenXJxi
uqKUc4jKJSrm2oi9Wcg/Vco5uLLgp1L2RVWDaqu3hD7/zLePcG/GOSHlhpRD
mqPaT8y1D9XYVGtTjlG5RsUcM5KucavWrRz2qkLnoJSL0piXqt4BTzrsN1Rv
6WPwFOW5prKZ/n+DJ5pnn/Q88D0Z+86yqYlyWRnfhf+XswcenfRZuAjPKN1N
Sb9lypEOAr4LnnCecz53av5Trq3Ih7tUvkDasbdqqLkxvyl6W8LobwN/TqF9
c9XMO8G/NGJfVDnIqxj78ohrDfoNin6Lopy7cu/KOSj3MAcbEmH/pmQ28Ert
yQL7gPIFq2ec21BOpoZiUWw4mO+apmqbqnmq9qmal2pfLZOufSsm+4a17Jn0
by1UQygP3AsbGoQ9x/OT9gHkC0hnTdVG0vZ9rueOKJ12TUe1HeUgfwCulXGu
QjGWYq3ZMc+F1miI4pOkfWfdMQcjrgGrFqwapGqRR6KOBTTGFRnHZIrN5MM2
Qzae8NnSnaW7qww6fg/7Nzn6bc6XEa+lYvgJhY5pFdsqhqqQdA5XuVzlfEfC
uz7jWEs17zMx52SUm1EMr1h+ADpied5T/YHbRF0rUcyp2HNaxL/lUAw8X79n
UY2zpHNgbWP+zYF+e6AcwUcZ50CVC9WZP6ZckvLX2R7DuJRrYKqFKcc5A/7T
Edc6dIfqLp2l/FbYNR3VdvQm6W1Sn/+IO4etXLZy3g9EnWNXrl057Puj9hnl
O8rHPhC3TyffTjWAa+mrUtprqxxZZeB/ZZxb0W8AHge+Lu1cjn4Dod9CDI+4
1iWb1qP7pbhrr6rJqDbTO+67RW+e3j7l4JWLV45+HLL/SLiWohzlKebmq5R/
i6AcyZ6Ua6iqpWpPvhnxbwr02wLVlFRbahe1L6QzMlO1CfR3Leka6m70/Zj2
b1MUwyqWfUk1/Dz7dOd1F8f92wv5WPK1Ps/4tzuque7V2Un4t1PKsX2dcEym
2Ew1h0TEv3nQbx+0RwaiL5xwLkk11KNRvyl6W9RnV53tIv+2SjZmqZ6Sca1b
MexH8LZPOXem34RkYVtc9fZc37m6e/XG661XTutD8G/S/q2KcnL70/6NiH4r
Ip+pnGrfUed+9Zu4mWnXvFT7Us3uXfp+P+Jci+64Xth3U6F9KeUclXtslXas
oD2qvao3R2+PbJoBvCzit1E5B+Ueyqacy5aP2Bxbrk+4dqociHIhLdL+LZty
LMq1HE041lFN8QjwfwGZtIwP
             "]]}]}, {
          EdgeForm[], 
          RGBColor[
          0.9788939557135373, 0.8172348892838434, 0.5345712627119658], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJxFnXeYFUXWxu/MwAyT7r1zcxjX9CmiggHFHNaIukZQRAkGwACIGSOuWQyA
EcSIoru6a8QsKGDEsKJgliBmUVFEzPq9v3kPj3/0U9XVlbq6wgnvOb3mEaMO
OK42kUi0tSYSdQqPa04k5iUTid6K/1GTSNymxMGKf69M0xXvp7Rl6URibkMi
cbvuv611nn2VfpzSR+q6rj6RuKVzIvG6ns3QldHzu3WNUZ6cwv/oalH8Nz2b
qvgRitepzJ+dEolHdZ+N/OcqfcO6SFN8SuT/Tf05OZVInKTrX7rv3ZJIHK7+
nKA6DtP9S7oGKf94ha/oWqr8Vyp8VdcPxPOJxIPKv5fCX1uc3l/payh8UNe1
KntelN1D6ccqfFnXKKUX2lVG8S7ZRGJWpL+k9C3qPD7PKT4j+vC84sfU+X6E
6tlO4ezI/3tnt3WJ4nMVf0DxlOLfqD/rddF4KG2h+niJxuR3PXu7weELqmdt
pf1Ge4o3d3Z/rtBV1NgXdPVvcbtLdA1XnrcVvhPvcpiebdWUSLypOp7QeNV2
9vMBSv9Q4Wjlmar0k5T+hu5PULuvxne8p5RIfKm0exX+R+18pHhB+RfqO6R1
/cF309xZW/3fROUu1/3ruh5Rnnx8d77pvmprvp7/T/ePK/5Yi9//J4U/triN
Jaq4T6PaVriG6mvt5PbeVDvzdU1qdn+XrPou+h4fK74y47QP491vivd7q87f
i/E/TenD9D5PxTeao+so1X9ywmM/TPGjFa9V/HHFj9D1f+3Oc5rq31Flj1f8
TJXbWfETFa9RvIvyP9vJ902K76JxPI16FR5NuvJ8r/jpindS/BK9X+fOvu+u
/CdHH+7Q2E7V9Y3e8Uil/6T0Y3TdVHS7A/SuvbRej1H53iq/TPcFpX+osVpP
9bYp3lXhLiq7r9pr1/2dtQ7PVf2X1rlflypeUjuLOrv85/omj9S7/Axdo3Sd
rnp21POc4jsof6otkUjq2kXfYIDC7ahb6dtqfHZSfAv15Ra19bTaOInxVPop
Sj9P4/aNynyta6ne67is50tfrcHFavcK5flT91vrOkjx/mp3lubCTF23xjqb
Fd/6g4jzHbmfGfOWdfZUrLVeeo9+qufQGq/FGbEnUHZenctsW+d+vsh619ge
rPy7ql87a0x20jVBYzxAY3hKvfu0gcLeCndT/oc0z8/U+O+mvv9bef+laxP1
Na8xyenqo/ccp7w76lpT+V+p8Ticr76t0LPDmGNK66lwF12bKn6Y2qrp7Gcj
WjyefM+eGs/Bih+l+Nnq549q90yF45S+r9L3U/o2ac9z1vg/K9o31fcxCge2
eG33V72D1P96lb1R5YYr3kXxYxQ+kNO+rXBrfYtuep8f1Y/V6r3+xirv/+k6
T30+V1d3xftrni1UnoMVrtD9BrqGqN0TVaZJZY5XuJuut5XnfbX7eWfn/0zh
oqrT91HZEcpzt9I+U/lb1Yf+up+qcBONbVr1XKD7c3TfXeER2nNOKbhvJyvc
W++8lsoNVLtjdF+r/GcrnJryu/BspO4/UL4rNfdOUT1rK309veMPGqtfVc/6
uu9VTiQ21jtvqPTTlWddpa2v+LWK76f49TmvZepnPY/LOZyput/Qu3xSz+am
ecOa0HWn6v5C/f886XEZp2e16sPCvOcCexn72FW6v13pl6tvh6mOktIHK7xM
dZYVf0Xp+6jNiuITlX658r/P/l/wPtSxXyS8z7Lffq66xun6R63X+HXK35s9
SXNgouJfKP6g+n4tfVX867z3lvNif7lW/T1f8QZ9j1q9R42ujzSWmynfDmpj
Y4WD1fbxKnu6+naI4oMVP4F+qt4vVe5KhdPV1yd1bah+7K/7ZUq/RmEf1XeA
rnWVXqey6lain77pgyl/B9IPU/rJqvMM1XmH2pyqq2ut97Cl6ttJin+q8f1E
1wUqt1xz/H9Kf0FtbKM2nlN4t8Izlf6w0ifTJ5V9tIvpkdeqjm+sdnoUfCZ8
q7ZSZeffUGmPdvZaY809o/Tf9A3O1VrbS33fU9f9anuE+vhVjc+ITVTma8VH
q92y9rqHVM8GSru8i+OTVF9/lTu63nTIL7p/rpPfpVn5+2pt3l42vcEZfW7s
bR/EHjUz9qvzanzGcyZzrp5f43T2QObL1fVuY6HSFsVeNy/qIU8/tXOQrm91
36p2D1H8X2WnLYyzcnCUHZBwuDDiP6mvPXStUHxAjePDFL9b7/mi2t5M776n
3mui4nsoPELX7YofrrBNbVyneFJ5b1a5LXUdpbL1up+hupao7Bvac1enjL7P
74oPU3xGweuCNcF+NVJjOEJXVtcXSpvUxW0OhPaK/pRj/jCPcrqO4B0yXm/Q
D6vr2brsXQqvhk5QW1uojo8IlT5ddfZSeG6941P1bDPdD1T4m/K8rTn3lq4p
Or/GJ/3u26jtaqu/9wbK101lZyh+h+JdVfY59Wv7jM/VK5XeTW2/qjn0iq4f
1aetle9qpW+lsFVjMUbhKxqHziWnN6uOKVp7y1TuLD3vqXKb6iqqzUM0Lzur
jpasacA3gg7kTCbkXIYGHhfnwv7NnjvQY2/pu7+pa2yd6Q9oAmiSxxschzaY
nzQvMIF61WbXVtcFXTw+6rwi5iNtkRf+YXzQedD65yl9eJ1paM7lQUETM9/m
B30PbT9HfWnTGC3qZLp4jaCNOQcurPdZcIr6cLKuvmrnUM2DXdXWtcp3fa3p
BmiGicyxoMPhG7pH/dsq7zbNvt+w2fT6kdA/Lc5P2bvSpuG3CFoVmhU+BTqH
9q7T/aENbvM6lT2/zuv24ITp1itj/bKO3444+8RFdd4roHlfhqaPPOfFGF5Y
5zzwJqRRL3vFXnrnEdDgquPZWqfT1kbqZ4+0eRfKXRj1w8gNj3FmvInDaxzD
/qOruc19ujLqmay1uYXG4vGSeSDS4YOeUz1XRX9Iuyrys79MiL5trbq20jVM
79Nf+8lLevZNzjwafR6Z8Hc+Nmi2fyl9VNCE7MHvBY94a6S/rDwTYs4w5q/V
ePyhlx5RH1eLOTm26D16JWdH2nH26nKLvyVM7GFab3Uq365DZn6tzwfm9izN
35m6XtX9d0ofr2tlwmt6Qq353NcaTFeRznPSD69xOD7yDFH9jUr7UOtyFrSA
rmv07G/qz+zO5g9W07OM6mpX+L3W595KH6v+7K08/9C1WPf3qi+DxIstDBoJ
+gj+uqfm96ZJ3x/TxfwhvOEvBdPqaX23nTq73A5K/1Z5lyV9/u3S2Xk+Vj9v
Lro/f2isFqnNhbpOZw/rZLqx4z07ee28oHr6qL+vwS8pfXO1e1bQq721H61U
X3dTWNV6nF3v92bdDYuy1H14nemxp4O25ltDy25TZ1qXuXBMzM/9Ga86v9fM
tOs5IWE+cLVI/6yT88CPZ6rmmQfmzOPTFrwb8+foaOuWiI9UekX9fK/B9EiL
0rePvQjZwvYx39JKPxNeDbqpxucf591Hmkcpvf/veja51v3nHeEdt4vzlLyH
xTn7TY3fF7rg8EhnHG5MmZ7cLtIGRzqyDfqBPGQtzYn31N4aCke3me5GpsJ7
dYp36ZdyHB4TPiQR+9VTGrcZump0v1hrpC7yMw7Ef1XWrqqzts68Q0Z5P+hs
firR2XXx7Qeq/qs1f95t8f5ZG/V3U9n1dD2mfK9ozqU0V6/VnNpMaT11/RJr
45dYL11UrnOd5TOva+wnhYzoJOWpV3iG0k9SH07Utb/aa1S5ZJ15zO/1vc7g
HKoJGU+t65mtOn6ttYyI8OdoCz4DeQ+8RjZtGhZZ0Mnq10n1Lk+/fo38j2t8
0nX+1l9qHW2g/N/oXY7T9bnqGqHwJ7VV39nn53TNtx1UZqbWTlnjs4bS7mU+
K1+D4mmt6QM0HiMbfD9Q6fUKk0of0eB4CfpQfdtYV4vWz9fQnUpfAa+pqxNz
T/l7pnyOF6FhWAtNpqG6BX+4idJ/aDCfyP32yr8dtLninyEjabRM6B9tDpEL
DdK+M1/j8IPWy+F6/kqD3/lxlXtMVz+9W0rhhp0sU1pacPxbdeIrxbsrvpx4
ye18rbAt5fQX4bUVn65rqOoZrnAbpV+OXE5nwVZKe7Lk8W6LMf9c7/VZ2veT
47uzJyBXXBH84zA9r036/kG9/w8Klyt9d+X7VPHP4mx6PmhRwp8i3l1lN9T1
OvS03vU2XV10Pau0Z9Kui3OffXhurfMhn+yrsv9R2hedLOeCt1ip8PuEaYjv
o2/QvD9GW9V2l1lbY9u5wX3bP2E56LdxRrC3fhdzrz5kA9TL/vp1J++xHe8U
79Vd366Hvtfnuj9L8Rcanb8t7fVKOucB/eGMGB/1w/tvpPHvAT9UG+ddrdca
vP2bis/RNU/9fKPB9N2JsR5ZX4QNsTZvT3sNs16rmoONdT5H59U6Tjpj/lzQ
8FckXZb6GBdoFOgEaL9MnN3U3yXaeiXS2fe+UltLdV2oOn5IWSbym77PQZo3
R+rdFxVMdzwXdfaIbw29j9zi2Hq/35N6nyd0/a3B3+eN+EYXtvr7fpdwG6T3
S3jvz8ZZwDjNi7Hq1eyxGptwXuqC12HsSId+YAzIz5i8EGNNeluD49SD3BYZ
IvTY3UrbU9c5rJcGx7so/8f15tvh2VfTPvMK96IpLtEceYN3SjgvNC/5CS+M
+ASN03hd5+n+sWbzKsuR0eVM1/w95/nfGHLbq8su+57qX03jfUKt99v1NSbd
dI3Rs2MzlhX8mjc/w/t0vIvaWdbq+5ugnTXudYovVJ87Kcwq/3udndYtYVkP
6VuprteV/4iYn/Bg8GK7q9whWjsNypPPe86zRvuobKeU24Nmqm9wHuQUK5J+
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
8TdanB9dFzht7sEqE86L+DT14cWw39mu2bgKMBWPqL2lavfCsucIc2IVbvfN
mBvI4CfEXgQ/eGXEoeGg5SblrZN8pcU2JeWK230YfVPF6RmFSXTNLfaN8GDW
ersxZetOz4n5hu1GJr7fWjnrU99W2a+ytsnpnzfv1bvV5zhY/p1bjeefWPGz
txTeo/AA6FXO2YrpLmwTr1N8T6XXqu5t07bjBgvyQMn74IMKv8va7r+p3e3s
0eq9jnDPiE+JPhDnnOiw968z7mD7VtuDn5/zftO9aFwntkHYTcOXtARvwtx/
JfbGZ3PGHc9GLlex3GldxZ8o27Z5M/Xr5qB1sVvHrgz7sidK3htaYn8YX3Ef
xil8WmVP1Jg/VfZ+xj7PvGK/wa6S853+VFpd/rSwQ0T2O0z3J7RanzGq2Xa/
2Py+XHF6MWeaBXksmPPVcsYnbaRxvj/ODs6Qt+K7bFUwbvyikKcRXhhysz6t
Xqd8L863MbGuF1T8HJ0S64L84G/RKb8e+il4MPiNj0veD/pE2f/pXbaO9+E7
b6Bra9X1cdZ2oR/ouwxX/WXmQNbruhx7HbYU6JrQQ2OTSdk9VHZ9hevp2qiz
51ef6PNZrH/FP826bZ5xjpO3W7RLf9aLOLg87AXA5mE7yZpkPQ5t8T12lGD7
wBzzvg9lvb7RaTembZPAus1VnGeanv+SN173F43HkWGHhnwMuh07DdYdNr7I
35G9d4u9ijX7QtqyG+jxp9O2fYI3n63wNWgAXatVfF5UK94vaP+istc+dYBJ
wJYLG1NoeORA0PbUCW2O/A76fLd2Y6AfVZ+fT/v51JChIT+jf4w748+e0CVv
2zts0LFXY99A139WF+NqeE/0Sx+FfhAamnnJnPwm4uiteFfKUkdjxTxaQ8XY
FOgabLiQDSwKW1loqky9aSneiTTeC/0tdvX4bkCmj8wc2XnnqnUle0JHZ0z/
YoeN/T0yMPxadOBi642hHdpmDMSy4MtXySFOSFkPB0b5qox9LIwMfRe4WHig
jdFjqY43y6bPWGs3Z/3t+F7Y+jH2+eCtoN1+jPcstjmtwy4sZDLIZoaWXXaG
6h5YNkZkQNl4hC6BSeifMgaC9sAakcb+jXwRmfmqc+7u0Mki/0O/yfvjv+HB
Tsb1gcXE9w70JzQ4mC7ocOwtO0JojxrbW36s+BdZr5umgnVTW4d+6rXANYFv
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
Yw/kPOIsYu7C424T8qj/B8/RBNM=
             "]], 
            PolygonBox[CompressedData["
1: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
xSwVu6xGn3/kOEaqWKkKIeTLygaTLXZ92GORTy/fXjEjxY7kQ8uXTspnyLGP
L19/TNxj28HvU4O7vwf4rhzX+KjWp3LYayub8wHwoXHHQtezPgsZ6/tJ17ZI
Zolyj0nHPvTG6K05mbRvrDX9I+k1/Xdtc13r9DltRa5z7i1Yv9eSjk0pZnUq
5BoZ1cqI53b91gnbPrKJ7wHeIh8FeL9yGIp3ph0LU4zrWcUOQ56bak76Jswj
XtmIP0BbkHZsTDGo51Q/wJh/zvWbqLfxjYTfIq1Z77jfSL2V8pE/Zv1aQ/8a
fK1yCMCros5NS8fghL+JppqfBgnXOKnWSTGTJsi/lHQsTzG8k4xnfNK5tePs
qe/B+8O/K9c2imyVt2g7c/1NtOfBv8vznaK75cWQazHkI1+Prkq0T/Icc1bs
WTl75e51xtbIF+Hb/jzHGBRrUE2Lalv0rTn4I0nHPhVTVGyxSty2pMbQD/kO
SceylUP4MOScqHKjn/HtKmifJhyLlk8v3157RntHMYTBjGVuyLUb8nErw99F
8QWdf/k/Sb9RequUo1qg2F3SumXTP5xwDYRqIbQG9ZK2+WX7642ciP53YvY1
VeOwIOQ7Vnet3li9tf0LXeumGqP7gAcWuhYuvyS+JnDZkGvVlNNWbls1H6r9
UA3Fv7UUccealBPMgzao0LLak9qbHeOOLSkmFVQsL+5YmmJOJcAbhlzLpJpA
1QaOgL6uhGskVCuRz578kLfkKOvVjvG2D7l2Szy9xF/oWIxq6kaq1qrQtRWq
yXlctU/I70b2sN5I1V+lnXtZDF5JucKQ95pqpFQr9Zp84AzXOKnWaYjuzCzn
vJX7lk0o21A1YxnKTUVcW6EaB9U6PB9xbEo1X6r9eibi2gHVKKhWYX/EtWyq
yVFtTqWoay9Uk6faPOWklZtWDZBqgSpHXRunmkbVNp5POJahmg/VfiiGpFiS
ahxU66CaJNUmqSZHtTn1oq6lUk2HajtqRu2bqaZCtRXKmSt3rhoD1RqMiLi2
SDV5qs2rEXXthWrmVDunnLpy66q5Ue3NtIhrA1WjpFqllyKudVPNnWrv5BPI
N1BNlWqrGqFvVYFt4IXytyKudVPNmGrHuoQca1ONlmq1hoVcy6aaC9VedFJ+
POCaL9V+tQu5VkU1KKpFeTjk2k/VbKh2Y27auSflhBvS11Mh14Kp5ki1R6mU
94Zq1D4IO6aj2I5qelTboxivYr3KQSsXrZiYYmOqUSiutQi5llI1kqqV3Ji0
b6U3Sm+VYlyKdcmGCCVdM6PaGe3poOKhSdeaKUa3Rbk97fcC5+yUuxsWti2j
GjbVsk0LuXZGNYaqNZTPKt/1TWR+095OONb4Afg58F/Tpilm8TKyf6VNG0f7
J+IYp2Kd+k1yCh3TUGxDPpl8M+XolavXmC6A1wm7lkk1Zqo1uw3+dQX2weSL
KWar2K1iXop9VQ/b9lcNp2o5ZUPLllaNk2qdvo76LOo3/Urx5ohrRVQjpFoh
1WyodkM1VKqluqD8RKb7LAVeLuTaV9UQqZZoccS1cqohVC3h6xHX+qlmTrVz
v6j+sMBvgt6GqUnnHqrwbXjaPoN8hyvBh4IPS5smG0y2mHIoyqXoTmkXs48v
X/8a2ui0ayBVC9lK/r1qF5O2ZZUTrwa8MuLavrugz4H+Ytq1o6rpfCntGKpi
qYrpKLaTCrnWdQ74LvB5aeeaVRPQUfUxEfetHI9yPaWi5lVMUbFF1cSqNrYX
+Jvgn0c8N8V8FPtRzl25d9UkqTaptHyOAud0M1RrFvFYFdNSbEsxJMWS9Oa3
Ab495tii3qyP9ZYlHRvQHTqTvj+POZZRVD4X8NUxx94U01Fs51K92dnOmSl3
phyMcjGq4TxDf1fGnPtXzqS4+op4bRUDUyxsZMy65cPIl3kQ/M9s25SyLSen
XculGq+n0q5RV626ahTfkf+Hvqyc/695TfuN0VujGuI70o7BKRanmJdiX8qJ
KzeunL5y+4oxK9asPXk+7BiuYrny2V6JOWaq2KlyHsp96Mzp7KnmV7W/ylkp
d6U1P5x2Da9qeUOqSU67Bq4lv39A8TvwHmnTNGaNvaN8jALHZBSbUc2uanf1
rZP2CzyZBY5BKRZVMeJaWX1rm7aNIVvjFPNtDN407Voz1Tw3S7smUrWROjNH
wY8knOuej47Dim+kLauYgmIL1WKmKUdZVfEozTnomIRiE6rJVm22vrVQ/CHi
uSkmptiYcmjKpSkGp1hcIu3afsXYkmnXAKsWeKVq5NKuIVUt6RB0fAH+U8R7
XTXCqhVWDatqWRXDqwP8R8S8ikErFr1U/mmB96D24gdpx3r17UPgdMK+s2yA
wRHnYJSLUY3ExKRjEopNxPnWF/63IoZVk9tb6xvxWFWTo9qcEmnXBiuGWDLt
mKVil6qxLZN2DZVqqVQzW4LzMAD6tqBjyIolq8ZTtZ6K6W2g/9lR1zqKp1La
MWbFmnUGHmI+e+L+3wXl+JXr/z/g+ezG
             "]]}]}, {
          EdgeForm[], 
          RGBColor[1., 0.9499999999999998, 0.7499999999999998], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJxNnHe8VdW1/c+959Lkcssp995zzwUBsYEFMfYuIipNRDQWNM9ETTH6jLGC
guXZlVhDiYjJL7GiWGKPPqNiYiImalQURUFsUZMYn4UUf+PLGHzMH+ez1157
7dXXnGOOOfcZctQJBxzfWCgUBvQpFIq6/rJUKPy1f6EwtVYofEMPNtBvr4ZC
4WHdD+lbKHyq57u0FwqXtBUKG6v8hSkzUWXOGFAofF/vPqr0MJX5i/I/0u/S
Jl1V/1BddygXCmN03aVHz3V9T42upEyb36VO3j9O6WG6jlV7o5TXpev1Kj9F
ZecX3P6l6cOflfe+fvup/ETVd7Hyt1D6MvXnUN2fr2d9Olx2hK6T+hUKgzSW
J/Ts6mqhsKHyx2RcO7f7/TdaPd6NCu4L7VF3a2+llT+8V6Fwhd4dqPSPdH2h
6DR1fqQx7q3n2yj/YvV5hcb+gOo5WXmLVOaHul6p+q/Q70w9n61+Hqj8cUrP
VHqG2tpb6ZV6/zjlv6nr0l5OX6X8q5oLhTs1vgdV53D1d3/l76D8U7oKhcn0
QeUvanE926vczUpPUf5YldlXfZmq9ASlX2hzm5eyTk1+d0ddL9Ba/03XBzWO
ZXr3IpV7Wddv6jpUZd7RGM/U+l2l+xm63qD7D1THuLRFPu0dUfW6Tyl5rZhD
5pJ1vjTpT9TG/hrbPqrnWJWrqI4duwuFL6tOk7eB7teonmOVN1vlD1N7ryn/
YP1WaA4eqbmOeWpzkq5Ha43Kfb1fZumdAUrPrLrvjGGR8teo7b9r/r/Q9RrV
86baulZ7o65xTNNvter9uNVl3lV7G6p/berD6So7Te19rvceUHq9Xk7/TnWe
1ej6RuvdhW2uZ7TqXa33G/XuSKWf1fOl/V3n8rrz29W3T7Qnj1D5t/XuwEan
eXeHqtfsSLVfVfmBSp9f8pnk3E1S+fN7O/8O+qn0FxpnUc8mqO/j9fuvRu/Z
u3p7397e5LNNHT26Hpn0Jnq+RuX66H531Xdbr8gA7bGP9c4d+v2zweWZn0Gt
bmt4H++1M7NvmVvm4TCVq6pMRb9H9F5N/d5eda7SGjZqTVv07kXKm9vgc92m
69ka71mqo6Tnb6rctirfoHFfrb5dqfJzNMZbm/wuZ+fiVq8pe/LuSqFwvMpN
1VzN1VnYTO/O6fLasAdmq/7Bam+M8ssq8wO9M0xnaZHaHqz79TSOTrX/faX/
pnqP03Wm+rBA779d85jYE6zvtp16T2s2ust7ZE3WlD14cW/vwwdLnoOJ2lfv
6b5F9R+t+9v7eS+doPQpera+rgtVdmiPy5wYGfw3/d5q8n75OPtw9HruW896
Xp+JTd4Hp6ufc5TeXXX0qA/f1u8U3T+j3yN6f6GuN2t+jlLfpqjMdro/X229
r7GcqvRgzeF5rJHq2lzXlcpfVHR+R65Dkt5Ba/M3zdsu3Zbtw3hX14f07k56
d5XeHapyi9Tu5UrPrrpPD2usuyo9Te2erHm7rY/78Gu991f1f6zGU1HfRrZ6
j7HXPld/b1CZz3Rd2Mfp3yFrWn1OtlOZKzVfVT3fvMdnjrPHu/cq/Qtdby24
70P1W4KsaXWf79azy/s7nzn4ndI/Vfrp5A1J/kzV+67m+1T1uVt1bpkx7qd6
NqS8yvTVuD5WHwap7Hhd79d4b+jl/TVWZWY2eX3QB2/o/bOa3Tb176vn++k3
W+nbBjh9q66/0O+M/pZxCwe4nmv17jYNzt9D+c+qP7s2eB3Hqj+vMl79lmYt
3lP+/Ba3Qf3US/pxPbuq4r5OUp83qXmfv6+zNl35Gyt/vPL/gTzOfpit/LHK
37vusT6jMd6kdn6k/H10P1Hlx+ha0O9A5c/SHni00X04ouYzcmTN49gnc3J7
f++TS9XGDQOcz1g3LnrtfqJ37+jvcpR5rdXpWtE66UKVryr/U83/ESr7W10n
IO/1e1f1f1byudmr7rLost83GnsM62v88XKjn5E/S/3bRGtztq73aE++r3Jd
2uc3N1jnspcY64Z6989Fy4xZfV3fA2Xr0cEq/5za/TtnQnlrqu7PF7o+wDz1
9fl7XmOZpXZLavdlPTtddf9L11HKX9DPcronshk5f5n6NQa9pvuLWyxv0fMn
ln0OV9Qs28arzDa6v0x9uEjX7+v5nprT7Zn/XpaftNtT9PiYr22bLEeRp+jH
LfTOzoypZpmxhcr8vWjswf69scFtsBfRBb/Rs2XJv6HN5wi8wVniHl3Gubwh
+ZcUfZ45y+QtTJkzsvdO1jzMGmA8hE5Zd/7nqK0P+npPsB/OrFhvTdDeG6K+
3gVW07ivaXL6HF0PVP4SXReyPqr3ZL3/YfAA6duajFc2VvkFmp/Rut9V9yVd
j9I7s3TdTfX/X7DKZ3r3Ne2nZepPd8mY7m6926F+PKL+TtFYfqXraV2WG8iP
Zb1cHixwWsV6elyPZRay6zjlDal6Te7ocN7Hqres6xL2qMb6c/0eKlmf36gy
O2tcz6vdn4EH1M4L/a2n11M9X+i9V+qWsW/o2au679fPWOKj4BTwCvqJd6gH
/Q6uAl9dofpfLbk/e1asg8AuQ1R+suo4gLHr2Qhd31I/P9L4ftnitpDnNbW9
RHPQpevtjda187R2E1TXXcrvq/wnVN9/K38p56rR6dkFy0zKI+vKyj+paIyA
zlzd13rzWfXtPbAJ6689u2mr89HJ3CPXurUO27V6H7NGrA/Y+4Le7v+/ld6/
j8fDWI7p8N76huo8WuuyQmM5tGS8Bb46U33eWH0rtnks3y35/IMdpvUYM43S
3P9BdT2p30vq8+4pD6bZtOr5Olxlj9BvD6W3Vt7O/fwuWAvZSR/Y2/9S3//d
aluitdn3yIGvad1/o7nbRtfdih4D/Wc8k4MD/1Hxmv9BfW5QG+8q3dPjZ5RH
L/9S7Z2s+wXBnIdGn4KBGNfN2ExV47vDeiyP9kg/25rdN/q1Y817Y4eax7Ei
2OTOrB0yvKh+3KJ1b9L1buX/UPnXKf90Xc/Q7xal662+x1aqqsxpmUNky+kp
w9yeqt//U/4pSd+s/AN1fSS6hrNCnZwXnp+WMpyjU5L+uq7/q/I7q8xeLcYh
yOTTlD69xfbAnGbfk57EvBWNjdboN7loHYqOpW3aPUDXKfqNUXpli+/fLViH
ko8e7VCb03Oez250nduqzHhdJ+j3WGxY2sP+3T/pbWPzXhw79OuNLr9Nwc8n
pgx7rSn7jTmYnnlDF56tPj2s904Ao2iN/lAyfmAexqrMf1W8/zrrttumt9hm
f6bZY+Hd6Zkf8rmekfm5K2s6X+m+vVz/X5uMB5AD1Ptk3eU/UTuPpd2D9Oie
7MPnGnw+WaP7wWwq/5zeHarrUL1zjtLLpFuPrHivV5R/nuo7p8Xjo5+McWbR
13OSBgfOiH7aotm4ZKrqvy/56PTvdRo3HdjpfTQra7q02fVSz5bNfn9a9CY6
E3wDXmDOkQ3fVL96gQmRra1Ov9hoLA5mAi/BmXBuOMvgRfKPLHm/gTHAGh+p
jeZmzw82+ge9bacP7HF6WslnkHouaDRORkdiM4Ntwbhg8tnNnk/OAmcI/cz5
wpbGpv521biHd9Gtx8jW26PJHMxmerePZNMdjeZC4ERammxLY08Vui1TkC2H
lMwpkKY/7c3uH+kvK9Yb10mefKfuOm9V3te7jJEP7LKdSP3wLX8qmk95InMw
oNkczqG5J438W6nyT/W3HKIt5ORF1IM9p9/yVuPFWmwR7pF7yMDlyQdLUobn
Pwqf81PJsclKL0dHa1xXVs0XXVW1/cFcg1suj12DfTOrw+v8TMn8xnHhwa4J
zvhLzbYpOhj9i2ym/scbras/z9qtqVuHnqA5ubfN+v8W5e9Z9D3pS5p9/zxy
Ses1sd3PTu80j3Cqrg/o+Sj9blKZ0bp+iuxpMPZGv6JbwcIXhtsZyf4O5j6T
/aDrj/U7iL2FTtBvOHJA5a9usu3D/GMzfK1qvYBOo52pjW7r3EbzT29qzl9R
ekTSZzS6zFyl5zTYVmjX9YsG6583lP+4+jRB7Y3Xr9Ltc9ip6/G69sAVNltf
rAguekblh+fdz9PvtTqlzeXhH+Ah6kmvfR+bsMG29dLwNuAFcMO3tJfOa3Q+
exc8CZZ8kbmIrsT+Gl6zfT1P6757xdiio26eDnwDtgHXkG5ttC5d0dd8wGT1
oar1+g42cK5XYV9r/e7Q/f7aA1tVrVPBF8syLtaC+p5MnXBF4GzwM+fiqeRv
De5VelTNfSAffPWQ0gfr+deUvr7ksos7zD280dccBTwQWAUuiHaWpM7VDX53
swavP+2t5UcarJPQR5vVjHvBv+zrI4Pzj+lnDMM5hWeclvH+vr9tb3gQeAHy
d9G43wHH6/31tO43trgfzOv0/rZ/sT2wM3gXmwJ9fMi6vundE1X3xWU/f7r/
VzwL19M6PRbKs+6Ppf+8C3Znn/+xwdcp2fO0OT32OHb2dfotUvrJqu2Ho7RG
S6rmcp/Staw+j2j2u5wd0sjSxY2+J039pGnrw4r7fE2H9Q+6Bv0CBsdWbGnw
9bmkD036kwZfeYYt+VazbZYReq8O/mrwum8IBm+wDITXva/Vsp8zxlm7Tc+P
ypn7TOlxSZO/7v7C8ELjks/ee6DNvCXj2yzjgjsZHP4EbEC74L0ZdfOVSyrW
o4wRXXxBh+XxKyVjf3QpGPtqpX/a2+1uHYzAvP9Z8/tDzfMHVeMHxgiOvVTv
3d9mGQn3tTA+gxearb9pEw4ULhTe/zX1Y330QcnPR2bO5/eyrb5rMMOWyeeM
0p+r0q+fpW/zdC1pf8/pbSwAJgCDcd04HCN9uq/Nsnto2bb8w+r/70p+vqn2
+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
+jIo
             "]], 
            PolygonBox[CompressedData["
1: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
2w==
             "]]}]}}, {{}, 
         TagBox[
          TooltipBox[{
            Directive[
             GrayLevel[0], 
             Opacity[0.5], 
             CapForm["Butt"]], 
            LineBox[CompressedData["
1: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
f4r/AfZet5s=
             "]]}, 
           RowBox[{"-", "2"}]], Annotation[#, -2, "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             GrayLevel[0], 
             Opacity[0.5], 
             CapForm["Butt"]], 
            LineBox[CompressedData["
1:eJwl1Hlsz3ccx/HPiAht17LSoXVT/EEk2xx/bK5IJPwxFopR9x/ujSlxbYs7
yh9C/WFbtOY+ElebWOfYoqgjqlqtTbvo1NGNtoiI6/GNP559ft6vz/vz+X6+
R38dpswbOfeDEEK6P2OSQrjTMoQbXIwrH4UwtnUI4zEOTdVp8pgo53Ufm+NY
9TiO4695vXwif6iewPGczhvkkzlBPYmbcQlf45t8ladwc65wjtFRf3IIg5s7
m3FDWWViCNltQtiFHBTpLbOmnEu5jG9xI71Veg/o+ZcP8l/mlruPal7K93hZ
dF96HxivMP4eK/HENXvKeyHF+mrXv48HaGvuEz2f4oj6MA7hhXyQrMBeA/g8
D+QLPJgv8hCu1Vdg340tQsjEn/K+8ir59lYhZKGP+jO8ko0y38lzyDD+zngx
d1Z/ZfzWeAKnqn8wXmT8I3dTTzRuED1rdFevlc90L+u4h3qqcYpzJCNBPdxZ
4nkEN+M31uWbe83tuBhfWtsbKZ7nNOuTeTr3N9cPJc6che3YigbmtnG+PW+b
L0cZmsjveU/tOcd8DO+M3kX0fvl3/bc801KUIF5+VJ4uP8m5OIYTOI7T8i+i
52PPRViAHtE7dR8Ljf+xRyWS7FOo/6nsP+forudb45byeq5Djbyb/BvjFvJa
foJH8lT5fONE+WP+Hw/lXeU10Z74W13hWvOMu8hn81zMwefOmGq+D9/UU4wr
nuFlxNnzPD/n6/Ii3EBn/Ze5EJdQb/4PfY04n+u4QH4BF9FR/zk+izP4Tc8p
dHCWXN9WHqqc5S62eBZt9eeaz8NJPLZfG1lr5FmfG333xvdRjfb22WTdZmTi
pfpn637BPnvvxzP3t0nvU96r3oM47yIWr2U79P6EX+W7US/L1F/Hu9Q5iNHb
FLX2X+U6a7A6+j/Rdxet5DPcwwHnO4hh1o71HdTI96n3o52ssevc0TcV03DC
3seRpO8oH8MS+y7GTmuyMdS6DHWFnnJrKvl29BunNxYZzlUavVs92/RnYUj0
TmUzZSU8ixN5DKdF59ezFgnR7wSK7Dc66f3v7jsNd9yb
             "]], 
            LineBox[CompressedData["
1:eJwl1Hloz3Ecx/EPoZQxNsfcWjZZzs2RnKtN9g/NUWx/2OSoaTbZ1MacpW1y
TGPMHxSRosj85xj+cEVyyzW3KcTGH1ge3/zx3Ov7vl6f9+dTvw3JX5Vd2C6E
kODPiV4h9O8ZwgAk9Q+hrEcIi+USkN4vhOr4EGbQ7XSmXCby+oRwrHcIx9EF
Mdhq7jbdQtfrqUAjLmGH2XW0HI95PcG7BD1xzqTJKJMrxy7fu1GD8fonRDPm
r9EcO+bir/hu5EPr6FO6n16mV7HAPa7QLXo3Y7RahXgkz1EYjYn86nEQB9Cm
firaW/9gZPFYJNfdbA7tSmPRDUvc8UffEFrwHT/Rij/uk8ZjHGbyyEaK3tn4
7M2aUci3UbzCDpfpJG+W53sxjpjvwGeQuY/OyeOTjwvOLxGfp6X0vnqqvuvR
W5tbh1hxNySqJ9Nh2CG/E4/0jRXfMbdSvYFPAT1Hc6N3RWfx7Oie+k7ao9Tc
WvyVb0OGPTPRxKtG/x58ivrdp5luN1eNoepn3PM0qsSV+MHvDX2LV3iNJuTq
fU5f4BmS+LyM3lT/S2ct4ZGPDfI3nJdqj7EYg1nusg1HeXwVf8N0+07DVGw0
kya3VM8y1Inn2HU/rcU8tX00m+6lc2kir1Y6Xn8LnUAbnHsWq3kWowi/1H7i
j/xvTLZvmX0X2XUhvqiNiM71vQLL0V58Qe9FHMYhdEcsCpzbI3pr34P4DES9
3BpxCYrsl8xzFR1G63jFeKeVeuLNxWGKHRrpcD3v1VLoB5ohvzn6fUa/Tdw3
s4nnPVqlvxIHUY+PcpVqVchyRjUeyBXZ/yEt9n6rUYRaXrfM3MR8Zzy0V6eo
n3ak6TzS4v//f/kHCJCnuQ==
             "]], 
            LineBox[CompressedData["
1:eJwl0jlPVWEQgOExcWmgQVEIQmKBiYWF8gfUgAgG8F4qA24sUZRIBUgCcg2a
sLQIyu6S4BoxFBRAcKms7OBHQOMCVAjPicWb98x8M/MtOSca2tL390XEOPqO
RJw+FnEvL6LkeMTHnIhW3x/4VkFEA26iCY2YVX+db6AO11CPX7kRHXo28yNG
DkcsmDnKb1Bq7ixXWqvAJTwV/+U07/Ikp5IYtfgkLtM3x9NYMm+Kl7k32cd+
D7lIbSGynSELV53vCqdQhRpUY1H9j2SGnpNcjH7zuuUzcg/UfNHbyV+5i1d4
lNd4hFf5gDNd0LOfD+Egzot7vNm55Ez8/Kj7mDltjxlMot5eU/zP+g7a9dXJ
/XT2MfkJ3JEb5xb+rL/a2hxX8Ta28ExPMy/LN/Gw+Df/wUW8ky/n9zxo1m2z
hvgJ93OGL+sZ8L3lHJsoFX/T8x2P5M+oyfBZfmtOi5q7GHS/Acy737q32MAp
6y84pfYlz+A10uJXyftZf5z7/z/bAx/rX+w=
             "]]}, 
           RowBox[{"-", "2.5`"}]], Annotation[#, -2.5, "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             GrayLevel[0], 
             Opacity[0.5], 
             CapForm["Butt"]], 
            
            LineBox[{4636, 6312, 5098, 5557, 5556, 6773, 5085, 6772, 5086, 
             6774, 5464, 6770, 6771, 6303, 6304, 4631, 5554, 6758, 6759, 6757,
              6761, 6760, 5463, 6755, 6756, 6292, 6293, 4628, 5553, 6739, 
             6740, 6738, 6742, 6741, 5462, 6737, 5066, 6275, 6276, 6277, 5551,
              5552, 5068, 6097, 5067}], 
            
            LineBox[{4659, 6339, 5845, 5123, 5469, 4690, 6342, 6341, 6340, 
             5124, 6809, 4899, 6823, 6824, 6820, 6822, 6821, 4692, 4661, 6350,
              6349, 6826, 6825, 4900, 6843, 6844, 6840, 6842, 6841, 4693, 
             4666, 6362, 6361, 6846, 6845, 4907, 6861, 6862, 6860, 5144, 4694,
              5473, 5146, 6133, 5145}], 
            LineBox[{5120, 6804, 5121, 5665, 5664, 5360, 7097, 5361, 7098, 
             5119, 6813, 6814, 6810, 6812, 6811, 5667, 7103, 7104, 7102, 7106,
              7105, 5126, 6122, 6123, 6119, 6121, 6120, 5669, 7112, 7113, 
             7111, 7115, 7114, 5134, 6858, 5138, 6856, 5137, 6857, 5672, 5673,
              5139, 5852, 6366}], 
            
            LineBox[{6283, 5836, 5072, 5634, 5633, 6286, 6285, 6284, 7073, 
             7072, 5073, 7077, 7078, 6287, 6288, 4625, 5636, 4629, 6300, 6299,
              7082, 7081, 5083, 7085, 7086, 6301, 6302, 4630, 5641, 4635, 
             6308, 6307, 7088, 7087, 5096, 7089, 5351, 6309, 6310, 6311, 5644,
              5645, 5099, 6785, 6787, 6786}], 
            LineBox[CompressedData["
1:eJwl0UsrhGEUwPEzhQUpxp1JKZZyiY1v4FJKxIYFcpkFH0KxEcUOG9etBQsL
UWysfAMLlMssNEUxY+M3Wfz7n+c855zned63ZXp5ZCkREWn8NkTsVEX8cB65
wrom4o3f8YoV+xm+SkbM8bF1cWPEqrr+pogBTMvP4FLNVG3Ek1yD/Udu5Gfe
1pcV31frqzeH2/iEB7iLJ7lITdaMb/EPXqynzM2J81ivi9hERypigzt5z/6N
eAGLaEWz89Kc4wve5W6+Q4+eMz3D7nzOaetD+V4+4i0cYB+neHCHL3f6RMId
+gpvUBviD9+iksfkynmUKzhldkbfmnPLvH9CvpTHedac28K5ahYxJD+IdrUl
5p3wvPx18v8f/QE57ULc
             "]], 
            LineBox[CompressedData["
1:eJwl00lIFGAUwPHXoridMmfGaTwIKWS5RIcujUtFm9Eyljl2Sg/RomEaWdJx
tGNFxyKoSxAGdbCOEWSL6aVDkN262IZaULfoFx3+/L+3fO99Mzq1fedygysi
Yg6vExF7qiKeYAqfcHxNxFIqYhEf0hHr10bMcx3/0Z+Rr81EDOqrcR7gTesi
GrERzWjCkP4GHuYNfJ6PuL+fZ/iAXd18FJ1yOe7CQfnDfAgXUW9+lX0Len5V
RuTNuu3cw7f4QnXECIZR4Z3lKElGFGO3/gJneEq9hk+Kf3OTt0+43yRuRgs6
7LuLe2jHFvUh/mxXHepxzfzruIFqM9JIIIUkfuoZ4EE0YzNakDOrnCtQii5x
Ga/2rlUo9bnfu7tNvl2+A1m0oRWT6gVvKfg+rjhPO79AVv9zXvKeRazUu0u9
Hyf0jpjZx8V2FKFN/7K+Vt7r3phc1me/L+50t8h380iumLvk884fzcqL+/Vf
dh7DM3G5ehlK0St+yOM8yQWe19fD3+3bav4X/oav2GnWK++66n1v1SZ4llPy
SdxEFRKYkS+ov+FxfuleVn6aL3nfKO6o9arts++dvT98lgV7GuVH/f8si3eo
PXbvjPpZPBCf5lM4Jr9dPOfc4P2z3CEu+fc3Ej8Vpyv//2b+Akbkaps=
             "]]}, 
           RowBox[{"-", "3"}]], Annotation[#, -3, "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             GrayLevel[0], 
             Opacity[0.5], 
             CapForm["Butt"]], 
            
            LineBox[{4626, 6290, 6289, 7080, 7079, 5075, 6751, 6752, 6748, 
             6750, 6749, 7131, 6906, 6907, 6905, 6909, 6908, 5076, 6768, 6769,
              6765, 6767, 6766}], 
            
            LineBox[{4627, 6291, 6754, 6753, 4883, 6730, 6731, 6273, 6274, 
             4623, 4673, 6726, 6727, 6725, 6729, 6728, 4873, 6735, 6736, 6732,
              6734, 6733}], 
            
            LineBox[{4667, 6363, 6848, 6847, 5472, 6852, 6853, 6849, 6851, 
             6850, 6943, 4672, 6371, 6370, 6864, 6863, 5474, 6868, 6869, 6865,
              6867, 6866}], 
            
            LineBox[{4669, 6365, 6364, 6855, 6854, 5136, 5735, 5736, 5445, 
             5461, 4668, 6942, 4662, 6352, 6351, 6828, 6827, 5132, 6832, 6833,
              6829, 6831, 6830}], 
            LineBox[CompressedData["
1:eJwl0ktI1FEcxfHf9KB9ZRmWOhJUai3ylT1GWmQGWWgLo1oFbVVUpKkW+WCs
RdA73bQosE1IPjKooAItCEk3Qe0KchtEUZaifoYWX8695557fnf+TPJsS2Nz
IiJeoSA3YjYn4hv2b4jYh8G1ETs2RkzxatZFDPNS9C/vH35jDn8wIFNEkyhE
x/qIBG3Vcdy9FpqzySBeKUrwiFdr7n3ZQ7QOh3HdjCfORzCMdrlx2kbX0NWo
lTll5qh1PX8bStzN6HrP22ldipBrM78dD+UfYAH98gfy/B7slrviXmv2nRhy
dp6mkS/biYu8x/aXaNr+mnyFOU1+00kM8p45K+eV4Q1e4wS/271V3jFkfZD3
Wa6Ol0G92S90HaUvaS+vB+fs38q+QwoN9unN3oELmJa96u0ztNHZvP4x+6dZ
7MdRbM4x1JibcGclVuCjO7fl7uAGbuEmPsn2Z7+3zADN0Lu0izbpv2e9oPeH
9y1ZL6JSVyWvCmWoQDk6dFXr3ItC+yIksUv+ND2D73p+0Z9ImXHEjAnfMqO3
D1W8auzBpL4uXd24jF70YM6dETqaRc8YtsvO6N5Kp+kHfNX3BXnyz32PLdb5
uf//98syoG2p
             "]], 
            
            LineBox[{6036, 4945, 6601, 6035, 6602, 4943, 6599, 6399, 6400, 
             5874, 6240, 6238, 5177, 6202, 6203, 6159, 6201, 6200, 5543, 5544,
              5206, 5548, 5546, 4786, 5534, 5535, 5620, 5619, 4862, 5608, 
             5609, 5533, 5531, 5682, 5589, 5590, 5200, 5490, 4725, 6182, 6183,
              6180, 6186, 6184, 5168, 6139, 6140, 5871, 6395, 6032, 4940, 
             6029, 4941, 6033, 6445, 6635, 6637, 6636, 6059, 5947, 6522, 5948,
              6075, 6653, 6654, 6652, 6480, 6036}]}, 
           RowBox[{"-", "3.5`"}]], Annotation[#, -3.5, "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             GrayLevel[0], 
             Opacity[0.5], 
             CapForm["Butt"]], 
            
            LineBox[{5343, 5775, 5389, 5391, 5390, 5707, 5189, 5706, 5388, 
             6164, 5224, 5913, 5914, 5915, 5739, 5912, 5911}], 
            
            LineBox[{5345, 5776, 5412, 5414, 5413, 5740, 5190, 5708, 5392, 
             6147, 5191, 5879, 5880, 5881, 5709, 5878, 5877}], 
            
            LineBox[{5367, 5783, 5742, 6435, 6434, 5916, 5229, 6165, 5411, 
             6162, 5222, 5904, 5905, 5906, 5737, 5903, 5902}], 
            
            LineBox[{5368, 5784, 5674, 6437, 6436, 6948, 5230, 5951, 6532, 
             5952, 5223, 6163, 5909, 5910, 5738, 5908, 5907}], 
            LineBox[CompressedData["
1:eJwl0r1LVnEUwPGj/QdqvjwKEpRT1mQFiqmPkZKTg39AteaTGiS+oAaioA01
uLUZRCU2VL5QOqgtZqg0uRiRSjj4MikK+rk4fPnec37nnN+5l3vlYaa5NSsi
xlGWihgpihjFS4xfjniL77kRV51949WCiCX+wq/4M7/mNXWrSOurQy0OsI+M
/B4a1K3z9byIPn014rP8iGzPl/BevJDMxyKOc+xTErGlZhufCiOa5B7JLZuT
4ht8UBxxkw95wOw7/IIr+DZuYUzfjJocc3KxiAUMe68h/HVfv/l9GFbXxu1I
y9fjj/6v6jd5LHlHuVNzT/DR3oVyBcjHDyzht7NqPe/03BPXo0quEk/dcZdr
8EC+CZPq0ur/22dF/AtFSKEY8+7ZVr+Dx3bb4n+Y0LOr900yx149zrpRqr6D
n+G+fAMaMaV+GlV2OEv24fAtj7jXnDa59mRHzPqOHTzFGZ7hJzzNrVyufs7M
eaybuYZRs7Lc/VNuBcuYE3ea/xwf1LSINzxXmLOT3Cvukh/0fC118S+eA3Oo
Z+o=
             "]], 
            
            LineBox[{6204, 5258, 6158, 5257, 5545, 7303, 5733, 7304, 5547, 
             5937, 5536, 5017, 5618, 7306, 5683, 5151, 5532, 5150, 5591, 7305,
              5725, 5489, 5491, 5252, 6179, 5253, 6185, 5167, 6141, 5695, 
             5170, 7313, 4942, 7309, 7315, 7316, 4996, 6060, 6058, 5038, 6073,
              6074, 5020, 7312, 7311, 7310, 4944, 6600, 7314, 5383, 5701, 
             6239, 5176, 6204}]}, 
           RowBox[{"-", "4"}]], 
          Annotation[#, -4, "Tooltip"]& ], {}, {}}}], {}}, {{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{{1.2710486907398812`, 0.}, {0.438075958538366, 
          0.}, {-1.0828394642022434`, 0.}, {0.3, -0.8660254037844386}, {0.3, 
          0.8660254037844386}}]}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {0., 0.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, AxesLabel -> {None, None}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*StyleBox[\\\"y\\\",FontSlant->\\\"Italic\\\"]\\) (R)\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*StyleBox[\\\"x\\\",FontSlant->\\\"Italic\\\"]\\) (R)\"", 
         TraditionalForm], 
        FormBox[
        "\"\\!\\(\\*StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"]\\) \
(GM1/R)\"", TraditionalForm]}}, DisplayFunction -> Identity, AspectRatio -> 1,
      AxesLabel -> {None, None}, DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*StyleBox[\\\"y\\\",FontSlant->\\\"Italic\\\"]\\) (R)\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*StyleBox[\\\"x\\\",FontSlant->\\\"Italic\\\"]\\) (R)\"", 
         TraditionalForm], 
        FormBox[
        "\"\\!\\(\\*StyleBox[\\\"V\\\",FontSlant->\\\"Italic\\\"]\\) \
(GM1/R)\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, 
     PlotRange -> {{-1.75, 1.75}, {-1.75, 1.75}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             
             RasterBox[{{{0.148, 0.33, 0.54}}, {{0.48186789604209856`, 
              0.4730526152224628, 0.535802898173335}}, {{0.7858706516169802, 
              0.5798906443382359, 0.35709201310695093`}}, {{
              0.9303312152063677, 0.6958280380159194, 
              0.38402676713974004`}}, {{0.9788939557135373, 
              0.8172348892838432, 0.5345712627119656}}, {{1., 0.95, 0.75}}}, {{
                Rational[-15, 2], -288}, {
                Rational[15, 2], 288}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -288}, {
                  Rational[-15, 2], -288}, {
                  Rational[-15, 2], 288}, {
                  Rational[15, 2], 288}, {
                  Rational[15, 2], -288}}, {{
                 7.5, -288}, {-7.5, -288}, {-7.5, 288}, {7.5, 288}, {
                 7.5, -288}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -191.9999999999999}, {
                    Rational[
                    15, 2], -191.9999999999999}}, {{-7.5, \
-191.9999999999999}, {7.5, -191.9999999999999}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -95.99999999999989}, {
                    Rational[
                    15, 2], -95.99999999999989}}, {{-7.5, \
-95.99999999999989}, {7.5, -95.99999999999989}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 1.1368683772161603`*^-13}, {
                    Rational[15, 2], 1.1368683772161603`*^-13}}, {{-7.5, 
                  1.1368683772161603`*^-13}, {7.5, 
                  1.1368683772161603`*^-13}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 96.00000000000011}, {
                    Rational[15, 2], 96.00000000000011}}, {{-7.5, 
                  96.00000000000011}, {7.5, 96.00000000000011}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 192.00000000000006`}, {
                    Rational[15, 2], 192.00000000000006`}}, {{-7.5, 
                  192.00000000000006`}, {7.5, 192.00000000000006`}}]]}}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{7.5, -288.}, {7.5, 288.}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -192.}, 
                    Offset[{4., 0}, {7.5, -192.}]}, {{7.5, -96.}, 
                    Offset[{4., 0}, {7.5, -96.}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 96.}, 
                    Offset[{4., 0}, {7.5, 96.}]}, {{7.5, 192.}, 
                    Offset[{4., 0}, {7.5, 192.}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-4.0\"", ShowStringCharacters -> False], -4., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -192.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-3.5\"", ShowStringCharacters -> False], -3.5,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -96.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-3.0\"", ShowStringCharacters -> False], -3., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-2.5\"", ShowStringCharacters -> False], -2.5,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 96.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-2.0\"", ShowStringCharacters -> False], -2., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 192.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], FontSize -> Large]}}, StripOnInput -> 
                    False]}, {}}, {{
                    Directive[
                    Opacity[1], FontSize -> Large]}}, StripOnInput -> 
                    False], {"GraphicsLabel"}, StripOnInput -> False]}, {
                 "GraphicsTicks"}, StripOnInput -> False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]]}}, StripOnInput -> False]}, {
              "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 576}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontSize -> Large, FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "4.349283870557462`"}], ",", 
                   RowBox[{"-", "1.775294044313091`"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "4.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "3.5`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "3.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "2.5`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "2.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "576"}], ",", 
           RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.844607898014892*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"931684be-ce11-41a0-8141-a4c70379b1b8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["c)", "Section",
 CellChangeTimes->{{3.844608201823448*^9, 
  3.844608202839364*^9}},ExpressionUUID->"2dc01b19-3262-4297-844a-\
b36ed6526de8"],

Cell["\<\
Primeiramente vamos fazer uma nova lista de substitui\[CCedilla]\[OTilde]es, \
em que a massa do Sol \[EAcute] dado por 1 e  a massa da terra \[EAcute] dado \
por 3*10^-6, que \[EAcute] e fra\[CCedilla]\[ATilde]o real da massa da Terra \
comparada com a do Sol.\
\>", "Text",
 CellChangeTimes->{{3.844609081270547*^9, 
  3.844609128591529*^9}},ExpressionUUID->"dae78aee-da16-453d-acb6-\
5c14b0c2896f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pars2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"M1", "->", "1"}], ",", 
     RowBox[{"M2", "->", 
      RowBox[{"3", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "6"}]}]}]}], ",", 
     RowBox[{"G", "->", "1"}], ",", 
     RowBox[{"R", "->", "1"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.844608204851495*^9, 3.844608209103486*^9}, {
  3.844608394187937*^9, 3.844608411619609*^9}, {3.8446085804981527`*^9, 
  3.84460859811771*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"9d6d6eb0-e29f-43e9-93cc-11a86cbb6da2"],

Cell["\<\
Agora vamos encontrar os novos valores de for\[CCedilla]a efetiva para este \
conjunto de par\[AHat]metros:\
\>", "Text",
 CellChangeTimes->{{3.844609131663431*^9, 
  3.844609177872486*^9}},ExpressionUUID->"a874c192-fb6a-4df6-b07c-\
57f8da67ba6f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fef2", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{"V2", "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "/.", "pars2"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.844608635933885*^9, 3.844608636982059*^9}, 
   3.84460917971739*^9},
 CellLabel->"In[89]:=",ExpressionUUID->"039277fe-42f7-4c9d-9c9a-90678db0b891"],

Cell["\<\
Como feito anteriormente, vamos calcular os novos pontos de Lagrange do \
sistema, impondo o fato de que neles a for\[CCedilla]a efetiva deve ser 0:\
\>", "Text",
 CellChangeTimes->{{3.844609183056569*^9, 
  3.844609220569359*^9}},ExpressionUUID->"0548326b-d51d-432e-97fa-\
f25acf9d0978"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Fef2", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "==", "0"}], ",", 
      RowBox[{
       RowBox[{"Fef2", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "==", "0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}], " ", "//", "N"}]], "Input",
 CellChangeTimes->{{3.844608651695703*^9, 3.844608653046485*^9}, {
  3.8446087208634377`*^9, 3.8446087382198057`*^9}, {3.844609230068082*^9, 
  3.844609231123571*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"52afc3f8-ab89-4fc2-9795-a5d14942f0d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "1.010030218354984`"}], ",", 
     RowBox[{"y", "\[Rule]", "0.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0.9900304472309229`"}], ",", 
     RowBox[{"y", "\[Rule]", "0.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "1.00000124999625`"}]}], ",", 
     RowBox[{"y", "\[Rule]", "0.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0.499997000009`"}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", "0.8660254037844386`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0.499997000009`"}], ",", 
     RowBox[{"y", "\[Rule]", "0.8660254037844386`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.844608657127706*^9, {3.844608740672168*^9, 3.844608743550622*^9}, {
   3.844609225187896*^9, 3.844609234273219*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"bbb9194e-ebd7-4913-a04e-d6bada3369bb"]
}, Open  ]],

Cell["\<\
Como M1 >> M2, temos que a Terra est\[AAcute] posicionada praticamente em \
(1,0), enquanto o Sol est\[AAcute] em (0,0). Neste caso, podemos perceber que \
os pontos de Lagrange mais pr\[OAcute]ximos da Terra s\[ATilde]o os dois \
primeiros encontrados na lista(L1 e L2). 

Como vimos anteriormente o James Webb estar\[AAcute] orbitando o ponto L2, em \
{x\[Rule]1.01003,y\[Rule]0.}. Como a dist\[AHat]ncia no gr\[AAcute]fico est\
\[AAcute] dada em termos de R, podemos encontrar o valor real da \
dist\[AHat]ncia entre a Terra e o ponto L2 fazendo a conta (Posi\[CCedilla]\
\[ATilde]o do ponto L2 em x)*(Dist\[AHat]ncia real Terra-Sol em Km) - (Dist\
\[AHat]ncia Real Terra-Sol em Km). Desta forma conseguimos encontrar a dist\
\[AHat]ncia real em Km entre Terra-L2. \[LineSeparator]\[LineSeparator]Como a \
dist\[AHat]ncia Terra-Sol \[EAcute] 1.469 8 10^8 Km, temos ent\[ATilde]o:\
\>", "Text",
 CellChangeTimes->{{3.84460924474607*^9, 3.844609273234827*^9}, {
  3.84460931826788*^9, 
  3.8446095844841223`*^9}},ExpressionUUID->"3cb1b3bd-3826-4eac-adfe-\
5862b972d981"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DistanciaTerraL2", " ", "=", " ", 
  RowBox[{
   RowBox[{"1.496", " ", "*", " ", 
    RowBox[{"10", "^", "8"}], " ", "*", " ", "1.010030218354984"}], " ", "-", 
   "  ", 
   RowBox[{"1.496", " ", "*", " ", 
    RowBox[{"10", "^", "8"}]}]}]}]], "Input",
 CellChangeTimes->{{3.844608759957102*^9, 3.844608777004101*^9}, {
  3.8446090365264893`*^9, 3.844609043360324*^9}, {3.8446095872383423`*^9, 
  3.844609589132637*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"959ea5c1-4b35-4710-affc-f2226be0b2a2"],

Cell[BoxData["1.5005206659056246`*^6"], "Output",
 CellChangeTimes->{3.844608780443201*^9, 3.844609044292585*^9, 
  3.8446095897459517`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"b4fcc646-e054-47b2-a5d0-38fa569882f1"]
}, Open  ]],

Cell["\<\
Podemos tamb\[EAcute]m encontrar a dist\[AHat]ncia do outro ponto \
pr\[OAcute]ximo a Terra (L1), utilizando este mesmo pensamento. Temos ent\
\[ATilde]o:\
\>", "Text",
 CellChangeTimes->{{3.844609593707862*^9, 3.8446095938766813`*^9}, {
  3.844609641006055*^9, 
  3.844609671887589*^9}},ExpressionUUID->"ee1021ea-dcfa-4cab-a4bd-\
2eb54073dd9a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DistanciaTerraL1", " ", "=", "   ", 
  RowBox[{
   RowBox[{"1.496", " ", "*", " ", 
    RowBox[{"10", "^", "8"}]}], " ", "-", " ", 
   RowBox[{"1.496", " ", "*", " ", 
    RowBox[{"10", "^", "8"}], " ", "*", " ", 
    "0.9900304472309229"}]}]}]], "Input",
 CellChangeTimes->{{3.844609676335958*^9, 3.844609701352407*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"57da33ac-1f01-4cd5-9ef3-221812cebc96"],

Cell[BoxData["1.4914450942539275`*^6"], "Output",
 CellChangeTimes->{3.8446097020170507`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"4521814c-02d5-437a-81a6-afd1b3f31667"]
}, Open  ]],

Cell["\<\
Vemos ent\[ATilde]o que os pontos L1 e L2 pr\[OAcute]ximos a Terra tem dist\
\[AHat]ncias semelhantes de aproximadamente 1.5 *10^6 Km.\
\>", "Text",
 CellChangeTimes->{{3.8446097194861097`*^9, 
  3.844609747569364*^9}},ExpressionUUID->"df7d0bfa-bd23-425a-85e0-\
c254df9009d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
2.

a)\
\>", "Section",
 CellChangeTimes->{{3.844609762347558*^9, 
  3.844609779202729*^9}},ExpressionUUID->"d4f9b828-6605-4975-96ea-\
e8c98b03f191"],

Cell[TextData[{
 "Primeiramente vamos escrever o m\[OAcute]dulo do vetor campo \
el\[EAcute]trico fornecido, em termos de coordenadas cartesianas. Para isso \
utilizamos as transforma\[CCedilla]\[OTilde]es r = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SqrtBox[
      RowBox[{
       RowBox[{"x", "^", "2"}], "+", 
       RowBox[{"y", "^", "2"}], "+", 
       RowBox[{"z", "^", "2"}]}]], " ", "e", " ", "\[Theta]"}], " ", "=", " ", 
    RowBox[{"arctan", "(", 
     RowBox[{"y", "/", "z"}], ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "60b4f8a1-b130-41a0-a700-d906c8901454"],
 "."
}], "Text",
 CellChangeTimes->{{3.8448033584032793`*^9, 3.844803420469982*^9}, 
   3.844803982915081*^9},ExpressionUUID->"345e232d-5ed0-46b6-af70-\
049f60a1cf7c"],

Cell[BoxData[
 RowBox[{"eletricfield", ":=", " ", 
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "A"}], "/", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "+", 
       RowBox[{"y", "^", "2"}], "+", 
       RowBox[{"z", "^", "2"}]}], "]"}]}], "*", 
    RowBox[{"Sin", "[", 
     RowBox[{"ArcTan", "[", 
      RowBox[{"z", ",", "y"}], "]"}], "]"}], "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Omega]", "*", 
      RowBox[{"(", 
       RowBox[{"t", "-", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"x", "^", "2"}], "+", 
           RowBox[{"y", "^", "2"}], "+", 
           RowBox[{"z", "^", "2"}]}], "]"}], "/", "c"}]}], ")"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.844610777304769*^9, 3.844610827072091*^9}, {
   3.844610865754755*^9, 3.8446108667121897`*^9}, {3.844610944461637*^9, 
   3.8446110285975*^9}, 3.84461106267931*^9, {3.844611104301895*^9, 
   3.844611107453329*^9}, 3.8447067449576893`*^9, {3.844707258869946*^9, 
   3.8447072600308027`*^9}, {3.8447073560211687`*^9, 3.844707416962578*^9}, {
   3.8447258431102133`*^9, 3.8447258580416822`*^9}, {3.844792214516107*^9, 
   3.8447922858459044`*^9}, {3.844800830367838*^9, 3.8448008811529903`*^9}, 
   3.844800911762948*^9, {3.844801456591098*^9, 3.8448014569176083`*^9}, {
   3.8448014894467583`*^9, 3.844801489813695*^9}, {3.844801868585505*^9, 
   3.844801868951985*^9}, {3.844801940776224*^9, 3.844801941080216*^9}, {
   3.844802115083563*^9, 3.84480213008142*^9}, {3.8448021656736526`*^9, 
   3.844802210249567*^9}, {3.844802779311223*^9, 3.8448028058078403`*^9}, {
   3.844803986746285*^9, 3.844803988974637*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"cc9e368a-e8b4-44c1-8aea-07c0e4d74aac"],

Cell["\<\
Agora vamos fazer as atribui\[CCedilla]\[OTilde]es para os par\[AHat]metros \
independentes presentes na f\[OAcute]rmula. Note que estamos fazendo x=0, \
para trabalharmos no plano yz, o que seria equivalente a fazer \[Phi]=\[Pi]/2 \
em coordenadas esf\[EAcute]ricas.\
\>", "Text",
 CellChangeTimes->{{3.844803997076476*^9, 
  3.844804049291519*^9}},ExpressionUUID->"dc5f3cae-9ed0-4cdd-a10a-\
fd739e1cb6a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"optam", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ImageSize", "\[Rule]", " ", "Large"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", " ", "Large"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"pa", "  ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"A", "->", "1"}], ",", 
      RowBox[{"c", "->", "1"}], ",", 
      RowBox[{"\[Omega]", "->", 
       RowBox[{"2", "*", "\[Pi]"}]}], ",", 
      RowBox[{"x", "->", "0"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.844611139782751*^9, 3.8446111640247393`*^9}, 
   3.844706754702298*^9, {3.8447074998306513`*^9, 3.844707505693616*^9}, {
   3.844708044556731*^9, 3.844708046051075*^9}, {3.844708130485753*^9, 
   3.844708130852131*^9}, 3.84472445386423*^9, {3.844726091710904*^9, 
   3.8447260999167213`*^9}, {3.844792300389761*^9, 3.844792325525893*^9}, {
   3.844800941011117*^9, 3.844800963101942*^9}, {3.844801032781168*^9, 
   3.844801033290616*^9}, {3.844801945224484*^9, 3.8448019522073708`*^9}, {
   3.844802008946602*^9, 3.8448020090060863`*^9}, {3.844802101224667*^9, 
   3.84480214285627*^9}, {3.844802303892703*^9, 3.844802304033246*^9}, {
   3.844802356379369*^9, 3.844802384843276*^9}, 3.844802463525457*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"24b89fd8-ad6f-42cc-9704-04633646663a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"A", "\[Rule]", "1"}], ",", 
   RowBox[{"c", "\[Rule]", "1"}], ",", 
   RowBox[{"\[Omega]", "\[Rule]", 
    RowBox[{"2", " ", "\[Pi]"}]}], ",", 
   RowBox[{"x", "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.844800964033617*^9, 3.844801282594886*^9, {3.8448014660818567`*^9, 
   3.844801492843955*^9}, 3.8448018033815737`*^9, 3.844801873050235*^9, 
   3.844801952418936*^9, 3.84480200941726*^9, {3.844802106738776*^9, 
   3.8448021114907303`*^9}, 3.84480215129766*^9, 3.84480221270392*^9, 
   3.844802304350512*^9, {3.844802358142955*^9, 3.8448023854327993`*^9}, 
   3.8448024639475927`*^9, 3.844804463485141*^9, 3.845136159419216*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"c6af663b-4d9a-4687-a022-cc4908432af7"]
}, Open  ]],

Cell["\<\
Agora vamos fazer a anima\[CCedilla]\[ATilde]o, com todas as configura\
\[CCedilla]\[OTilde]es do modo que foram pedidas no enunciado, e \
tamb\[EAcute]m atribuindo o nome \[OpenCurlyDoubleQuote]gif\
\[CloseCurlyDoubleQuote] a ela para poder ser salva futuramente.\
\>", "Text",
 CellChangeTimes->{{3.8448040683155746`*^9, 3.8448041035082083`*^9}, {
  3.8448044656222763`*^9, 
  3.844804467407015*^9}},ExpressionUUID->"5bf2bbcd-cdea-4b17-a5b5-\
b58aaf6cc9f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gif", " ", "=", " ", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"DensityPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eletricfield", " ", "/.", " ", "pa"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "T"}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
      RowBox[{"Evaluate", "[", "optam", "]"}], ",", " ", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"BarLegend", "[", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "3"}], "}"}]}], "}"}], "]"}]}], ",", " ", 
      RowBox[{"FrameLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<y\>\"", ",", "\"\<z\>\"", ",", "\"\<E\>\""}], "}"}]}], 
      ",", 
      RowBox[{"PlotPoints", "\[Rule]", "100"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"T", ",", "0", ",", "100"}], "}"}], ",", 
    RowBox[{"AnimationRate", "\[Rule]", "24"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8447246807691307`*^9, 3.844724690490604*^9}, {
   3.844725981050749*^9, 3.8447260127882137`*^9}, {3.844726045886126*^9, 
   3.84472604781087*^9}, {3.8447261074073057`*^9, 3.844726298092003*^9}, {
   3.844792357013397*^9, 3.844792421071473*^9}, {3.844792508011936*^9, 
   3.844792531331479*^9}, {3.844800932941029*^9, 3.84480093312422*^9}, {
   3.844801036678293*^9, 3.8448010401886177`*^9}, {3.844801351671809*^9, 
   3.8448013557245483`*^9}, {3.844801386428569*^9, 3.84480143106777*^9}, {
   3.84480146123834*^9, 3.844801514054468*^9}, {3.844801781049567*^9, 
   3.844801783594819*^9}, {3.844801876857854*^9, 3.84480187691833*^9}, {
   3.8448022214606943`*^9, 3.8448022554188013`*^9}, {3.844802285571274*^9, 
   3.8448023073262653`*^9}, {3.844803199551588*^9, 3.8448032005992928`*^9}, {
   3.844803333048674*^9, 3.844803334904027*^9}, {3.844803708913754*^9, 
   3.844803709964704*^9}, {3.84480405615464*^9, 3.8448040578383636`*^9}, 
   3.8448044568922577`*^9, 3.845136168247295*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"432e0e22-a876-4afe-89ec-37b284e19fe9"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`T$$ = 38.14862823486328, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`T$$], 0, 100}}, Typeset`size$$ = {655., {292., 297.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`T$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> DensityPlot[
        ReplaceAll[
         ReplaceAll[$CellContext`eletricfield, $CellContext`pa], \
{$CellContext`t -> $CellContext`T$$}], {$CellContext`y, -1, 
         1}, {$CellContext`z, -1, 1}, 
        Evaluate[$CellContext`optam], PlotLegends -> 
        BarLegend[{Automatic, {0, 3}}], FrameLabel -> {"y", "z", "E"}, 
        PlotPoints -> 100], 
      "Specifications" :> {{$CellContext`T$$, 0, 100, AnimationRate -> 24, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{701., {327.1875, 332.8125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.845136168671124*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"2663a5c7-e2ee-4b25-9796-1a9a5e7cd097"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.844802509295248*^9, 3.844802510167973*^9}, {
  3.844803194971257*^9, 
  3.844803197162972*^9}},ExpressionUUID->"ad3125b6-1ecf-4bf9-9262-\
eca2a31fe89d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["b)", "Section",
 CellChangeTimes->{{3.844804108403995*^9, 
  3.844804109340191*^9}},ExpressionUUID->"95bb3bcc-a2ab-49d0-90d7-\
4f9b24439060"],

Cell["\<\
Agora vamos definir o diret\[OAcute]rio para ser salvo o gif e \
export\[AAcute]-lo(se encontra anexado no moodle juntamente com o Notebook )\
\>", "Text",
 CellChangeTimes->{{3.8448059589318533`*^9, 
  3.844806025849004*^9}},ExpressionUUID->"71f07961-ac9f-4e53-bf60-\
052cf9d4925e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.844892186077384*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"a0839265-e387-4ab6-8238-fbc9e1b802e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<animado.gif\>\"", ",", "gif", ",", 
   RowBox[{"\"\<AnimationRepetitions\>\"", "->", "\[Infinity]"}], ",", 
   RowBox[{"FrameRate", "->", "24"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.844804246810052*^9, 3.84480425400156*^9}, {
  3.844804359034319*^9, 3.844804407440686*^9}, {3.844804565013117*^9, 
  3.844804572225284*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"7c447f78-4d14-450a-80fe-a3bdd7a16693"],

Cell[BoxData["\<\"animado.gif\"\>"], "Output",
 CellChangeTimes->{3.8448043066361427`*^9, 3.844804451912191*^9, 
  3.844804556771491*^9, 3.844804817475028*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"ed508cca-24dc-426f-aac3-c66d9fa2b796"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
3.

a)\
\>", "Section",
 CellChangeTimes->{{3.8447622838192368`*^9, 
  3.8447622926116037`*^9}},ExpressionUUID->"f24abc2c-87b9-4634-bf61-\
8f28b025601c"],

Cell["\<\
Primeiramente vamos  importar os dados para o Alum\[IAcute]nio e para o \
chumbo:\
\>", "Text",
 CellChangeTimes->{{3.845047747036311*^9, 3.845047749308589*^9}, {
  3.8450480434322233`*^9, 
  3.845048063516963*^9}},ExpressionUUID->"e6d3251c-1f46-4091-b6f6-\
6f5d4b6a59a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"optam", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ImageSize", "\[Rule]", " ", "Large"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", "Large"}]}], "}"}]}], 
  ";"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"43c0fd8a-466d-4c82-8e5b-e9a47d9f6d32"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.844762294832653*^9, 3.844762304587552*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"a17dc9fc-0783-43b5-975a-096b27787f62"],

Cell[BoxData["\<\"/home/arthurmaga/Workspace/lista3_fiscomp\"\>"], "Output",
 CellChangeTimes->{3.844762305055069*^9, 3.8448933449903708`*^9, 
  3.845043046877981*^9, 3.84513569737713*^9, 3.8451379297957277`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"b575d3c4-4f9d-4f8c-bafc-37ec282eff7c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dadosAl1", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<dados_Al.dat\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.844762316680749*^9, 3.844762363262967*^9}, 
   3.844762786662569*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"66f0b7d3-f6de-44bc-92a9-362529ac1cd2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dadosPb1", " ", "=", " ", 
  RowBox[{"Import", "[", "\"\<dados_Pb.dat\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.844762369865952*^9, 3.8447623814873247`*^9}, 
   3.844762785897312*^9, 3.845137253544675*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"2301712c-dee2-4e11-a6f8-f0723bf2d0bb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"20", ",", "11.01`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40", ",", "19.57`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "22.43`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"80", ",", "23.69`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", "24.43`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"150", ",", "25.27`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"200", ",", "25.87`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"250", ",", "26.36`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", "26.82`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8451372563579273`*^9, 3.8451379299938*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"ae6121a8-6e8f-4a2a-be90-203368cc8610"]
}, Open  ]],

Cell[TextData[{
 "Agora vamos converter o calor espec\[IAcute]fico por mol em calor espec\
\[IAcute]fico por \[AAcute]tomo. Assim vamos, para cada conjunto de dados, \
dividir as segunda coluna por R = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["K", "b"], 
     SubscriptBox["N", "A"]}], "=", " ", 
    RowBox[{"8.31", " ", 
     RowBox[{
      RowBox[{"J", "/", "K"}], "/", "mol"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7a62d16c-d85a-4f2d-a230-e0e7f3266a0f"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8450480662291327`*^9, 
  3.845048136733523*^9}},ExpressionUUID->"9d60f1d1-b633-4c18-b079-\
d822c34de2cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dadosAl2", " ", "=", " ", 
  RowBox[{"Inner", "[", 
   RowBox[{"Divide", ",", " ", "dadosAl1", ",", 
    RowBox[{"{", 
     RowBox[{"1.", ",", "8.31"}], "}"}], ",", " ", "List"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.844762391595255*^9, 3.844762433679246*^9}, {
  3.844762677233181*^9, 3.844762732765777*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"e750fa08-2b71-4789-a30a-8602b964b4f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"20.`", ",", "0.027677496991576414`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40.`", ",", "0.2515042117930204`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60.`", ",", "0.694344163658243`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"80.`", ",", "1.161251504211793`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100.`", ",", "1.5691937424789408`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"150.`", ",", "2.2286401925391095`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"200.`", ",", "2.596871239470517`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"250.`", ",", "2.7978339350180503`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300.`", ",", "2.9265944645006017`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8447623960078077`*^9, 3.8447624024782257`*^9}, 
   3.8447624342002783`*^9, {3.8447627256733007`*^9, 3.844762733418187*^9}, {
   3.844893342372554*^9, 3.844893350921575*^9}, {3.845043040669388*^9, 
   3.8450430475184593`*^9}, 3.845135697773696*^9, 3.845137930020052*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"0f9b09d3-1254-4511-bf3e-be0a99a30d01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dadosPb2", " ", "=", " ", 
  RowBox[{"Inner", "[", 
   RowBox[{"Divide", ",", " ", "dadosPb1", ",", 
    RowBox[{"{", 
     RowBox[{"1.", ",", "8.31"}], "}"}], ",", " ", "List"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.84476273911784*^9, 3.844762782622282*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"88250c57-c0f7-4d6b-9888-7856dfa5fdd4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"20.`", ",", "1.3249097472924187`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40.`", ",", "2.354993983152828`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60.`", ",", "2.6991576413959084`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"80.`", ",", "2.8507821901323704`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100.`", ",", "2.9398315282791816`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"150.`", ",", "3.040914560770156`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"200.`", ",", "3.1131167268351385`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"250.`", ",", "3.1720818291215402`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300.`", ",", "3.227436823104693`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.844762783370425*^9, 3.845043251012092*^9, 
  3.8451356978081427`*^9, 3.845137930044838*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"6cfba654-0bb5-4070-b75a-cf1d4e55e882"]
}, Open  ]],

Cell["Dessa forma, vamos plotar o gr\[AAcute]fico dos valores obtidos:", \
"Text",
 CellChangeTimes->{{3.845048140485146*^9, 
  3.845048162693487*^9}},ExpressionUUID->"67dc6ffc-6b9f-4afb-a5aa-\
f5f98c8fde49"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b1", " ", "=", " ", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dadosAl2", ",", " ", "dadosPb2"}], "}"}], ",", " ", 
    RowBox[{"Evaluate", "[", "optam", "]"}], ",", " ", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Al\>\"", ",", " ", "\"\<Pb\>\""}], "}"}]}], ",", " ", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T", "[", "K", "]"}], ",", " ", 
       RowBox[{"c", "/", 
        SubscriptBox["K", "B"]}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.844762790968665*^9, 3.844762802649206*^9}, {
  3.844762897637298*^9, 3.844763053905568*^9}, {3.8447631578098993`*^9, 
  3.8447631796259336`*^9}, {3.8450434234657497`*^9, 3.845043425248993*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"78bac094-ef94-4409-8b39-a7b804fb18a5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{20., 0.027677496991576414`}, {40., 0.2515042117930204}, {
         60., 0.694344163658243}, {80., 1.161251504211793}, {100., 
         1.5691937424789408`}, {150., 2.2286401925391095`}, {200., 
         2.596871239470517}, {250., 2.7978339350180503`}, {300., 
         2.9265944645006017`}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[{{20., 1.3249097472924187`}, {40., 2.354993983152828}, {60., 
         2.6991576413959084`}, {80., 2.8507821901323704`}, {100., 
         2.9398315282791816`}, {150., 3.040914560770156}, {200., 
         3.1131167268351385`}, {250., 3.1720818291215402`}, {300., 
         3.227436823104693}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        RowBox[{"T", "(", "K", ")"}], TraditionalForm], 
       FormBox[
        FractionBox["c", 
         SubscriptBox["K", "B"]], TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> Large, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 300.}, {0, 3.227436823104693}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Al\"", "\"Pb\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> Large, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8447631595019073`*^9, 3.8447631803174667`*^9}, 
   3.845043426126462*^9, 3.845043461460116*^9, 3.845135699663987*^9, 
   3.845137931173863*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"f7ba3b44-a9eb-4edc-a548-fb44d0efbbf5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["b)", "Section",
 CellChangeTimes->{{3.844762806881309*^9, 3.844762807381048*^9}, 
   3.8447628809402657`*^9, {3.844763259143799*^9, 
   3.844763262896555*^9}},ExpressionUUID->"4284ee1a-31f4-4fe3-bc4b-\
5f7ab580db41"],

Cell[TextData[{
 "Vamos primeiramente escrever a f\[OAcute]rmula do modelo de einstein ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", "/", 
     SubscriptBox["K", "B"]}], " ", "tal", " ", "como", " ", "dado", " ", 
    "no", " ", 
    RowBox[{"enunciado", ":"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "33d42ffb-7bf1-42ed-9100-afd592a6e9de"]
}], "Text",
 CellChangeTimes->{{3.845048167357485*^9, 
  3.84504820401545*^9}},ExpressionUUID->"88927575-2f69-42ea-86b8-\
62d8a6aacfa4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"optam", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ImageSize", "\[Rule]", " ", "Large"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", "Large"}]}], "}"}]}], 
  ";"}]], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"b15ea9d8-71ea-450e-9e05-85a009a7b72f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EinsteinModel", " ", "=", " ", 
   RowBox[{
    RowBox[{"3", "/", "2"}], " ", "*", " ", 
    RowBox[{"(", 
     RowBox[{"\[HBar]", "*", 
      RowBox[{"\[Omega]", "/", "kb"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[HBar]", "*", 
          RowBox[{"\[Omega]", "/", 
           RowBox[{"(", 
            RowBox[{"kb", "*", "T"}], ")"}]}]}], "]"}], "+", "1"}], ")"}], 
      "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[HBar]", "*", 
          RowBox[{"\[Omega]", "/", 
           RowBox[{"(", 
            RowBox[{"kb", "*", "T"}], ")"}]}]}], "]"}], "-", "1"}], ")"}]}], 
     ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.845042718529941*^9, 3.845042804452093*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"6efefb5b-87b4-485b-8616-81350b58cc79"],

Cell[TextData[{
 "Vamos utilizar a rela\[CCedilla]\[ATilde]o dada de que ",
 Cell[BoxData[
  FormBox[
   TemplateBox[Association["boxes" -> FormBox[
       RowBox[{
         StyleBox["c", "TI"], "\[LongEqual]", "\[PartialD]", 
         StyleBox["u", "TI"], "/", "\[PartialD]", 
         StyleBox["T", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "c = \\partial u/ \\partial T", "state" -> "Boxes"],
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a470ed10-68fc-4712-b58d-4970fcb65c17"],
 ", e ent\[ATilde]o derivar a equa\[CCedilla]\[ATilde]o de einstein definida \
anteriormente em rela\[CCedilla]\[ATilde]o a T, para podermos encontrar uma \
fun\[CCedilla]\[ATilde]o de ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"c", "/", 
     SubscriptBox["K", 
      RowBox[{"B", " "}]]}], "para", " ", "ajustarmos", " ", "aos", " ", 
    "dados", " ", 
    RowBox[{"experimentais", "."}]}], TraditionalForm]],ExpressionUUID->
  "9cafca13-ea17-45a9-985b-29a5ee9db595"]
}], "Text",
 CellChangeTimes->{{3.84504821158213*^9, 3.8450482295655117`*^9}, {
  3.845048305748794*^9, 
  3.845048402673539*^9}},ExpressionUUID->"bee37f44-dbea-4da7-924b-\
650a6f7b7c46"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c1", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"EinsteinModel", ",", "T"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[HBar]", "->", "1"}], ",", 
      RowBox[{"kb", "->", "1"}]}], "}"}]}], " ", "//", " ", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.845042831761549*^9, 3.845042834095293*^9}, {
  3.845042865911029*^9, 3.845042894196409*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"b64fd2c6-2deb-4f35-a90c-b6a8e9157415"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox["\[Omega]", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Csch", "[", 
     FractionBox["\[Omega]", 
      RowBox[{"2", " ", "T"}]], "]"}], "2"]}], 
  RowBox[{"4", " ", 
   SuperscriptBox["T", "2"]}]]], "Output",
 CellChangeTimes->{{3.845042886736258*^9, 3.84504289467523*^9}, 
   3.845135714272977*^9, 3.845137939416255*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"5db57da1-8dd0-47a2-80d8-d896323c6667"]
}, Open  ]],

Cell["\<\
Vamos fazer o ajuste para o alum\[IAcute]nio e encontrar o valor de frequ\
\[EHat]ncia \[Omega] que melhor ajusta (por m\[IAcute]nimos quadrados) os \
seus dados experimentais:\
\>", "Text",
 CellChangeTimes->{{3.845043705339795*^9, 3.845043706513363*^9}, {
  3.8450484056479387`*^9, 
  3.845048449222639*^9}},ExpressionUUID->"970b774d-4cde-44cd-88b9-\
addb9217e860"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindFit", "[", 
  RowBox[{"dadosAl2", ",", "c1", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\[Omega]", ",", "100"}], "}"}], "}"}], ",", "T"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.845043157215949*^9, 3.845043157519202*^9}, {
  3.845045862983094*^9, 3.845045863176034*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"934e7e47-5d15-4a2a-8920-cd842abf526f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Omega]", "\[Rule]", "276.7141541632187`"}], "}"}]], "Output",
 CellChangeTimes->{{3.845043158537793*^9, 3.845043166594369*^9}, 
   3.8450458639040194`*^9, 3.8451357149567127`*^9, 3.845137939953323*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"7c1e678a-85d6-4181-9bbd-73a1c6198fdc"]
}, Open  ]],

Cell["\<\
Agora vamos fazer o ajuste para o chumbo e encontrar o valor de \
frequ\[EHat]ncia \[Omega] que melhor ajusta (por m\[IAcute]nimos quadrados) \
os seus dados experimentais:\
\>", "Text",
 CellChangeTimes->{{3.845043709456953*^9, 3.8450437099922447`*^9}, {
  3.845048453512774*^9, 
  3.8450484617539186`*^9}},ExpressionUUID->"d1338788-ec83-4da2-869f-\
08fd267a19e0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindFit", "[", 
  RowBox[{"dadosPb2", " ", ",", " ", "c1", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\[Omega]", ",", "20"}], "}"}], "}"}], ",", "T"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.845043244497422*^9, 3.845043257673189*^9}, {
  3.845043305009583*^9, 3.845043305566861*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"b631dc6b-02b0-4b0f-8db7-576cd89b35df"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Omega]", "\[Rule]", "65.56861935809614`"}], "}"}]], "Output",
 CellChangeTimes->{3.845043306395403*^9, 3.845135715009013*^9, 
  3.845137940037764*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"bf4f30d1-dadf-40d9-b0ce-3ef95e6bfbd7"]
}, Open  ]],

Cell["\<\
Agora vamos fazer o plot do modelo de Einstein para cada conjunto de dados, \
para poder ver como a curva se comporta, e tamb\[EAcute]m para salvarmos os \
gr\[AAcute]ficos em vari\[AAcute]veis que ser\[ATilde]o utilizadas \
posteriormente para a constru\[CCedilla]\[ATilde]o de um plot conjunto de \
todos os modelos e dados experimentais.\
\>", "Text",
 CellChangeTimes->{{3.845135485366721*^9, 3.845135539633254*^9}, 
   3.845136206278611*^9},ExpressionUUID->"e16e4c2f-395b-4095-a785-\
ee9443d16acd"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.84504846886825*^9, 3.845048470519039*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"235d0708-881d-4486-9814-473b21223d70"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"a1", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox["\[Omega]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Csch", "[", 
         FractionBox["\[Omega]", 
          RowBox[{"2", " ", "T"}]], "]"}], "2"]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["T", "2"]}]], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", "->", "276.7141541632187`"}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"T", ",", "0", ",", "300"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Dashed", "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Al(Einstein)\>\"", "}"}]}], ",", " ", 
    RowBox[{"Evaluate", "[", "optam", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"a2", " ", "=", "  ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox["\[Omega]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Csch", "[", 
         FractionBox["\[Omega]", 
          RowBox[{"2", " ", "T"}]], "]"}], "2"]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["T", "2"]}]], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", "->", "65.56861935809614`"}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"T", ",", "0", ",", "300"}], "}"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Orange", ",", "Dashed"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Pb(Einstein)\>\"", "}"}]}], ",", 
    RowBox[{"Evaluate", "[", "optam", "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "3.5"}], "}"}]}]}], " ", "]"}]}]}], "Input",
 CellChangeTimes->{{3.845043339602075*^9, 3.845043405554431*^9}, {
   3.845043480150683*^9, 3.845043500700103*^9}, {3.845043722522118*^9, 
   3.845043725542975*^9}, {3.845043777278651*^9, 3.845043779817967*^9}, {
   3.845046940840027*^9, 3.845046960495227*^9}, {3.845047402563901*^9, 
   3.845047446533931*^9}, {3.845047508966652*^9, 3.8450475362985477`*^9}, {
   3.845047799585606*^9, 3.845047825102583*^9}, {3.845047898460682*^9, 
   3.845047917111518*^9}, {3.8450480045318613`*^9, 3.845048007771759*^9}, {
   3.845137274131649*^9, 3.8451372832243223`*^9}, {3.8451373775642567`*^9, 
   3.8451373780250797`*^9}, 3.845137436906163*^9, {3.845137581944121*^9, 
   3.845137582012233*^9}, {3.845137897167487*^9, 3.845137920864523*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"89ecf280-092d-43be-bf20-034b6a60f8fd"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Csch\\\", \\\"[\\\", \\\"22575.746843153043`\\\", \
\\\"]\\\"}]\\) is too small to represent as a normalized machine number; \
precision may be lost.\"", 2, 14, 1, 20059544720380627552, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.845043386526636*^9, 3.8450434059173594`*^9}, 
   3.845043503674979*^9, 3.8450437800865383`*^9, {3.845046944618857*^9, 
   3.845046960979068*^9}, {3.84504742066336*^9, 3.845047446797029*^9}, {
   3.845047511268175*^9, 3.8450475365659847`*^9}, 3.8450480129406443`*^9, 
   3.845135715226491*^9, 3.8451372837103453`*^9, 3.845137940269144*^9},
 CellLabel->
  "During evaluation of \
In[14]:=",ExpressionUUID->"b78e6022-4fca-42f4-b919-defb4858bc23"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
f9niIDQsdWuvgQKs5Fd0Z/f9f1vHZEQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$11914#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 300}, {0., 2.7960548753694714`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Al(Einstein)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> Large, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.845048013007625*^9, 3.84513571537289*^9, 
  3.845137283837425*^9, 3.845137940431983*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"2216ce7c-0309-432d-83f6-9d265e22780f"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Csch\\\", \\\"[\\\", \\\"5349.421159751433`\\\", \
\\\"]\\\"}]\\) is too small to represent as a normalized machine number; \
precision may be lost.\"", 2, 15, 2, 20059544720380627552, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.845043386526636*^9, 3.8450434059173594`*^9}, 
   3.845043503674979*^9, 3.8450437800865383`*^9, {3.845046944618857*^9, 
   3.845046960979068*^9}, {3.84504742066336*^9, 3.845047446797029*^9}, {
   3.845047511268175*^9, 3.8450475365659847`*^9}, 3.8450480129406443`*^9, 
   3.845135715226491*^9, 3.8451372837103453`*^9, 3.8451379405273323`*^9},
 CellLabel->
  "During evaluation of \
In[14]:=",ExpressionUUID->"4f250450-fa74-4d52-9cd1-ec6178a7ef42"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$12060#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 299.99999387755105`}, {0, 3.5}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Pb(Einstein)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> Large, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False], ",", 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.845048013007625*^9, 3.84513571537289*^9, 
  3.845137283837425*^9, 3.8451379405827227`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"4c7e90c2-62f8-42f4-b200-245d122d03a4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["c)", "Section",
 CellChangeTimes->{{3.8450438153962507`*^9, 
  3.845043816299713*^9}},ExpressionUUID->"5c18e344-8be0-438b-b0e4-\
59df33d513a0"],

Cell["\<\
Primeiramente vamos definir o calor espec\[IAcute]fico tal como dado pelo \
modelo de Debye:\
\>", "Text",
 CellChangeTimes->{{3.84513554610532*^9, 3.8451355627215137`*^9}, {
  3.845135728402568*^9, 
  3.845135728770609*^9}},ExpressionUUID->"447d0012-c3fd-4b95-9ce7-\
a3c923527193"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c2", " ", "=", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[ExponentialE]", "^", 
        RowBox[{"(", 
         RowBox[{"Td", "/", "T"}], ")"}]}], "\[LessSlantEqual]", "1"}], ",", 
      " ", 
      RowBox[{"9", "*", "kb", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"T", "/", "Td"}], ")"}], "^", "3"}], " ", "*", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Eta]", "^", "4"}], "*", 
            RowBox[{"\[ExponentialE]", "^", 
             RowBox[{"(", "\[Eta]", ")"}]}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ExponentialE]", "^", 
               RowBox[{"(", "\[Eta]", ")"}]}], "-", "1"}], ")"}], "^", "2"}], 
           ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Eta]", ",", "0", ",", 
           RowBox[{"Td", "/", "T"}]}], "}"}]}], "]"}]}]}], "]"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{"kb", "->", "1"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.845044853650941*^9, 3.845045033572062*^9}, {
  3.845045107332794*^9, 3.8450451500977573`*^9}, {3.845046181501749*^9, 
  3.845046184177388*^9}, {3.84504623997511*^9, 3.845046279791416*^9}, {
  3.845136988332279*^9, 3.8451369911189404`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"5ae86928-7534-496d-a167-26e47e04fcff"],

Cell[BoxData[
 RowBox[{"9", " ", 
  RowBox[{"Re", "[", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["Td", "3"]], 
    RowBox[{
     SuperscriptBox["T", "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"4", " ", 
          SuperscriptBox["\[Pi]", "4"]}], "15"]}], "+", 
       RowBox[{
        FractionBox["1", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox["Td", "T"]]}], ")"}], " ", 
          SuperscriptBox["T", "4"]}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox["Td", "T"]]}], " ", 
           SuperscriptBox["Td", "4"]}], "-", 
          RowBox[{"4", " ", "T", " ", 
           SuperscriptBox["Td", "3"], " ", 
           RowBox[{"Log", "[", 
            RowBox[{"1", "-", 
             SuperscriptBox["\[ExponentialE]", 
              FractionBox["Td", "T"]]}], "]"}]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            FractionBox["Td", "T"]], " ", "T", " ", 
           SuperscriptBox["Td", "3"], " ", 
           RowBox[{"Log", "[", 
            RowBox[{"1", "-", 
             SuperscriptBox["\[ExponentialE]", 
              FractionBox["Td", "T"]]}], "]"}]}], "+", 
          RowBox[{"12", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              FractionBox["Td", "T"]]}], ")"}], " ", 
           SuperscriptBox["T", "2"], " ", 
           SuperscriptBox["Td", "2"], " ", 
           RowBox[{"PolyLog", "[", 
            RowBox[{"2", ",", 
             SuperscriptBox["\[ExponentialE]", 
              FractionBox["Td", "T"]]}], "]"}]}], "-", 
          RowBox[{"24", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              FractionBox["Td", "T"]]}], ")"}], " ", 
           SuperscriptBox["T", "3"], " ", "Td", " ", 
           RowBox[{"PolyLog", "[", 
            RowBox[{"3", ",", 
             SuperscriptBox["\[ExponentialE]", 
              FractionBox["Td", "T"]]}], "]"}]}], "-", 
          RowBox[{"24", " ", 
           SuperscriptBox["T", "4"], " ", 
           RowBox[{"PolyLog", "[", 
            RowBox[{"4", ",", 
             SuperscriptBox["\[ExponentialE]", 
              FractionBox["Td", "T"]]}], "]"}]}], "+", 
          RowBox[{"24", " ", 
           SuperscriptBox["\[ExponentialE]", 
            FractionBox["Td", "T"]], " ", 
           SuperscriptBox["T", "4"], " ", 
           RowBox[{"PolyLog", "[", 
            RowBox[{"4", ",", 
             SuperscriptBox["\[ExponentialE]", 
              FractionBox["Td", "T"]]}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
   "]"}]}]], "Output",
 CellChangeTimes->{{3.845044923806959*^9, 3.845044931378401*^9}, 
   3.845045198309832*^9, 3.845046317288291*^9, {3.845135780721395*^9, 
   3.8451357891516447`*^9}, 3.845137015796543*^9, 3.845138020161071*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"4ef49ff5-5ddb-4f28-bce0-6f8897812c85"]
}, Open  ]],

Cell[TextData[{
 "Note que tomamos somente a parte real (com sentido f\[IAcute]sico), e tamb\
\[EAcute]m impomos a condi\[CCedilla]\[ATilde]o de que ",
 Cell[BoxData[
  FormBox[
   TemplateBox[Association["boxes" -> FormBox[
       SuperscriptBox[
        StyleBox["e", "TI"], 
        RowBox[{
          SubscriptBox[
           StyleBox["T", "TI"], 
           StyleBox["d", "TI"]], "/", 
          StyleBox["T", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "e^{T_d/T}", "state" -> "Boxes"],
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4b511091-0582-4e7c-98f8-db6fe4cdb639"],
 " para podermos ter o resultado sem as condicionais dadas pelo Mathematica.\n\
\nTemos agora que encontrar o par\[AHat]metro ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[Association["boxes" -> FormBox[
        SubscriptBox[
         StyleBox["T", "TI"], 
         StyleBox["d", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
      "T_d", "state" -> "Boxes"],
     "TeXAssistantTemplate"], "  "}], TraditionalForm]],ExpressionUUID->
  "f8084fb4-f80e-4917-9a1f-ab63ca229df9"],
 " que melhor ajusta para cada manterial. Vamos chutar o valor tal como \
chutamos os valores de T_d tal como chutamos para o \[Omega] anteriormente:"
}], "Text",
 CellChangeTimes->{{3.845135565817498*^9, 3.8451356757487497`*^9}, {
  3.845135923657045*^9, 
  3.8451359576237097`*^9}},ExpressionUUID->"8512134b-82bc-47fe-ab88-\
96479ac0a52a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindFit", "[", 
  RowBox[{"dadosAl2", " ", ",", " ", 
   RowBox[{"c2", "/.", 
    RowBox[{"{", 
     RowBox[{"kb", "->", "1"}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"Td", ",", "100"}], "}"}], "}"}], ",", "T"}], "]"}]], "Input",
 CellChangeTimes->{{3.845045892671921*^9, 3.845045897878901*^9}, {
  3.845045949754717*^9, 3.84504596194867*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"69c71504-6598-4854-968e-2b4fcdf0f1f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Td", "\[Rule]", "378.43915883670275`"}], "}"}]], "Output",
 CellChangeTimes->{{3.845045921821919*^9, 3.845045962626319*^9}, 
   3.845046384015307*^9, 3.845135796442443*^9, 3.845137064743993*^9, 
   3.84513802044447*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"7d3e3488-a246-42a6-b23a-49e396f67885"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindFit", "[", 
  RowBox[{"dadosPb2", " ", ",", " ", 
   RowBox[{"c2", "/.", 
    RowBox[{"{", 
     RowBox[{"kb", "->", "1"}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"Td", ",", "20"}], "}"}], "}"}], ",", "T"}], "]"}]], "Input",
 CellChangeTimes->{{3.845046386992634*^9, 3.845046394496299*^9}, {
  3.8451357455079327`*^9, 3.8451357464083242`*^9}, {3.845135806944386*^9, 
  3.845135823382625*^9}, {3.8451358894877253`*^9, 3.845135908432008*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"39df4cb1-411b-44e9-a534-88608cc244ed"],

Cell[BoxData[
 TemplateBox[{
  "FindFit", "sszero", 
   "\"The step size in the search has become less than the tolerance \
prescribed by the PrecisionGoal option, but the gradient is larger than the \
tolerance specified by the AccuracyGoal option. There is a possibility that \
the method has stalled at a point that is not a local minimum.\"", 2, 18, 3, 
   20059544720380627552, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8451358913185368`*^9, 3.84513590910345*^9}, 
   3.845137066432913*^9, 3.84513802062179*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"86c856a1-ad62-421d-8e6a-c40425e37d98"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Td", "\[Rule]", "88.02732217496332`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.845046394954585*^9, {3.8451357983792143`*^9, 3.8451358209084272`*^9}, {
   3.845135891324741*^9, 3.845135909109941*^9}, 3.845137066578731*^9, 
   3.845138020632243*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"4c9de3ea-0260-4476-a89f-e44a154f793c"]
}, Open  ]],

Cell["\<\
Agora novamente vamos fazer os plots para cada material, utilizando o valor \
do par\[AHat]metro encontrado.\
\>", "Text",
 CellChangeTimes->{{3.845135961783215*^9, 
  3.845135982591696*^9}},ExpressionUUID->"5f93b004-5055-4a2e-a659-\
ce0871bf892b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a3", " ", "=", "  ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"c2", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"kb", "->", "1"}], ",", " ", 
       RowBox[{"Td", "->", " ", "378.43915883670275`"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"T", ",", "0", ",", "300"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Al(Debey)\>\"", "}"}]}], ",", " ", 
    RowBox[{"Evaluate", "[", "optam", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.845046409071458*^9, 3.845046451473915*^9}, {
  3.845047928264818*^9, 3.845047963540642*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"59aa66a5-6266-4c1f-94be-47593850bafc"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"7.088641146809169`*^8\\\", \\\" \\\", \
\\\"2.11219259021945357091616839113736311168`11.16395295386439*^-26818\\\"}]\\\
) is too small to represent as a normalized machine number; precision may be \
lost.\"", 2, 19, 4, 20059544720380627552, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.845046456626636*^9, 3.8450479704090023`*^9, 
  3.8451359181674957`*^9, 3.845135998190021*^9, 3.8451380207160387`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"03f2ab37-3726-4854-a786-eaadafdd5bf0"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{{6.122448979591836*^-6, -9.899153327419588*^-22}, {
          0.09201537616788803, -3.3604988002700817`*^-9}, {
          0.18402462988679646`, -2.688130731172549*^-8}, {
          0.2760338836057049, -9.072139383422906*^-8}, {
          0.36804313732461336`, -2.1503972666764258`*^-7}, {
          0.4600523910435218, -4.199952741118279*^-7}, {0.5474611820764849, 
          7.07752939902412*^-7}}], 
         LineBox[CompressedData["
1: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
mNjsHxutBDaTuSZLNv0/YxGGuQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$91604#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 300}, {-4.199952741118279*^-7, 2.7742345634039496`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Al(Debey)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> Large, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.845047972781514*^9, 3.845135920420574*^9, 
  3.8451360003275633`*^9, 3.845138023077347*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"47278aa8-595e-4aad-909b-e50f3996f43d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a4", " ", "=", "  ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"c2", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"kb", "->", "1"}], ",", " ", 
       RowBox[{"Td", "->", "88.02732217496332`"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"T", ",", "0", ",", "300"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Orange"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Pb(Debey)\>\"", "}"}]}], ",", 
    RowBox[{"Evaluate", "[", "optam", "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "3.5"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8450464645127907`*^9, 3.84504648128183*^9}, {
  3.8450473185509253`*^9, 3.8450473221986*^9}, {3.845047947065248*^9, 
  3.845047988883362*^9}, {3.84513598949748*^9, 3.845135990994896*^9}, {
  3.845137947716785*^9, 3.8451379547712803`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"0f79703d-2cac-497a-9121-e1918cf006fe"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"7.088641146809169`*^8\\\", \\\" \\\", \
\\\"1.09777716428128181907386`11.797331531710258*^-6238\\\"}]\\) is too small \
to represent as a normalized machine number; precision may be lost.\"", 2, 20,
    5, 20059544720380627552, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.845047989178164*^9, {3.845135991220292*^9, 3.845136013685483*^9}, 
   3.845137076967793*^9, 3.845138023146549*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"a6a8d2c7-3ae5-48ad-889f-c899123aea96"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJwN13c4FtwbB3DjGZQko2UUkjQkP6t4na+993qsZCREeJI0yCpkr8xEKlEI
iRBaUilR8iYliSTJ6EUSv+ePc53rc51zX/f46xxxN3/LgxxsbGwc7KzF2scM
1v2sOLNABp5HrrGOtCev69cUJc7/IZ/fxCobs+0nTdI8Vr6Bf8mh4S/m/4W5
kmsXaFSjsSXS/XtV/gw8SHtk+PuMPWyYCmVMnjY4RNQaQhUoE2wQufRA40ee
D6maOpl4tIwdeasrowpVj5CtMiEjnz05UHu32/q3UCDJPXCMWEpy4qFK1utN
KkfJ6mxm9v0BTvDdWa6bOnuMRHf6T8nlUxCmVfdHhD2E/Kb5GRYyqNgwEJtt
duMkOaLuU7xaiAbtraqxyudCiV25h81EIh1j8mzF/mMRpOOLa4WzIRdiBoSj
/l6NIhBxob+gcUNSxHNJI/Qs2R5vf/fGmRUI1xm9ZRgZRwoe2PILq63EDW/9
f5uq4onAgtXh8/MrQXsSEqLBlkQWvUxFvQNXYdywYmgiLJUEFhoF/7uLF9X3
qzMsetPISK9+p94YL8oPp+3+jgziVVyE9D18aN3qpBdgkEUkyOYfz5L50B7T
uEH+Wzbp7yvI4Zjgw4vbUgG9ebnEgj9/OrBsDQQmuEOPqxYQnoqNl0q5+NHn
k3K8WLCQtBnkGA168qM+Ljy/S6iI7Iu4cMVcUgA1mx0uvFYuJr9EhCxiIwTQ
cu5t/2r7K6SyPv1vy4AAXtgHWbufvUq2TKbY7s4XxKYsI4oI23XyMX4156EF
QWTzdH8eNi0lOdJJlQUMIbjf7RNMKS0jvC7xXLxCayFCbcrQjSoncy/ONown
roOXmL/ktZEq4kFWqKz5tQ6UO5VmFd3VpPtWUq2iw3p08t5bcbathlSkZ90K
27oBLg7dgUuPa4mHfek1vpaNaPJ14j61tYF0P9u1RVFKGLxsC9L2Vo0EatVF
9vHCaFR8OXg5tokIb2rMv2wngup/9h8s42kh3V860hQmRUE5xpho+ecBga0F
n72tGMwUwi32zz4gFU96EkObxPBGL/Gwcc1DElf2MbYtdhPufZZfL7DvMdms
EkJupmzGo0C/pV8n20nv3zhFdRkJGKbKbvR81EmSlIyDzJ0kwOf4Srzd5RXR
9uetcUuWgO8vJTH9gVek+lOaXMx/Esh7L9L7faiLJD3M2/HqviQ8tNKaRjje
EJ24cnE3ByncvP1L6m/yv6RGsGvVufhtMNg0J3PNfJA0BQp/UWzchq+Xy8Xy
Lw2SRy8PNgyPbcOhg4nugxOD5G3sgqeOoQwSuZTzDZI+k/lFyVYK93YoeUpI
ib8aIurDwcyoczugLdExneE0Qp7VivSGR8jCP7CXZIV/J938h8rlqmSxSuaP
Unj3d/Levyrq0ydZ7H3fv8dsyzgZl9GVA3ajz3PuS+aTcbK6wD9ueWk3/JL6
7GJ5Jsh2rUFR0iwHx5M9sZv1JknADoVX91Tl4XtGb/B99TT5qKy3LGolj4qy
yZW1vdPERNtBNsxHHhbxHzb4LE6T7c7hCeo58jDb987ZU2eGDCd16LfMyiNm
5bPBiz0zxGHa435r1f9ACQ50aJ/4RbTuZlY/lFbE1z9t2nUcc6T68fVBSaII
hp3XqgsSc2RzdyNftK0itkX+T9JIc44sjQ0e0T6rCNnAOnmViDlSLyK74/Fn
RQj0vtgt9neO7AxvK267qIRn9kMXxH/Mk7V6cxlPBVQg/KWkOaligUy3G81v
2aUC05EzLpnPF8gLw0LHcF0VGF/xXPYbXSDRpgYSyidUcEss5k+m+B8ybZNX
eeWjCpakpozbUv+QFx7k2ZnSvYhMfD/Q471IoiNjlhWJKn6w5RUpL/wlByj9
bqkMVQiT7VtH1iwR1XNybeOBqsjevVzsJ7NEpuPeJRRfUUVtb/YpLsYSOZC6
Y+OaFWpw6BPbGVSzRNQKOxXG36gh4vhvKsN9mczcW+dz2Ucd01MMjhBrNsxb
yOUYR6rjqW6Nf5AzGxaH9dtnc9Sxymh2lbsnGyi8J7caPVXH27lryutC2LB2
f//nGWmClY0uNR9y2aCyVOioM0zAz5DLnP3ABrIpc+uvSqDpYUDtuAM7NL3F
1Z82Aq3HwoTt3dihXVNuU/AE2Hclz7LBmx36em3R+gOAxYP4cMcQdpj7z33O
59VAmkj0+MZMdri12F/S8dOAjLeNbEEHO866iK3P2q6J2Vmlsj0KHFD3eP7U
W1kTMeIWDz/u48CsV8gpNW1NICHQIEKDA17M7o+DzpqYvt/9/ZopBwzPnru6
M1UTe730yoK9OMB7Y0L+wZwmIu/XFqjkciB7ttnkxyMtrIvbcunhLAfM/xxe
bunSQmddzLzGIge42TZUpX3Uwhx36EwdOydOch8VVJnXwlP1qZXxPJxwFpF+
H7lDGxo2XIGd4pyQ0Ez2Wp+mja+m9r8/GHLiZqJLlJaLDiJeGp49msUJhwhO
u77DOtiymr9oPI8TXMdKtgeG6MAnxcLKpZAT7k4/uwpSdfD9W+H1PaWc2Ljj
zOaFhzpQWe9jFt/Aidj2gnu3tuni7eYxHpF+TnhwfpwTndaFFF1hfmEjBfxz
Ec9vL+miMaLRuFGMgtYxqUtGK/XwzoXjVLAEBcLdfrontughKmtX7AcZCroL
/2a8sdXD3PU2hr8KBVAXlY9v1MOp0Cd7S61Z9084+c5H62PaafFzeRwFH499
vnonRR+zGe5TlxMoKGR6DQTl68N0/olLRjIFW3yDLKdq9DEU/Zfpm0nBTpcE
lbHP+jjD2MA7XUiBuk4TpR8GeDeW+dKujgLXNSIXWxYNkFAiqVs1yIrnvfw2
lMsQo/tehql9oWBkxTY+NUFD1D0RvftohAIfikJU/Q5D5C7maHd8p4A5Z+Rd
5WCIc8md8vX/URD94ZRicb0hwlbL7KFzU1FS+v7FuSAj/C5xdCzYRcVm18gi
zQgjyPlus2OXoyJ7vcyxpUQjSAUwPF3lqTgfEywSXGKEPnGVrvXKVPgeXHP4
YB8rPpVpdxBUyInrcWnDGMFmx5dCLKloyK7WZOcxgfO414eSICrkze3X3ltv
Au5ah6TaYCpu0NnGQqRMcPix7tvWECryg01SJ9VNYHY0d++r01ScsR4dGAg0
QbBaTnV3NBXafGKhzb0moDXonvbOoOJlTFzdqWJT3EopKPqvigpHff6p/ZWm
eNP5O6eghopRrrztmo2mSKfUv9appYLj/M2LXK9NcSi2RzC5ngqlhM6oTA4z
THLSVq9qoeJSipB5pasZcpw9P9c/p6K+wzxoarU5wp8qaAwMUbG0U2jNkJA5
kvxi7lgPU6GT+K78jbA52po2VrePUNFt4va1Ttocf1a2aN38RsX4y6MOYcQc
Kb+CaG4/qRDvuoCV/ub4tDH0RtwCa549/TxSL81h9VP8R89qGozK8xvmX5sj
ckeuyoY1NPCcdfLqeGeOhC4lM0d+GpIU+h8eHTbHdtu+ofeCNKSnvz/5YNEc
lQrKb15uoCHfom/UZYcFdj8PFgqVpKH8Re+j3FgLbBO500FRouHV4+7TfFqW
SFQ4qMXFoGF84fKcm4EllL0VCsTsaeCSO8qsNbME1V1y/H8ONGjkCng5OFmi
+cQNT0cnGqqPWFtdOWaJ8om/CxcP0JC57q2MynVL5E/ON0970eDg/e6tyyor
GDNnNYdCaPjC80mustcK+QrXZsUu0HBet2h/5gcr+IUfLx5neU+4W8KpISvQ
v7QV382iIWzmy1e9n1aIDuspssihYX3ft4JPNGv8uiJ3/UQ+DSYlMzz8Staw
2locVnaZhjsa9G9BGdaonvGWzqigISZYtmifhQ2U09MVbzyiIXYVW/4lOxsc
UMwWcH3Myn+l6wJlvw2Cl8Ns17ax5tkdlPDSxwa8p0pXnXnC6ke28bhbtA2M
d++1NnhGQ/GInun5Ohsc9Y/sud9JQ4ut6593oraQLK4U1OujYU4pw+bEmC3G
miVVH/6gIUjH1bV10ha6fy19rSdomLSS9aPP2WKf8sUdwyyPBrRHZ3LaQcKL
YUudpKGvbLGmSsQO9wwlvDFNQ5PYQf4xUzvcFP36tWiWhgiaUqdDjR3rfeFl
LLRMw8q3vfpqpxkwvLdL8A0vHfzfMunrIhlQNElZ1lpNx/pFq7apGAb2zQ1c
rGF5q8QrrZJ0Bmot9/9K5aMDR9rV+W8w8M75MJ8RPx1BtLsKo+8Y2Nnih0oh
OvqVcjdnKNsjqohuqiFCR0WW0/z3aXto/BwtzdlGh9it+e+mcY6Iz4q9tAt0
iH7vySugOEPgRe3pQUvWv+D0s+SiS/vh1bjWVM2DjvJgU9eMDQfQUD3A/ZFJ
xy78y3jZcwALdAOf5jA6BGr9pgeLXNH7D+Mcx3k6NBolxw4fcIOlrom1Rjod
92/ps6sIu0OfmpRimkdHicWJhg/D7vD4PjTPX0xHT9Szrt+XPdDUcbnpfCkd
Pq7S8T/9D0JY+/RkVyUdFrIz7tJ7PVFFO/jKrpaOMwkDuT2/PBH9wFp9+S4d
ghd6jzq3HkK1b9doajMdk3KTZY5hXli3q9WX+YDVb+Nx9nwVb+TusnMcf0xH
zeSKhVoOH1Sz3Y1yeUpHcl2zuW6LD0r/vEm27KCjWybM4Fb8YXA5NW/R7KTD
adf+whRDX4zlPa180kWHyubytTVUPzzuU1dZ84aOU8303ZWv/FD9bD7H6S0d
1InIq+JJR+AxddqS8S8ds+3czX6O/viT/brCto+O/KfLC6H8AfjW9ZBI99Ph
OrdCNzwgAC2qnFyNH+h4tyDs5v82ABktY2FWA3T8p/tPeY5iIKQbT5XUfaKj
YcVaruG0QJQxJRWWB+mQv/Lrf6LzgZiX1nI1HqLD9NxQUootExxHvDYFfKFD
zzDJWInBRP0lX95jLIN374p+e9b5oOjiCZb3XEg6K+3MhO7U+ddRLAte23u6
2Z0JAUYOM4vl94+TvccDmEjYPhPYzLIXVU1bP56J2/+8CVk5zKr/6Qj7RAIT
wh3e6nwsOySmtqQnMTF1s5FDiGVjoa/7BlJZ+cIyY8RY3i2Vtic4m4kLwzsj
97A8qz0qduUqE/rcFqp2LP/kSu83KGGCuenDuCPLox3/5P68zkSA286LB1h+
Z50upHqTiR/7hBa8WW7yUOfprmaiSlX86mmWa7d9e3r8NhM1b7uMI1iuGE+P
Eb3DhP99g5mzLBcGfePwvstE2p0ktWSWc1QyWnkbmdD64TSQznLaonrY7SYm
Dm6bCc9m+XzrN1WHZibid1qKX2Q5Kjrj93ILE/A+2VrE8v8BqdcxYw==
          "]], 
         LineBox[{{0.10132202297983704`, 0.}, {0.1242186149695061, 
          6.569269679203308*^-7}}]}, 
        Annotation[#, "Charting`Private`Tag$92348#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 299.99999387755105`}, {0, 3.5}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Pb(Debey)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> Large, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.84504799047642*^9, {3.845135992362451*^9, 3.8451360148261147`*^9}, 
   3.845137078311401*^9, 3.845138024392334*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"3005444e-39c9-4c60-973e-07b38007823f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["d)", "Section",
 CellChangeTimes->{{3.845046487661662*^9, 
  3.845046492526145*^9}},ExpressionUUID->"b0934b82-b0b0-419d-a118-\
1492a30f9ea8"],

Cell["\<\
Finalmente vamos evocar a fun\[CCedilla]\[ATilde]o Show[] e plotar todos os \
gr\[AAcute]ficos juntos. \
\>", "Text",
 CellChangeTimes->{{3.845136017872271*^9, 
  3.845136092321546*^9}},ExpressionUUID->"33b01d32-5b7d-4ba9-9ef1-\
67bfcd66c236"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"a1", ",", "a2", ",", "a3", ",", "a4", ",", "b1", ",", " ", 
   RowBox[{"Evaluate", "[", "optam", "]"}], ",", " ", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "3.5"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}], ",", 
   RowBox[{"Exclusions", "->", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.845047158883255*^9, 3.8450472817882843`*^9}, {
  3.845047349648202*^9, 3.8450473879175987`*^9}, {3.84504747562213*^9, 
  3.8450474874591303`*^9}, {3.845047627625037*^9, 3.8450476281500273`*^9}, {
  3.8451360084447117`*^9, 3.84513600881874*^9}, {3.845136259432136*^9, 
  3.8451362856396627`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"8da017b4-0cee-4af0-ab7c-30cbbbc7279f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
f9niIDQsdWuvgQKs5Fd0Z/f9f1vHZEQ=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$11914#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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

           "]]}, 
         Annotation[#, "Charting`Private`Tag$12060#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{6.122448979591836*^-6, -9.899153327419588*^-22}, {
           0.09201537616788803, -3.3604988002700817`*^-9}, {
           0.18402462988679646`, -2.688130731172549*^-8}, {
           0.2760338836057049, -9.072139383422906*^-8}, {
           0.36804313732461336`, -2.1503972666764258`*^-7}, {
           0.4600523910435218, -4.199952741118279*^-7}, {0.5474611820764849, 
           7.07752939902412*^-7}}], 
          LineBox[CompressedData["
1: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
mNjsHxutBDaTuSZLNv0/YxGGuQ==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$91604#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0]], 
          LineBox[CompressedData["
1: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
           "]], 
          
          LineBox[{{0.10132202297983704`, 0.}, {0.1242186149695061, 
           6.569269679203308*^-7}}]}, 
         Annotation[#, "Charting`Private`Tag$92348#1"]& ]}}, {}}, {{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{{20., 0.027677496991576414`}, {40., 0.2515042117930204}, {
          60., 0.694344163658243}, {80., 1.161251504211793}, {100., 
          1.5691937424789408`}, {150., 2.2286401925391095`}, {200., 
          2.596871239470517}, {250., 2.7978339350180503`}, {300., 
          2.9265944645006017`}}]}, {
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         PointBox[{{20., 1.3249097472924187`}, {40., 2.354993983152828}, {60.,
           2.6991576413959084`}, {80., 2.8507821901323704`}, {100., 
          2.9398315282791816`}, {150., 3.040914560770156}, {200., 
          3.1131167268351385`}, {250., 3.1720818291215402`}, {300., 
          3.227436823104693}}]}}}, {{}, {}}}}, {
    ImageSize -> Large, LabelStyle -> Large, 
     PlotRange -> {{0, 300}, {0, 3.5}}, PlotLegends -> "Expressions", 
     Exclusions -> None, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 300}, {0., 2.7960548753694714`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Al(Einstein)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontSize -> Large, FontFamily -> "Arial"}, Background -> 
            Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Pb(Einstein)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontSize -> Large, FontFamily -> "Arial"}, Background -> 
            Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Al(Debey)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontSize -> Large, FontFamily -> "Arial"}, Background -> 
            Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Pb(Debey)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontSize -> Large, FontFamily -> "Arial"}, Background -> 
            Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Al\"", "\"Pb\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontSize -> Large, FontFamily -> "Arial"}, Background -> 
            Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.845047465175165*^9, 3.8450474877797318`*^9}, 
   3.845047628710147*^9, {3.845047992501635*^9, 3.8450480177801657`*^9}, {
   3.8451360032747602`*^9, 3.8451360095740547`*^9}, {3.845136265153573*^9, 
   3.8451362859290533`*^9}, 3.8451380294101477`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"c3303bc7-69d6-4f55-ab13-211aa4305789"]
}, Open  ]],

Cell["\<\
Podemos ver que o modelo de Debye \[EAcute] mais preciso em temperaturas mais \
baixas, enquanto ambos os modelos s\[ATilde]o semelhantes para temperaturas \
altas.\
\>", "Text",
 CellChangeTimes->{3.8451360993188868`*^9},
 FontWeight->"Plain",ExpressionUUID->"6cf16ae9-6d9c-45d7-a034-ce31031c646f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"a2", ",", "b1", ",", " ", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.1", ",", "3.5"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.845136314721627*^9, 3.845136404796187*^9}, {
  3.845136438008811*^9, 3.845136467583523*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"575da30f-ce60-4031-ade8-b242d4c6a4b8"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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

           "]]}, 
         Annotation[#, "Charting`Private`Tag$12060#1"]& ]}}, {}}, {{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{{20., 0.027677496991576414`}, {40., 0.2515042117930204}, {
          60., 0.694344163658243}, {80., 1.161251504211793}, {100., 
          1.5691937424789408`}, {150., 2.2286401925391095`}, {200., 
          2.596871239470517}, {250., 2.7978339350180503`}, {300., 
          2.9265944645006017`}}]}, {
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         PointBox[{{20., 1.3249097472924187`}, {40., 2.354993983152828}, {60.,
           2.6991576413959084`}, {80., 2.8507821901323704`}, {100., 
          2.9398315282791816`}, {150., 3.040914560770156}, {200., 
          3.1131167268351385`}, {250., 3.1720818291215402`}, {300., 
          3.227436823104693}}]}}}, {{}, {}}}}, {
    PlotRange -> {{0, 300}, {2.1, 3.5}}, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 299.99999387755105`}, {0, 3.5}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Pb(Einstein)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontSize -> Large, FontFamily -> "Arial"}, Background -> 
            Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Al\"", "\"Pb\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontSize -> Large, FontFamily -> "Arial"}, Background -> 
            Automatic, StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", "Large"}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.845136324447528*^9, 3.8451364054101458`*^9}, {
   3.845136440185491*^9, 3.845136467883521*^9}, 3.845138029619671*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"c07d9126-2e45-4ee5-b136-740e6d5f61d6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958.5, 723.},
WindowMargins->{{0.75, Automatic}, {Automatic, 20.25}},
FrontEndVersion->"12.3 for Linux x86 (64-bit) (May 11, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7a922828-c071-4199-8feb-d3dd5ec2c0bc"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 187, 3, 98, "Title",ExpressionUUID->"a8284c85-61eb-4c20-b9c4-305e778f8e0a"],
Cell[CellGroupData[{
Cell[792, 29, 159, 7, 146, "Section",ExpressionUUID->"4bb21c2a-c754-431c-9c6c-48d69a45e8c9"],
Cell[954, 38, 300, 7, 58, "Text",ExpressionUUID->"f7d73bfb-6025-440f-84ce-29ac3bccc8a4"],
Cell[1257, 47, 301, 8, 46, "Input",ExpressionUUID->"d68e23b3-ed52-4764-8a5e-950e9f0f5f3e"],
Cell[1561, 57, 240, 6, 35, "Text",ExpressionUUID->"84a83bd2-72cf-4757-8181-1a88cac571fd"],
Cell[1804, 65, 1038, 33, 107, "Input",ExpressionUUID->"0a4b453a-6ad1-4fee-a374-b236c43839c9"],
Cell[2845, 100, 209, 4, 35, "Text",ExpressionUUID->"62a78fc9-6c51-45aa-931b-546b0af51d6d"],
Cell[3057, 106, 740, 23, 46, "Input",ExpressionUUID->"16959c4a-b471-4141-bb74-b1212ea37e92"],
Cell[3800, 131, 381, 8, 58, "Text",ExpressionUUID->"2961a5e8-bc29-4ce0-9f08-6a7d04cc218f"],
Cell[4184, 141, 484, 12, 29, "Input",ExpressionUUID->"8f7b47ef-76b3-4334-84f3-fa3b0cf0f99f"],
Cell[4671, 155, 285, 6, 35, "Text",ExpressionUUID->"51d3c65f-8cab-4745-b400-ada1c25accc2"],
Cell[CellGroupData[{
Cell[4981, 165, 966, 23, 84, "Input",ExpressionUUID->"facaf09e-9367-491f-9ade-7c887e4a4fc5"],
Cell[5950, 190, 196749, 3400, 614, "Output",ExpressionUUID->"b24ad783-7892-4d7d-845f-f3d98482bf80"]
}, Open  ]],
Cell[202714, 3593, 638, 14, 58, "Text",ExpressionUUID->"17bff590-6287-44a4-815b-5cdba8cf5d1d"],
Cell[203355, 3609, 58987, 972, 523, "Input",ExpressionUUID->"2ed4258e-f7e2-4a65-8289-8010d9f3a3b3"],
Cell[262345, 4583, 400, 8, 58, "Text",ExpressionUUID->"ef11aa7c-ee20-42a9-9755-a817d0704ecd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262782, 4596, 147, 3, 68, "Section",ExpressionUUID->"96f40ebb-c773-4c58-a9a7-cc7202360d34"],
Cell[262932, 4601, 527, 10, 81, "Text",ExpressionUUID->"e61c0cb3-df5d-49de-b28a-cc382e742e3c"],
Cell[263462, 4613, 1545, 48, 68, "Input",ExpressionUUID->"75b5759c-635a-497a-b436-224d491a354d"],
Cell[265010, 4663, 240, 6, 35, "Text",ExpressionUUID->"19fb645f-6d97-4f4e-972d-5b884c9c304c"],
Cell[265253, 4671, 530, 14, 46, "Input",ExpressionUUID->"710bc459-7650-472c-a83f-93ba21dbc753"],
Cell[265786, 4687, 235, 6, 35, "Text",ExpressionUUID->"5583e3b8-5507-44de-b20e-45fac8f281e0"],
Cell[CellGroupData[{
Cell[266046, 4697, 703, 18, 46, "Input",ExpressionUUID->"265bfee8-a59b-4d43-abee-5ba450289c0e"],
Cell[266752, 4717, 4686, 123, 52, "Output",ExpressionUUID->"5ab23b29-ea19-44f4-b42c-7328531e1d8d"]
}, Open  ]],
Cell[271453, 4843, 484, 9, 58, "Text",ExpressionUUID->"2e7cc61d-ccbd-4eaa-9e2a-eb2c9b167a3d"],
Cell[271940, 4854, 1063, 25, 84, "Input",ExpressionUUID->"8e8c57fb-194b-458e-890f-da73345f924c"],
Cell[273006, 4881, 4856, 118, 65, "Input",ExpressionUUID->"5dd1182e-67f6-4630-9153-00a3726bd581"],
Cell[CellGroupData[{
Cell[277887, 5003, 229, 4, 46, "Input",ExpressionUUID->"fdff1081-4476-4326-8369-850d8d564093"],
Cell[278119, 5009, 196776, 3395, 614, "Output",ExpressionUUID->"931684be-ce11-41a0-8141-a4c70379b1b8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[474944, 8410, 147, 3, 68, "Section",ExpressionUUID->"2dc01b19-3262-4297-844a-b36ed6526de8"],
Cell[475094, 8415, 411, 8, 58, "Text",ExpressionUUID->"dae78aee-da16-453d-acb6-5c14b0c2896f"],
Cell[475508, 8425, 584, 15, 29, "Input",ExpressionUUID->"9d6d6eb0-e29f-43e9-93cc-11a86cbb6da2"],
Cell[476095, 8442, 257, 6, 35, "Text",ExpressionUUID->"a874c192-fb6a-4df6-b07c-57f8da67ba6f"],
Cell[476355, 8450, 483, 14, 46, "Input",ExpressionUUID->"039277fe-42f7-4c9d-9c9a-90678db0b891"],
Cell[476841, 8466, 298, 6, 58, "Text",ExpressionUUID->"0548326b-d51d-432e-97fa-f25acf9d0978"],
Cell[CellGroupData[{
Cell[477164, 8476, 646, 17, 46, "Input",ExpressionUUID->"52afc3f8-ab89-4fc2-9795-a5d14942f0d5"],
Cell[477813, 8495, 1056, 29, 55, "Output",ExpressionUUID->"bbb9194e-ebd7-4913-a04e-d6bada3369bb"]
}, Open  ]],
Cell[478884, 8527, 1081, 18, 219, "Text",ExpressionUUID->"3cb1b3bd-3826-4eac-adfe-5862b972d981"],
Cell[CellGroupData[{
Cell[479990, 8549, 523, 11, 29, "Input",ExpressionUUID->"959ea5c1-4b35-4710-affc-f2226be0b2a2"],
Cell[480516, 8562, 219, 3, 33, "Output",ExpressionUUID->"b4fcc646-e054-47b2-a5d0-38fa569882f1"]
}, Open  ]],
Cell[480750, 8568, 355, 8, 35, "Text",ExpressionUUID->"ee1021ea-dcfa-4cab-a4bd-2eb54073dd9a"],
Cell[CellGroupData[{
Cell[481130, 8580, 424, 9, 29, "Input",ExpressionUUID->"57da33ac-1f01-4cd5-9ef3-221812cebc96"],
Cell[481557, 8591, 172, 2, 33, "Output",ExpressionUUID->"4521814c-02d5-437a-81a6-afd1b3f31667"]
}, Open  ]],
Cell[481744, 8596, 286, 6, 35, "Text",ExpressionUUID->"df7d0bfa-bd23-425a-85e0-c254df9009d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[482067, 8607, 159, 7, 146, "Section",ExpressionUUID->"d4f9b828-6605-4975-96ea-e8c98b03f191"],
Cell[482229, 8616, 792, 21, 61, "Text",ExpressionUUID->"345e232d-5ed0-46b6-af70-049f60a1cf7c"],
Cell[483024, 8639, 1769, 38, 46, "Input",ExpressionUUID->"cc9e368a-e8b4-44c1-8aea-07c0e4d74aac"],
Cell[484796, 8679, 417, 8, 58, "Text",ExpressionUUID->"dc5f3cae-9ed0-4cdd-a10a-fd739e1cb6a8"],
Cell[CellGroupData[{
Cell[485238, 8691, 1376, 28, 89, "Input",ExpressionUUID->"24b89fd8-ad6f-42cc-9704-04633646663a"],
Cell[486617, 8721, 780, 15, 33, "Output",ExpressionUUID->"c6af663b-4d9a-4687-a022-cc4908432af7"]
}, Open  ]],
Cell[487412, 8739, 469, 9, 58, "Text",ExpressionUUID->"5bf2bbcd-cdea-4b17-a5b5-b58aaf6cc9f2"],
Cell[CellGroupData[{
Cell[487906, 8752, 2208, 45, 122, "Input",ExpressionUUID->"432e0e22-a876-4afe-89ec-37b284e19fe9"],
Cell[490117, 8799, 2246, 44, 679, "Output",ExpressionUUID->"2663a5c7-e2ee-4b25-9796-1a9a5e7cd097"]
}, Open  ]],
Cell[492378, 8846, 201, 4, 29, "Input",ExpressionUUID->"ad3125b6-1ecf-4bf9-9262-eca2a31fe89d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[492616, 8855, 147, 3, 68, "Section",ExpressionUUID->"95bb3bcc-a2ab-49d0-90d7-4f9b24439060"],
Cell[492766, 8860, 293, 6, 35, "Text",ExpressionUUID->"71f07961-ac9f-4e53-bf60-052cf9d4925e"],
Cell[493062, 8868, 243, 5, 46, "Input",ExpressionUUID->"a0839265-e387-4ab6-8238-fbc9e1b802e2"],
Cell[CellGroupData[{
Cell[493330, 8877, 464, 9, 46, "Input",ExpressionUUID->"7c447f78-4d14-450a-80fe-a3bdd7a16693"],
Cell[493797, 8888, 242, 4, 33, "Output",ExpressionUUID->"ed508cca-24dc-426f-aac3-c66d9fa2b796"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[494088, 8898, 163, 7, 146, "Section",ExpressionUUID->"f24abc2c-87b9-4634-bf61-8f28b025601c"],
Cell[494254, 8907, 282, 7, 35, "Text",ExpressionUUID->"e6d3251c-1f46-4091-b6f6-6f5d4b6a59a1"],
Cell[494539, 8916, 300, 8, 46, "Input",ExpressionUUID->"43c0fd8a-466d-4c82-8e5b-e9a47d9f6d32"],
Cell[CellGroupData[{
Cell[494864, 8928, 248, 4, 46, "Input",ExpressionUUID->"a17dc9fc-0783-43b5-975a-096b27787f62"],
Cell[495115, 8934, 290, 3, 33, "Output",ExpressionUUID->"b575d3c4-4f9d-4f8c-bafc-37ec282eff7c"]
}, Open  ]],
Cell[495420, 8940, 307, 6, 46, "Input",ExpressionUUID->"66f0b7d3-f6de-44bc-92a9-362529ac1cd2"],
Cell[CellGroupData[{
Cell[495752, 8950, 312, 5, 46, "Input",ExpressionUUID->"2301712c-dee2-4e11-a6f8-f0723bf2d0bb"],
Cell[496067, 8957, 785, 22, 55, "Output",ExpressionUUID->"ae6121a8-6e8f-4a2a-be90-203368cc8610"]
}, Open  ]],
Cell[496867, 8982, 670, 19, 58, "Text",ExpressionUUID->"9d60f1d1-b633-4c18-b079-d822c34de2cd"],
Cell[CellGroupData[{
Cell[497562, 9005, 417, 9, 46, "Input",ExpressionUUID->"e750fa08-2b71-4789-a30a-8602b964b4f9"],
Cell[497982, 9016, 1147, 25, 55, "Output",ExpressionUUID->"0f9b09d3-1254-4511-bf3e-be0a99a30d01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[499166, 9046, 367, 8, 46, "Input",ExpressionUUID->"88250c57-c0f7-4d6b-9888-7856dfa5fdd4"],
Cell[499536, 9056, 966, 23, 55, "Output",ExpressionUUID->"6cfba654-0bb5-4070-b75a-cf1d4e55e882"]
}, Open  ]],
Cell[500517, 9082, 208, 4, 35, "Text",ExpressionUUID->"67dc6ffc-6b9f-4afb-a5aa-f5f98c8fde49"],
Cell[CellGroupData[{
Cell[500750, 9090, 857, 19, 46, "Input",ExpressionUUID->"78bac094-ef94-4409-8b39-a7b804fb18a5"],
Cell[501610, 9111, 12857, 272, 393, "Output",ExpressionUUID->"f7ba3b44-a9eb-4edc-a548-fb44d0efbbf5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[514516, 9389, 222, 4, 68, "Section",ExpressionUUID->"4284ee1a-31f4-4fe3-bc4b-5f7ab580db41"],
Cell[514741, 9395, 520, 14, 35, "Text",ExpressionUUID->"88927575-2f69-42ea-86b8-62d8a6aacfa4"],
Cell[515264, 9411, 300, 8, 46, "Input",ExpressionUUID->"b15ea9d8-71ea-450e-9e05-85a009a7b72f"],
Cell[515567, 9421, 920, 27, 46, "Input",ExpressionUUID->"6efefb5b-87b4-485b-8616-81350b58cc79"],
Cell[516490, 9450, 1189, 28, 59, "Text",ExpressionUUID->"bee37f44-dbea-4da7-924b-650a6f7b7c46"],
Cell[CellGroupData[{
Cell[517704, 9482, 510, 13, 46, "Input",ExpressionUUID->"b64fd2c6-2deb-4f35-a90c-b6a8e9157415"],
Cell[518217, 9497, 469, 12, 56, "Output",ExpressionUUID->"5db57da1-8dd0-47a2-80d8-d896323c6667"]
}, Open  ]],
Cell[518701, 9512, 377, 8, 58, "Text",ExpressionUUID->"970b774d-4cde-44cd-88b9-addb9217e860"],
Cell[CellGroupData[{
Cell[519103, 9524, 392, 9, 46, "Input",ExpressionUUID->"934e7e47-5d15-4a2a-8920-cd842abf526f"],
Cell[519498, 9535, 322, 5, 33, "Output",ExpressionUUID->"7c1e678a-85d6-4181-9bbd-73a1c6198fdc"]
}, Open  ]],
Cell[519835, 9543, 375, 8, 58, "Text",ExpressionUUID->"d1338788-ec83-4da2-869f-08fd267a19e0"],
Cell[CellGroupData[{
Cell[520235, 9555, 401, 9, 46, "Input",ExpressionUUID->"b631dc6b-02b0-4b0f-8db7-576cd89b35df"],
Cell[520639, 9566, 271, 5, 33, "Output",ExpressionUUID->"bf4f30d1-dadf-40d9-b0ce-3ef95e6bfbd7"]
}, Open  ]],
Cell[520925, 9574, 513, 9, 81, "Text",ExpressionUUID->"e16e4c2f-395b-4095-a785-ee9443d16acd"],
Cell[521441, 9585, 170, 2, 29, "Input",ExpressionUUID->"235d0708-881d-4486-9814-473b21223d70"],
Cell[CellGroupData[{
Cell[521636, 9591, 2554, 59, 230, "Input",ExpressionUUID->"89ecf280-092d-43be-bf20-034b6a60f8fd"],
Cell[524193, 9652, 781, 14, 28, "Message",ExpressionUUID->"b78e6022-4fca-42f4-b919-defb4858bc23"],
Cell[524977, 9668, 15072, 292, 372, "Output",ExpressionUUID->"2216ce7c-0309-432d-83f6-9d265e22780f"],
Cell[540052, 9962, 782, 14, 28, "Message",ExpressionUUID->"4f250450-fa74-4d52-9cd1-ec6178a7ef42"],
Cell[540837, 9978, 14762, 285, 403, "Output",ExpressionUUID->"4c7e90c2-62f8-42f4-b200-245d122d03a4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[555648, 10269, 149, 3, 68, "Section",ExpressionUUID->"5c18e344-8be0-438b-b0e4-59df33d513a0"],
Cell[555800, 10274, 292, 7, 35, "Text",ExpressionUUID->"447d0012-c3fd-4b95-9ce7-a3c923527193"],
Cell[CellGroupData[{
Cell[556117, 10285, 1490, 39, 68, "Input",ExpressionUUID->"5ae86928-7534-496d-a167-26e47e04fcff"],
Cell[557610, 10326, 3253, 85, 208, "Output",ExpressionUUID->"4ef49ff5-5ddb-4f28-bce0-6f8897812c85"]
}, Open  ]],
Cell[560878, 10414, 1453, 34, 131, "Text",ExpressionUUID->"8512134b-82bc-47fe-ab88-96479ac0a52a"],
Cell[CellGroupData[{
Cell[562356, 10452, 470, 11, 46, "Input",ExpressionUUID->"69c71504-6598-4854-968e-2b4fcdf0f1f4"],
Cell[562829, 10465, 338, 6, 33, "Output",ExpressionUUID->"7d3e3488-a246-42a6-b23a-49e396f67885"]
}, Open  ]],
Cell[CellGroupData[{
Cell[563204, 10476, 571, 12, 46, "Input",ExpressionUUID->"39df4cb1-411b-44e9-a534-88608cc244ed"],
Cell[563778, 10490, 652, 13, 44, "Message",ExpressionUUID->"86c856a1-ad62-421d-8e6a-c40425e37d98"],
Cell[564433, 10505, 369, 7, 33, "Output",ExpressionUUID->"4c9de3ea-0260-4476-a89f-e44a154f793c"]
}, Open  ]],
Cell[564817, 10515, 258, 6, 35, "Text",ExpressionUUID->"5f93b004-5055-4a2e-a659-ce0871bf892b"],
Cell[CellGroupData[{
Cell[565100, 10525, 690, 16, 46, "Input",ExpressionUUID->"59aa66a5-6266-4c1f-94be-47593850bafc"],
Cell[565793, 10543, 614, 12, 28, "Message",ExpressionUUID->"03f2ab37-3726-4854-a786-eaadafdd5bf0"],
Cell[566410, 10557, 12365, 246, 372, "Output",ExpressionUUID->"47278aa8-595e-4aad-909b-e50f3996f43d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[578812, 10808, 983, 22, 84, "Input",ExpressionUUID->"0f79703d-2cac-497a-9121-e1918cf006fe"],
Cell[579798, 10832, 601, 13, 28, "Message",ExpressionUUID->"a6a8d2c7-3ae5-48ad-889f-c899123aea96"],
Cell[580402, 10847, 13691, 266, 403, "Output",ExpressionUUID->"3005444e-39c9-4c60-973e-07b38007823f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[594142, 11119, 147, 3, 68, "Section",ExpressionUUID->"b0934b82-b0b0-419d-a118-1492a30f9ea8"],
Cell[594292, 11124, 253, 6, 35, "Text",ExpressionUUID->"33b01d32-5b7d-4ba9-9ef1-67bfcd66c236"],
Cell[CellGroupData[{
Cell[594570, 11134, 890, 18, 84, "Input",ExpressionUUID->"8da017b4-0cee-4af0-ab7c-30cbbbc7279f"],
Cell[595463, 11154, 59123, 1129, 372, "Output",ExpressionUUID->"c3303bc7-69d6-4f55-ab13-211aa4305789"]
}, Open  ]],
Cell[654601, 12286, 309, 6, 58, "Text",ExpressionUUID->"6cf16ae9-6d9c-45d7-a034-ce31031c646f"],
Cell[CellGroupData[{
Cell[654935, 12296, 491, 12, 46, "Input",ExpressionUUID->"575da30f-ce60-4031-ade8-b242d4c6a4b8"],
Cell[655429, 12310, 25942, 509, 361, "Output",ExpressionUUID->"c07d9126-2e45-4ee5-b136-740e6d5f61d6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

